{"ast":null,"code":"import _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nimport React, { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { useAppDispatch, useAppSelecter } from \"../../store/configureStore\";\nimport { styles } from \"../../styles/styles\";\nimport { dateFormatter } from \"../../utils/dateFormatter\";\nimport Detail from \"../../components/item/Detail\";\nimport LoadingScreen from \"../../components/indicator/LoadingScreen\";\nimport { getTenantContractPhoto } from \"../../reducers/tenantSlice\";\nimport AppText from \"../../components/text/AppText\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar StoreDetails = function StoreDetails(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  var _useAppSelecter = useAppSelecter(function (state) {\n    return state.tenant;\n  }),\n      tenant = _useAppSelecter.tenant,\n      contractPhotos = _useAppSelecter.contractPhotos,\n      isFetchingTenantDetails = _useAppSelecter.isFetchingTenantDetails,\n      isFetchingPhotos = _useAppSelecter.isFetchingPhotos;\n\n  var dispatch = useAppDispatch();\n  var _ref2 = tenant,\n      tenantUniqueId = _ref2.tenantUniqueId;\n\n  var _ref3 = tenant == null ? void 0 : tenant.contract,\n      slotNumber = _ref3.slotNumber,\n      size = _ref3.size,\n      price = _ref3.price,\n      startDate = _ref3.startDate,\n      endDate = _ref3.endDate;\n\n  useEffect(function () {\n    var _tenant$contract;\n\n    if (!!tenant) dispatch(getTenantContractPhoto(tenant == null ? void 0 : (_tenant$contract = tenant.contract) == null ? void 0 : _tenant$contract.id));\n  }, []);\n  var bg_light = styles.bg_light,\n      container = styles.container,\n      p_15 = styles.p_15,\n      rounded = styles.rounded;\n  if (isFetchingTenantDetails || isFetchingPhotos) return _jsx(LoadingScreen, {});\n  return _jsxs(View, {\n    style: [bg_light, container, p_15, rounded],\n    children: [_jsx(Detail, {\n      title: \"Account Number\",\n      value: tenantUniqueId\n    }), _jsx(Detail, {\n      title: \"Slot Number\",\n      value: slotNumber\n    }), _jsx(Detail, {\n      title: \"Size\",\n      value: size\n    }), _jsx(Detail, {\n      title: \"Rental Fee\",\n      value: price\n    }), _jsx(Detail, {\n      title: \"Contract Start Date\",\n      value: dateFormatter(startDate)\n    }), _jsx(Detail, {\n      title: \"Contract End Date\",\n      value: dateFormatter(endDate)\n    }), _jsx(AppText, {\n      as: \"h5\",\n      bold: true,\n      children: \"Contact Photos\"\n    })]\n  });\n};\n\nexport default StoreDetails;","map":{"version":3,"sources":["/Users/airagalias/Documents/GitHub/maximarket-mobile-ts/src/screens/store/StoreDetails.tsx"],"names":["React","useEffect","useAppDispatch","useAppSelecter","styles","dateFormatter","Detail","LoadingScreen","getTenantContractPhoto","AppText","StoreDetails","state","tenant","contractPhotos","isFetchingTenantDetails","isFetchingPhotos","dispatch","tenantUniqueId","contract","slotNumber","size","price","startDate","endDate","id","bg_light","container","p_15","rounded"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAGA,SAASC,cAAT,EAAyBC,cAAzB;AACA,SAASC,MAAT;AACA,SAASC,aAAT;AACA,OAAOC,MAAP;AACA,OAAOC,aAAP;AACA,SAASC,sBAAT;AACA,OAAOC,OAAP;;;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAS;AAAA;;AAC1B,wBAA8EP,cAAc,CAAC,UAACQ,KAAD;AAAA,WAAWA,KAAK,CAACC,MAAjB;AAAA,GAAD,CAA5F;AAAA,MAAQA,MAAR,mBAAQA,MAAR;AAAA,MAAgBC,cAAhB,mBAAgBA,cAAhB;AAAA,MAAgCC,uBAAhC,mBAAgCA,uBAAhC;AAAA,MAAyDC,gBAAzD,mBAAyDA,gBAAzD;;AAEA,MAAMC,QAAQ,GAAGd,cAAc,EAA/B;AAEA,cAA2BU,MAA3B;AAAA,MAAQK,cAAR,SAAQA,cAAR;;AACA,cAAyDL,MAAzD,oBAAyDA,MAAM,CAAEM,QAAjE;AAAA,MAAQC,UAAR,SAAQA,UAAR;AAAA,MAAoBC,IAApB,SAAoBA,IAApB;AAAA,MAA0BC,KAA1B,SAA0BA,KAA1B;AAAA,MAAiCC,SAAjC,SAAiCA,SAAjC;AAAA,MAA4CC,OAA5C,SAA4CA,OAA5C;;AAEAtB,EAAAA,SAAS,CAAC,YAAM;AAAA;;AACZ,QAAI,CAAC,CAACW,MAAN,EAAcI,QAAQ,CAACR,sBAAsB,CAACI,MAAD,wCAACA,MAAM,CAAEM,QAAT,qBAAC,iBAAkBM,EAAnB,CAAvB,CAAR;AACjB,GAFQ,EAEN,EAFM,CAAT;AAIA,MAAQC,QAAR,GAA+CrB,MAA/C,CAAQqB,QAAR;AAAA,MAAkBC,SAAlB,GAA+CtB,MAA/C,CAAkBsB,SAAlB;AAAA,MAA6BC,IAA7B,GAA+CvB,MAA/C,CAA6BuB,IAA7B;AAAA,MAAmCC,OAAnC,GAA+CxB,MAA/C,CAAmCwB,OAAnC;AAEA,MAAId,uBAAuB,IAAIC,gBAA/B,EAAiD,OAAO,KAAC,aAAD,KAAP;AAEjD,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACU,QAAD,EAAWC,SAAX,EAAsBC,IAAtB,EAA4BC,OAA5B,CAAb;AAAA,eACI,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,gBAAd;AAA+B,MAAA,KAAK,EAAEX;AAAtC,MADJ,EAEI,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,aAAd;AAA4B,MAAA,KAAK,EAAEE;AAAnC,MAFJ,EAGI,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAqB,MAAA,KAAK,EAAEC;AAA5B,MAHJ,EAII,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,YAAd;AAA2B,MAAA,KAAK,EAAEC;AAAlC,MAJJ,EAKI,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,qBAAd;AAAoC,MAAA,KAAK,EAAEhB,aAAa,CAACiB,SAAD;AAAxD,MALJ,EAMI,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,mBAAd;AAAkC,MAAA,KAAK,EAAEjB,aAAa,CAACkB,OAAD;AAAtD,MANJ,EAOI,KAAC,OAAD;AAAS,MAAA,EAAE,EAAC,IAAZ;AAAiB,MAAA,IAAI,MAArB;AAAA;AAAA,MAPJ;AAAA,IADJ;AAWH,CA3BD;;AA6BA,eAAeb,YAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { View } from 'react-native';\n\nimport { useAppDispatch, useAppSelecter } from '../../store/configureStore';\nimport { styles } from '../../styles/styles';\nimport { dateFormatter } from '../../utils/dateFormatter';\nimport Detail from '../../components/item/Detail';\nimport LoadingScreen from '../../components/indicator/LoadingScreen';\nimport { getTenantContractPhoto } from '../../reducers/tenantSlice';\nimport AppText from '../../components/text/AppText';\n\nconst StoreDetails = ({ }) => {\n    const { tenant, contractPhotos, isFetchingTenantDetails, isFetchingPhotos } = useAppSelecter((state) => state.tenant)\n\n    const dispatch = useAppDispatch()\n\n    const { tenantUniqueId } = tenant!;\n    const { slotNumber, size, price, startDate, endDate, } = tenant?.contract!;\n\n    useEffect(() => {\n        if (!!tenant) dispatch(getTenantContractPhoto(tenant?.contract?.id!))\n    }, [])\n\n    const { bg_light, container, p_15, rounded } = styles;\n\n    if (isFetchingTenantDetails || isFetchingPhotos) return <LoadingScreen />\n\n    return (\n        <View style={[bg_light, container, p_15, rounded]}>\n            <Detail title=\"Account Number\" value={tenantUniqueId} />\n            <Detail title=\"Slot Number\" value={slotNumber} />\n            <Detail title=\"Size\" value={size} />\n            <Detail title=\"Rental Fee\" value={price} />\n            <Detail title=\"Contract Start Date\" value={dateFormatter(startDate)} />\n            <Detail title=\"Contract End Date\" value={dateFormatter(endDate)} />\n            <AppText as=\"h5\" bold>Contact Photos</AppText>\n        </View>\n    );\n}\n\nexport default StoreDetails;\n\n// {\n//     !!contractPhotos ?\n//       contractPhotos.map(i =>\n//         <>\n//           <Image\n//             source={{ uri: i.url }}\n//             resizeMode='contain'\n//             style={{\n//               aspectRatio: 1,\n//               width: '100%',\n//               height: undefined,\n//               borderColor: colors.grey,\n//               borderRadius: 10,\n//               borderWidth: 1,\n//             }}\n//           />\n//           <TextStyle as=\"h5\" italic>Uploaded on {moment(i.dateCreated).format(\"MMM DD, YYYY\")}</TextStyle>\n//         </>\n//       )\n//       :\n//       <Segment alignItems=\"center\" borderWidth={1} borderColor={colors.grey}>\n//         <TextStyle italic bold color={colors.red}>\n//           No contract photo yet.\n//         </TextStyle>\n//       </Segment>\n\n//   }"]},"metadata":{},"sourceType":"module"}