{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport InvoiceBadge from \"../../components/badge/InvoiceBadge\";\nimport LoadingScreen from \"../../components/indicator/LoadingScreen\";\nimport AppText from \"../../components/text/AppText\";\nimport { useAppDispatch, useAppSelecter } from \"../../store/configureStore\";\nimport colors from \"../../styles/colors\";\nimport { styles } from \"../../styles/styles\";\nimport { dateFormatter } from \"../../utils/dateFormatter\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar InvoiceDetailsScreen = function InvoiceDetailsScreen() {\n  var dispatch = useAppDispatch();\n\n  var _useAppSelecter = useAppSelecter(function (state) {\n    return state.invoice;\n  }),\n      invoice = _useAppSelecter.invoice,\n      isFetchingInvoiceDetails = _useAppSelecter.isFetchingInvoiceDetails;\n\n  var _ref = invoice,\n      amount = _ref.amount,\n      dateCreated = _ref.dateCreated,\n      dueDate = _ref.dueDate,\n      invoiceNumber = _ref.invoiceNumber,\n      invoiceStatus = _ref.invoiceStatus;\n  var badge = styles.badge,\n      bg_light = styles.bg_light,\n      bg_green = styles.bg_green,\n      bg_red = styles.bg_red,\n      container = styles.container,\n      p_5 = styles.p_5,\n      p_15 = styles.p_15,\n      row_center_x_between = styles.row_center_x_between,\n      rounded = styles.rounded,\n      row = styles.row,\n      w_50p = styles.w_50p;\n  var light = colors.light;\n  if (isFetchingInvoiceDetails) return _jsx(LoadingScreen, {});\n  return _jsxs(View, {\n    style: [bg_light, container, p_15, rounded],\n    children: [_jsxs(View, {\n      style: row_center_x_between,\n      children: [_jsxs(AppText, {\n        as: \"h3\",\n        bold: true,\n        children: [\"INV-\" + invoiceNumber, \" \"]\n      }), _jsx(InvoiceBadge, {\n        status: invoiceStatus\n      })]\n    }), _jsxs(AppText, {\n      as: \"h2\",\n      bold: true,\n      children: [amount, \" \"]\n    }), _jsxs(View, {\n      style: row,\n      children: [_jsxs(View, {\n        style: w_50p,\n        children: [_jsx(AppText, {\n          as: \"h5\",\n          bold: true,\n          children: \"Date\"\n        }), _jsx(AppText, {\n          as: \"h5\",\n          bold: true,\n          children: dateFormatter(dateCreated)\n        })]\n      }), _jsxs(View, {\n        style: w_50p,\n        children: [_jsx(AppText, {\n          as: \"h5\",\n          bold: true,\n          children: \"Due Date\"\n        }), _jsx(AppText, {\n          as: \"h5\",\n          bold: true,\n          children: dateFormatter(dueDate)\n        })]\n      })]\n    })]\n  });\n};\n\nexport default InvoiceDetailsScreen;","map":{"version":3,"sources":["/Users/airagalias/Documents/GitHub/maximarket-mobile-ts/src/screens/invoice/InvoiceDetailsScreen.tsx"],"names":["React","InvoiceBadge","LoadingScreen","AppText","useAppDispatch","useAppSelecter","colors","styles","dateFormatter","InvoiceDetailsScreen","dispatch","state","invoice","isFetchingInvoiceDetails","amount","dateCreated","dueDate","invoiceNumber","invoiceStatus","badge","bg_light","bg_green","bg_red","container","p_5","p_15","row_center_x_between","rounded","row","w_50p","light"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAOC,YAAP;AACA,OAAOC,aAAP;AAEA,OAAOC,OAAP;AACA,SAASC,cAAT,EAAyBC,cAAzB;AACA,OAAOC,MAAP;AACA,SAASC,MAAT;AACA,SAASC,aAAT;;;;AAGA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AAG/B,MAAMC,QAAQ,GAAGN,cAAc,EAA/B;;AACA,wBAA8CC,cAAc,CAAC,UAACM,KAAD;AAAA,WAAWA,KAAK,CAACC,OAAjB;AAAA,GAAD,CAA5D;AAAA,MAAQA,OAAR,mBAAQA,OAAR;AAAA,MAAiBC,wBAAjB,mBAAiBA,wBAAjB;;AAEA,aAAwED,OAAxE;AAAA,MAAQE,MAAR,QAAQA,MAAR;AAAA,MAAgBC,WAAhB,QAAgBA,WAAhB;AAAA,MAA6BC,OAA7B,QAA6BA,OAA7B;AAAA,MAAsCC,aAAtC,QAAsCA,aAAtC;AAAA,MAAqDC,aAArD,QAAqDA,aAArD;AAEA,MAAQC,KAAR,GAA+GZ,MAA/G,CAAQY,KAAR;AAAA,MAAeC,QAAf,GAA+Gb,MAA/G,CAAea,QAAf;AAAA,MAAyBC,QAAzB,GAA+Gd,MAA/G,CAAyBc,QAAzB;AAAA,MAAmCC,MAAnC,GAA+Gf,MAA/G,CAAmCe,MAAnC;AAAA,MAA2CC,SAA3C,GAA+GhB,MAA/G,CAA2CgB,SAA3C;AAAA,MAAsDC,GAAtD,GAA+GjB,MAA/G,CAAsDiB,GAAtD;AAAA,MAA2DC,IAA3D,GAA+GlB,MAA/G,CAA2DkB,IAA3D;AAAA,MAAiEC,oBAAjE,GAA+GnB,MAA/G,CAAiEmB,oBAAjE;AAAA,MAAuFC,OAAvF,GAA+GpB,MAA/G,CAAuFoB,OAAvF;AAAA,MAAgGC,GAAhG,GAA+GrB,MAA/G,CAAgGqB,GAAhG;AAAA,MAAqGC,KAArG,GAA+GtB,MAA/G,CAAqGsB,KAArG;AACA,MAAQC,KAAR,GAAkBxB,MAAlB,CAAQwB,KAAR;AAGA,MAAIjB,wBAAJ,EAA8B,OAAO,KAAC,aAAD,KAAP;AAE9B,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACO,QAAD,EAAWG,SAAX,EAAsBE,IAAtB,EAA4BE,OAA5B,CAAb;AAAA,eAEI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAED,oBAAb;AAAA,iBACI,MAAC,OAAD;AAAS,QAAA,EAAE,EAAC,IAAZ;AAAiB,QAAA,IAAI,MAArB;AAAA,4BAA8BT,aAA9B;AAAA,QADJ,EAEI,KAAC,YAAD;AAAc,QAAA,MAAM,EAAEC;AAAtB,QAFJ;AAAA,MAFJ,EAMI,MAAC,OAAD;AAAS,MAAA,EAAE,EAAC,IAAZ;AAAiB,MAAA,IAAI,MAArB;AAAA,iBAAuBJ,MAAvB;AAAA,MANJ,EAQI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEc,GAAb;AAAA,iBACI,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,KAAb;AAAA,mBACI,KAAC,OAAD;AAAS,UAAA,EAAE,EAAC,IAAZ;AAAiB,UAAA,IAAI,MAArB;AAAA;AAAA,UADJ,EAEI,KAAC,OAAD;AAAS,UAAA,EAAE,EAAC,IAAZ;AAAiB,UAAA,IAAI,MAArB;AAAA,oBAAuBrB,aAAa,CAACO,WAAD;AAApC,UAFJ;AAAA,QADJ,EAMI,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEc,KAAb;AAAA,mBACI,KAAC,OAAD;AAAS,UAAA,EAAE,EAAC,IAAZ;AAAiB,UAAA,IAAI,MAArB;AAAA;AAAA,UADJ,EAEI,KAAC,OAAD;AAAS,UAAA,EAAE,EAAC,IAAZ;AAAiB,UAAA,IAAI,MAArB;AAAA,oBAAuBrB,aAAa,CAACQ,OAAD;AAApC,UAFJ;AAAA,QANJ;AAAA,MARJ;AAAA,IADJ;AA8BH,CA5CD;;AA8CA,eAAeP,oBAAf","sourcesContent":["import React from 'react';\nimport { Text, View } from 'react-native';\nimport InvoiceBadge from '../../components/badge/InvoiceBadge';\nimport LoadingScreen from '../../components/indicator/LoadingScreen';\nimport Detail from '../../components/item/Detail';\nimport AppText from '../../components/text/AppText';\nimport { useAppDispatch, useAppSelecter } from '../../store/configureStore';\nimport colors from '../../styles/colors';\nimport { styles } from '../../styles/styles';\nimport { dateFormatter } from '../../utils/dateFormatter';\n\n\nconst InvoiceDetailsScreen = () => {\n\n\n    const dispatch = useAppDispatch()\n    const { invoice, isFetchingInvoiceDetails } = useAppSelecter((state) => state.invoice)\n\n    const { amount, dateCreated, dueDate, invoiceNumber, invoiceStatus, } = invoice!\n\n    const { badge, bg_light, bg_green, bg_red, container, p_5, p_15, row_center_x_between, rounded, row, w_50p } = styles;\n    const { light } = colors\n\n\n    if (isFetchingInvoiceDetails) return <LoadingScreen />\n\n    return (\n        <View style={[bg_light, container, p_15, rounded]}>\n\n            <View style={row_center_x_between}>\n                <AppText as=\"h3\" bold>{`INV-${invoiceNumber}`} </AppText>\n                <InvoiceBadge status={invoiceStatus} />\n            </View>\n            <AppText as=\"h2\" bold>{amount} </AppText>\n\n            <View style={row}>\n                <View style={w_50p}>\n                    <AppText as=\"h5\" bold>Date</AppText>\n                    <AppText as=\"h5\" bold>{dateFormatter(dateCreated)}</AppText>\n                </View>\n\n                <View style={w_50p}>\n                    <AppText as=\"h5\" bold>Due Date</AppText>\n                    <AppText as=\"h5\" bold>{dateFormatter(dueDate)}</AppText>\n                </View>\n            </View>\n\n            {/* <Detail title=\"Date Created\" value={dateFormatter(dateCreated)} />\n            <Detail title=\"Due Date\" value={dateFormatter(dueDate)} />\n\n            <Detail title=\"Date Created\" value={dateFormatter(dateCreated)} />\n            <Detail title=\"Due Date\" value={dateFormatter(dueDate)} /> */}\n\n\n        </View>\n    );\n}\n\nexport default InvoiceDetailsScreen;"]},"metadata":{},"sourceType":"module"}