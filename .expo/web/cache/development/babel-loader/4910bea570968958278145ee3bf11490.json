{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { AntDesign } from '@expo/vector-icons';\nimport { FontAwesome } from '@expo/vector-icons';\nimport colors from \"../../styles/colors\";\nimport { styles } from \"../../styles/styles\";\nimport AppButton from \"../../components/button/AppButton\";\nimport FormTextInput from \"../../components/input/FormTextInput\";\nimport * as Yup from 'yup';\nimport { useAppDispatch } from \"../../store/configureStore\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar AccountFormScreen = function AccountFormScreen() {\n  var dispatch = useAppDispatch();\n\n  var _useState = useState({\n    firstName: \"\",\n    lastName: \"\",\n    businessName: \"\",\n    phone: \"\",\n    address: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      tenantInput = _useState2[0],\n      setTenantInput = _useState2[1];\n\n  useEffect(function () {}, []);\n  var validationSchema = Yup.object().shape({\n    firstName: Yup.string().required().label('First name'),\n    lastName: Yup.string().required().label('Last name'),\n    businessName: Yup.string().required().label('Business name'),\n    phone: Yup.string().required().label('Phone'),\n    address: Yup.string().required().label('Address')\n  });\n  var container = styles.container;\n  return _jsxs(View, {\n    style: [container],\n    children: [_jsx(FormTextInput, {\n      icon: _jsx(FontAwesome, {\n        name: \"user\",\n        size: 18,\n        color: colors.primary\n      }),\n      label: \"First Name\",\n      placeholder: \"First Name\"\n    }), _jsx(FormTextInput, {\n      icon: _jsx(FontAwesome, {\n        name: \"user\",\n        size: 18,\n        color: colors.primary\n      }),\n      label: \"Last Name\",\n      placeholder: \"Last Name\"\n    }), _jsx(FormTextInput, {\n      icon: _jsx(AntDesign, {\n        name: \"idcard\",\n        size: 18,\n        color: colors.primary\n      }),\n      label: \"Business Name\",\n      placeholder: \"Business Name\"\n    }), _jsx(FormTextInput, {\n      icon: _jsx(FontAwesome, {\n        name: \"phone\",\n        size: 18,\n        color: colors.primary\n      }),\n      label: \"Contact Number\",\n      placeholder: \"Contact Number\"\n    }), _jsx(FormTextInput, {\n      icon: _jsx(FontAwesome, {\n        name: \"home\",\n        size: 18,\n        color: colors.primary\n      }),\n      label: \"Address\",\n      placeholder: \"Address\"\n    }), _jsx(AppButton, {\n      title: \"UPDATE\",\n      onPress: function onPress() {\n        {}\n      }\n    })]\n  });\n};\n\nexport default AccountFormScreen;","map":{"version":3,"sources":["/Users/airagalias/Documents/GitHub/maximarket-mobile-ts/src/screens/account/AccountFormScreen.tsx"],"names":["React","useEffect","useState","AntDesign","FontAwesome","colors","styles","AppButton","FormTextInput","Yup","useAppDispatch","AccountFormScreen","dispatch","firstName","lastName","businessName","phone","address","tenantInput","setTenantInput","validationSchema","object","shape","string","required","label","container","primary"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { View } from 'react-native';\nimport { AntDesign } from '@expo/vector-icons';\nimport { FontAwesome } from '@expo/vector-icons';\n\nimport colors from '../../styles/colors';\nimport { styles } from '../../styles/styles';\nimport AppButton from '../../components/button/AppButton';\nimport FormTextInput from '../../components/input/FormTextInput';\nimport * as Yup from 'yup';\nimport { useAppDispatch } from '../../store/configureStore';\n\nconst AccountFormScreen = () => {\n    const dispatch = useAppDispatch();\n\n    const [tenantInput, setTenantInput] = useState({\n        firstName: \"\",\n        lastName: \"\",\n        businessName: \"\",\n        phone: \"\",\n        address: \"\"\n    });\n\n    useEffect(() => { }, [])\n\n    const validationSchema = Yup.object().shape({\n        firstName: Yup.string().required().label('First name'),\n        lastName: Yup.string().required().label('Last name'),\n        businessName: Yup.string().required().label('Business name'),\n        phone: Yup.string().required().label('Phone'),\n        address: Yup.string().required().label('Address'),\n    });\n\n    const { container } = styles\n\n    return (\n        <View style={[container]}>\n\n            {/* <Detail title=\"Status\" value={\n                isActive ?\n                    <View style={[badge, bg_green]} >\n                        <AppText as=\"h5\" bold color={light} italic>Active</AppText>\n                    </View> :\n\n                    <View style={[badge, bg_red]} >\n                        <AppText as=\"h5\" bold color={light} italic>Deativated</AppText>\n                    </View>\n            } /> */}\n            <FormTextInput icon={<FontAwesome name=\"user\" size={18} color={colors.primary} />} label='First Name' placeholder='First Name' />\n            <FormTextInput icon={<FontAwesome name=\"user\" size={18} color={colors.primary} />} label='Last Name' placeholder='Last Name' />\n            <FormTextInput icon={<AntDesign name=\"idcard\" size={18} color={colors.primary} />} label='Business Name' placeholder='Business Name' />\n            <FormTextInput icon={<FontAwesome name=\"phone\" size={18} color={colors.primary} />} label='Contact Number' placeholder='Contact Number' />\n            <FormTextInput icon={<FontAwesome name=\"home\" size={18} color={colors.primary} />} label='Address' placeholder='Address' />\n            <AppButton title='UPDATE' onPress={() => { { } }} />\n        </View>\n    );\n}\n\nexport default AccountFormScreen;"]},"metadata":{},"sourceType":"module"}