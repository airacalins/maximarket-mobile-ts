{"ast":null,"code":"import React, { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport LoadingScreen from \"../../components/indicator/LoadingScreen\";\nimport FormTextInput from \"../../components/input/FormTextInput\";\nimport AppText from \"../../components/text/AppText\";\nimport { useAppSelecter } from \"../../store/configureStore\";\nimport colors from \"../../styles/colors\";\nimport { styles } from \"../../styles/styles\";\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport AppButton from \"../../components/button/AppButton\";\nimport { fetchInvoiceDetailsAsync } from \"../../reducers/invoiceSlice\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar PaymentFormScreen = function PaymentFormScreen() {\n  var _useAppSelecter = useAppSelecter(function (state) {\n    return state.tenant;\n  }),\n      tenant = _useAppSelecter.tenant;\n\n  var _useAppSelecter2 = useAppSelecter(function (state) {\n    return state.invoice;\n  }),\n      invoice = _useAppSelecter2.invoice,\n      isFetchingInvoiceDetails = _useAppSelecter2.isFetchingInvoiceDetails;\n\n  useEffect(function () {\n    if (!invoice) fetchInvoiceDetailsAsync(tenant == null ? void 0 : tenant.tenantUniqueId);\n  }, [invoice]);\n  var bg_light = styles.bg_light,\n      container = styles.container,\n      my_5 = styles.my_5,\n      p_30 = styles.p_30,\n      row_center = styles.row_center;\n  var darkGrey = colors.darkGrey,\n      primary = colors.primary;\n  if (isFetchingInvoiceDetails || invoice) return _jsx(LoadingScreen, {});\n  var invoiceNumber = invoice.invoiceNumber;\n  return _jsxs(View, {\n    style: container,\n    children: [_jsxs(View, {\n      style: [my_5],\n      children: [_jsx(AppText, {\n        as: \"h5\",\n        bold: true,\n        color: darkGrey,\n        children: \"Invoice Number\"\n      }), _jsx(AppText, {\n        bold: true,\n        children: invoiceNumber\n      })]\n    }), _jsx(FormTextInput, {\n      label: \"Mode of Payment\"\n    }), _jsx(FormTextInput, {\n      label: \"Amount\",\n      icon: _jsx(MaterialIcons, {\n        name: \"money\",\n        size: 20,\n        color: primary\n      }),\n      placeholder: \"Amount\"\n    }), _jsxs(View, {\n      style: my_5,\n      children: [_jsx(AppText, {\n        as: \"h5\",\n        bold: true,\n        color: darkGrey,\n        children: \"Proof of Payment\"\n      }), _jsx(View, {\n        style: [bg_light, p_30, row_center],\n        children: _jsx(MaterialCommunityIcons, {\n          name: \"camera-account\",\n          size: 50,\n          color: darkGrey\n        })\n      })]\n    }), _jsx(AppButton, {\n      title: \"Submit\"\n    })]\n  });\n};\n\nexport default PaymentFormScreen;","map":{"version":3,"sources":["/Users/airagalias/Documents/GitHub/maximarket-mobile-ts/src/screens/payment/PaymentFormScreen.tsx"],"names":["React","useEffect","LoadingScreen","FormTextInput","AppText","useAppSelecter","colors","styles","MaterialIcons","MaterialCommunityIcons","AppButton","fetchInvoiceDetailsAsync","PaymentFormScreen","state","tenant","invoice","isFetchingInvoiceDetails","tenantUniqueId","bg_light","container","my_5","p_30","row_center","darkGrey","primary","invoiceNumber"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Text, View } from 'react-native';\nimport LoadingScreen from '../../components/indicator/LoadingScreen';\nimport FormTextInput from '../../components/input/FormTextInput';\nimport AppText from '../../components/text/AppText';\nimport { useAppSelecter } from '../../store/configureStore';\nimport colors from '../../styles/colors';\nimport { styles } from '../../styles/styles';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\n\nimport AppButton from '../../components/button/AppButton';\nimport { fetchInvoiceDetailsAsync } from '../../reducers/invoiceSlice';\n\n\nconst PaymentFormScreen = () => {\n    const { tenant } = useAppSelecter((state) => state.tenant)\n    const { invoice, isFetchingInvoiceDetails } = useAppSelecter((state) => state.invoice)\n\n    useEffect(() => {\n        if (!invoice) fetchInvoiceDetailsAsync(tenant?.tenantUniqueId!)\n    }, [invoice])\n\n\n    const { bg_light, container, my_5, p_30, row_center } = styles\n    const { darkGrey, primary } = colors\n\n\n    if (isFetchingInvoiceDetails || invoice) return <LoadingScreen />\n    const { invoiceNumber } = invoice\n\n\n    return (\n        <View style={container}>\n\n            <View style={[my_5]}>\n                <AppText as=\"h5\" bold color={darkGrey} >Invoice Number</AppText>\n                <AppText bold >{invoiceNumber}</AppText>\n            </View>\n\n            <FormTextInput label='Mode of Payment' />\n            <FormTextInput label='Amount' icon={<MaterialIcons name=\"money\" size={20} color={primary} />} placeholder='Amount' />\n\n            <View style={my_5}>\n                <AppText as=\"h5\" bold color={darkGrey} >Proof of Payment</AppText>\n                <View style={[bg_light, p_30, row_center]}>\n                    <MaterialCommunityIcons name=\"camera-account\" size={50} color={darkGrey} />\n                </View>\n            </View>\n\n            <AppButton title='Submit' />\n\n        </View>\n    );\n}\n\nexport default PaymentFormScreen;"]},"metadata":{},"sourceType":"module"}