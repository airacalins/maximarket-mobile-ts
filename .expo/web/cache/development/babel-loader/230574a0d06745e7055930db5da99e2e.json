{"ast":null,"code":"import _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport agent from \"../api/agent\";\nvar initialState = {\n  slots: [],\n  isFetchingSlots: false,\n  slot: undefined,\n  isFetchingSlotDetails: false\n};\nexport var fetchSlotsAsync = createAsyncThunk('slots/fetchSlotsAsync', function _callee(_, thunkAPI) {\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(agent.Slot.list());\n\n        case 3:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 6:\n          _context.prev = 6;\n          _context.t0 = _context[\"catch\"](0);\n          return _context.abrupt(\"return\", thunkAPI.rejectWithValue({\n            error: _context.t0.data\n          }));\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n});\nexport var fetchSlotDetailsAsync = createAsyncThunk('slots/fetchSlotDetailsAsync', function _callee2(id, thunkAPI) {\n  return _regeneratorRuntime.async(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(agent.Slot.details(id));\n\n        case 3:\n          return _context2.abrupt(\"return\", _context2.sent);\n\n        case 6:\n          _context2.prev = 6;\n          _context2.t0 = _context2[\"catch\"](0);\n          return _context2.abrupt(\"return\", thunkAPI.rejectWithValue({\n            error: _context2.t0.data\n          }));\n\n        case 9:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n});\nexport var slotSlice = createSlice({\n  name: 'slot',\n  initialState: initialState,\n  reducers: {},\n  extraReducers: function extraReducers(builder) {\n    builder.addCase(fetchSlotsAsync.pending, function (state, action) {\n      state.isFetchingSlots = true;\n    });\n    builder.addCase(fetchSlotsAsync.fulfilled, function (state, action) {\n      state.slots = action.payload;\n      state.isFetchingSlots = false;\n    });\n    builder.addCase(fetchSlotsAsync.rejected, function (state, action) {\n      state.isFetchingSlots = false;\n    });\n    builder.addCase(fetchSlotDetailsAsync.pending, function (state, action) {\n      state.isFetchingSlotDetails = true;\n    });\n    builder.addCase(fetchSlotDetailsAsync.fulfilled, function (state, action) {\n      state.slot = action.payload;\n      state.isFetchingSlotDetails = false;\n    });\n    builder.addCase(fetchSlotDetailsAsync.rejected, function (state, action) {\n      state.isFetchingSlotDetails = false;\n    });\n  }\n});\n\n_objectDestructuringEmpty(slotSlice.actions);\n\nexport {};","map":{"version":3,"sources":["C:/Users/Alex/Documents/GitHub/maximarket-mobile-ts/src/reducers/slotSlice.ts"],"names":["createAsyncThunk","createSlice","agent","initialState","slots","isFetchingSlots","slot","undefined","isFetchingSlotDetails","fetchSlotsAsync","_","thunkAPI","Slot","list","rejectWithValue","error","data","fetchSlotDetailsAsync","id","details","slotSlice","name","reducers","extraReducers","builder","addCase","pending","state","action","fulfilled","payload","rejected","actions"],"mappings":"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","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\r\nimport agent from \"../api/agent\";\r\nimport { ISlot } from \"../models/Slot\";\r\n\r\n\r\nexport interface ISlotState {\r\n  slots: ISlot[];\r\n  slot?: ISlot;\r\n  isFetchingSlots: boolean;\r\n  isFetchingSlotDetails: boolean;\r\n}\r\n\r\nconst initialState: ISlotState = {\r\n  slots: [],\r\n  isFetchingSlots: false,\r\n  slot: undefined,\r\n  isFetchingSlotDetails: false,\r\n}\r\n\r\nexport const fetchSlotsAsync = createAsyncThunk<ISlot[]>(\r\n  'slots/fetchSlotsAsync',\r\n  async (_, thunkAPI) => {\r\n    try {\r\n      return await agent.Slot.list();\r\n    } catch (error: any) {\r\n      return thunkAPI.rejectWithValue({error: error.data})\r\n    }\r\n  }\r\n)\r\n\r\nexport const fetchSlotDetailsAsync = createAsyncThunk<ISlot, string>(\r\n  'slots/fetchSlotDetailsAsync',\r\n  async (id, thunkAPI) => {\r\n    try {\r\n      return await agent.Slot.details(id);\r\n    } catch (error: any) {\r\n      return thunkAPI.rejectWithValue({error: error.data})\r\n    }\r\n  }\r\n)\r\n\r\n\r\nexport const slotSlice = createSlice({\r\n  name: 'slot',\r\n  initialState,\r\n  reducers: {},\r\n\r\n  extraReducers: (builder => {\r\n    builder.addCase(fetchSlotsAsync.pending, (state, action) => {\r\n      state.isFetchingSlots = true;\r\n    });\r\n    builder.addCase(fetchSlotsAsync.fulfilled, (state, action) => {\r\n      state.slots = action.payload;\r\n      state.isFetchingSlots = false;\r\n    });\r\n    builder.addCase(fetchSlotsAsync.rejected, (state, action) => {\r\n      state.isFetchingSlots = false;\r\n    });\r\n\r\n    \r\n    builder.addCase(fetchSlotDetailsAsync.pending, (state, action) => {\r\n      state.isFetchingSlotDetails = true;\r\n    });\r\n    builder.addCase(fetchSlotDetailsAsync.fulfilled, (state, action) => {\r\n      state.slot = action.payload;\r\n      state.isFetchingSlotDetails = false;\r\n    });\r\n    builder.addCase(fetchSlotDetailsAsync.rejected, (state, action) => {\r\n      state.isFetchingSlotDetails = false;\r\n    });\r\n  })\r\n})\r\n\r\nexport const {  } = slotSlice.actions;"]},"metadata":{},"sourceType":"module"}