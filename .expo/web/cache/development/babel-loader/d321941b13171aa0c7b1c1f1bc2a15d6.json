{"ast":null,"code":"import _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Detail from \"../../components/item/Detail\";\nimport { useAppSelecter } from \"../../store/configureStore\";\nimport { styles } from \"../../styles/styles\";\nimport { dateFormatter } from \"../../utils/dateFormatter\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar PaymentReceiptScreen = function PaymentReceiptScreen(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  var _useAppSelecter = useAppSelecter(function (state) {\n    return state.invoice;\n  }),\n      paymentResult = _useAppSelecter.paymentResult;\n\n  var container = styles.container,\n      flex_1 = styles.flex_1;\n  return _jsxs(View, {\n    style: [container, flex_1],\n    children: [_jsx(Detail, {\n      title: \"Date\",\n      value: !!paymentResult && dateFormatter(paymentResult == null ? void 0 : paymentResult.dateCreated)\n    }), _jsx(Detail, {\n      title: \"Amount\",\n      value: paymentResult == null ? void 0 : paymentResult.amount\n    }), _jsx(Detail, {\n      title: \"Reference Number\",\n      value: paymentResult == null ? void 0 : paymentResult.referenceNumber\n    })]\n  });\n};\n\nexport default PaymentReceiptScreen;","map":{"version":3,"sources":["/Users/airagalias/Documents/GitHub/maximarket-mobile-ts/src/screens/payment/PaymentReceiptScreen.tsx"],"names":["React","Detail","useAppSelecter","styles","dateFormatter","PaymentReceiptScreen","state","invoice","paymentResult","container","flex_1","dateCreated","amount","referenceNumber"],"mappings":";AAAA,OAAOA,KAAP,MAAiC,OAAjC;;AAGA,OAAOC,MAAP;AAEA,SAASC,cAAT;AACA,SAASC,MAAT;AACA,SAASC,aAAT;;;;AAEA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,OAAS;AAAA;;AAElC,wBAA0BH,cAAc,CAAC,UAACI,KAAD;AAAA,WAAWA,KAAK,CAACC,OAAjB;AAAA,GAAD,CAAxC;AAAA,MAAQC,aAAR,mBAAQA,aAAR;;AAEA,MAAQC,SAAR,GAA8BN,MAA9B,CAAQM,SAAR;AAAA,MAAmBC,MAAnB,GAA8BP,MAA9B,CAAmBO,MAAnB;AAKA,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACD,SAAD,EAAYC,MAAZ,CAAb;AAAA,eACI,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAqB,MAAA,KAAK,EAAE,CAAC,CAACF,aAAF,IAAmBJ,aAAa,CAACI,aAAD,oBAACA,aAAa,CAAEG,WAAhB;AAA5D,MADJ,EAEI,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAuB,MAAA,KAAK,EAAEH,aAAF,oBAAEA,aAAa,CAAEI;AAA7C,MAFJ,EAGI,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,kBAAd;AAAiC,MAAA,KAAK,EAAEJ,aAAF,oBAAEA,aAAa,CAAEK;AAAvD,MAHJ;AAAA,IADJ;AAOH,CAhBD;;AAkBA,eAAeR,oBAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { View } from 'react-native';\nimport LoadingScreen from '../../components/indicator/LoadingScreen';\nimport Detail from '../../components/item/Detail';\nimport { fetchInvoiceDetailsAsync } from '../../reducers/invoiceSlice';\nimport { useAppSelecter } from '../../store/configureStore';\nimport { styles } from '../../styles/styles';\nimport { dateFormatter } from '../../utils/dateFormatter';\n\nconst PaymentReceiptScreen = ({ }) => {\n\n    const { paymentResult } = useAppSelecter((state) => state.invoice)\n\n    const { container, flex_1 } = styles\n\n    // if (!paymentResult) return <LoadingScreen />\n\n\n    return (\n        <View style={[container, flex_1]}>\n            <Detail title='Date' value={!!paymentResult && dateFormatter(paymentResult?.dateCreated)} />\n            <Detail title='Amount' value={paymentResult?.amount} />\n            <Detail title='Reference Number' value={paymentResult?.referenceNumber} />\n        </View>\n    );\n}\n\nexport default PaymentReceiptScreen;"]},"metadata":{},"sourceType":"module"}