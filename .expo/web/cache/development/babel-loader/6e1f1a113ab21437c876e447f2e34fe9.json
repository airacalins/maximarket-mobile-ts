{"ast":null,"code":"import _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nimport React, { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Detail from \"../../components/item/Detail\";\nimport { resetPaymentResult } from \"../../reducers/invoiceSlice\";\nimport { useAppDispatch, useAppSelecter } from \"../../store/configureStore\";\nimport { styles } from \"../../styles/styles\";\nimport { dateFormatter } from \"../../utils/dateFormatter\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar PaymentReceiptScreen = function PaymentReceiptScreen(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  var dispatch = useAppDispatch();\n\n  var _useAppSelecter = useAppSelecter(function (state) {\n    return state.invoice;\n  }),\n      paymentResult = _useAppSelecter.paymentResult;\n\n  var bg_light = styles.bg_light,\n      container_full = styles.container_full,\n      flex_1 = styles.flex_1,\n      rounded = styles.rounded;\n  useEffect(function () {\n    return function () {\n      dispatch(resetPaymentResult());\n    };\n  }, []);\n  return _jsxs(View, {\n    style: [bg_light, container_full, flex_1, rounded],\n    children: [_jsx(Detail, {\n      title: \"Date\",\n      value: !!paymentResult && dateFormatter(paymentResult == null ? void 0 : paymentResult.dateCreated)\n    }), _jsx(Detail, {\n      title: \"Amount\",\n      value: paymentResult == null ? void 0 : paymentResult.amount\n    }), _jsx(Detail, {\n      title: \"Reference Number\",\n      value: paymentResult == null ? void 0 : paymentResult.referenceNumber\n    })]\n  });\n};\n\nexport default PaymentReceiptScreen;","map":{"version":3,"sources":["/Users/airagalias/Documents/GitHub/maximarket-mobile-ts/src/screens/payment/PaymentReceiptScreen.tsx"],"names":["React","useEffect","Detail","resetPaymentResult","useAppDispatch","useAppSelecter","styles","dateFormatter","PaymentReceiptScreen","dispatch","state","invoice","paymentResult","bg_light","container_full","flex_1","rounded","dateCreated","amount","referenceNumber"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAGA,OAAOC,MAAP;AACA,SAAmCC,kBAAnC;AACA,SAASC,cAAT,EAAyBC,cAAzB;AACA,SAASC,MAAT;AACA,SAASC,aAAT;;;;AAEA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,OAAS;AAAA;;AAClC,MAAMC,QAAQ,GAAGL,cAAc,EAA/B;;AAEA,wBAA0BC,cAAc,CAAC,UAACK,KAAD;AAAA,WAAWA,KAAK,CAACC,OAAjB;AAAA,GAAD,CAAxC;AAAA,MAAQC,aAAR,mBAAQA,aAAR;;AAEA,MAAQC,QAAR,GAAsDP,MAAtD,CAAQO,QAAR;AAAA,MAAkBC,cAAlB,GAAsDR,MAAtD,CAAkBQ,cAAlB;AAAA,MAAkCC,MAAlC,GAAsDT,MAAtD,CAAkCS,MAAlC;AAAA,MAA0CC,OAA1C,GAAsDV,MAAtD,CAA0CU,OAA1C;AAIAf,EAAAA,SAAS,CAAC,YAAM;AACZ,WAAQ,YAAM;AAEVQ,MAAAA,QAAQ,CAACN,kBAAkB,EAAnB,CAAR;AACH,KAHD;AAIH,GALQ,EAKN,EALM,CAAT;AAOA,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACU,QAAD,EAAWC,cAAX,EAA2BC,MAA3B,EAAmCC,OAAnC,CAAb;AAAA,eACI,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAqB,MAAA,KAAK,EAAE,CAAC,CAACJ,aAAF,IAAmBL,aAAa,CAACK,aAAD,oBAACA,aAAa,CAAEK,WAAhB;AAA5D,MADJ,EAEI,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAuB,MAAA,KAAK,EAAEL,aAAF,oBAAEA,aAAa,CAAEM;AAA7C,MAFJ,EAGI,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,kBAAd;AAAiC,MAAA,KAAK,EAAEN,aAAF,oBAAEA,aAAa,CAAEO;AAAvD,MAHJ;AAAA,IADJ;AAOH,CAvBD;;AAyBA,eAAeX,oBAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { View } from 'react-native';\nimport LoadingScreen from '../../components/indicator/LoadingScreen';\nimport Detail from '../../components/item/Detail';\nimport { fetchInvoiceDetailsAsync, resetPaymentResult } from '../../reducers/invoiceSlice';\nimport { useAppDispatch, useAppSelecter } from '../../store/configureStore';\nimport { styles } from '../../styles/styles';\nimport { dateFormatter } from '../../utils/dateFormatter';\n\nconst PaymentReceiptScreen = ({ }) => {\n    const dispatch = useAppDispatch()\n\n    const { paymentResult } = useAppSelecter((state) => state.invoice)\n\n    const { bg_light, container_full, flex_1, rounded } = styles\n\n    // if (!paymentResult) return <LoadingScreen />\n\n    useEffect(() => {\n        return (() => {\n\n            dispatch(resetPaymentResult())\n        })\n    }, [])\n\n    return (\n        <View style={[bg_light, container_full, flex_1, rounded]}>\n            <Detail title='Date' value={!!paymentResult && dateFormatter(paymentResult?.dateCreated)} />\n            <Detail title='Amount' value={paymentResult?.amount} />\n            <Detail title='Reference Number' value={paymentResult?.referenceNumber} />\n        </View>\n    );\n}\n\nexport default PaymentReceiptScreen;"]},"metadata":{},"sourceType":"module"}