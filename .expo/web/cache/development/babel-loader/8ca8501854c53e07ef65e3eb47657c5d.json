{"ast":null,"code":"import _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport agent from \"../api/agent\";\nvar initialState = {\n  invoices: [],\n  isFetchingInvoices: false,\n  invoice: undefined,\n  isFetchingInvoiceDetails: false,\n  isSaving: false,\n  isError: false\n};\nexport var createPaymentAsync = createAsyncThunk(\"invoices/createPaymentAsync\", function _callee(payment, thunkAPI) {\n  var bodyFormData;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          bodyFormData = new FormData();\n          bodyFormData.append('invoiceId', payment.invoiceId);\n          bodyFormData.append('file', payment.file);\n          bodyFormData.append('modeOfPaymentId', payment.modeOfPaymentId);\n          bodyFormData.append('amount', \"\" + payment.amount);\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(agent.Invoice.create(bodyFormData));\n\n        case 8:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 11:\n          _context.prev = 11;\n          _context.t0 = _context[\"catch\"](0);\n          return _context.abrupt(\"return\", thunkAPI.rejectWithValue({\n            error: _context.t0.data\n          }));\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 11]], Promise);\n});\nexport var fetchInvoicesAsync = createAsyncThunk('invoice/fetchInvoicessAsync', function _callee2(id, thunkAPI) {\n  return _regeneratorRuntime.async(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(agent.Invoice.list(id));\n\n        case 3:\n          return _context2.abrupt(\"return\", _context2.sent);\n\n        case 6:\n          _context2.prev = 6;\n          _context2.t0 = _context2[\"catch\"](0);\n          return _context2.abrupt(\"return\", thunkAPI.rejectWithValue({\n            error: _context2.t0.data\n          }));\n\n        case 9:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n});\nexport var fetchInvoiceDetailsAsync = createAsyncThunk('invoice/fetchInvoiceDetailsAsync', function _callee3(id, thunkAPI) {\n  return _regeneratorRuntime.async(function _callee3$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(agent.Invoice.details(id));\n\n        case 3:\n          return _context3.abrupt(\"return\", _context3.sent);\n\n        case 6:\n          _context3.prev = 6;\n          _context3.t0 = _context3[\"catch\"](0);\n          return _context3.abrupt(\"return\", thunkAPI.rejectWithValue({\n            error: _context3.t0.data\n          }));\n\n        case 9:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n});\nexport var invoiceSlice = createSlice({\n  name: 'invoice',\n  initialState: initialState,\n  reducers: {},\n  extraReducers: function extraReducers(builder) {\n    builder.addCase(createPaymentAsync.pending, function (state, action) {\n      state.isSaving = true;\n    });\n    builder.addCase(createPaymentAsync.fulfilled, function (state, action) {\n      state.isSaving = false;\n    });\n    builder.addCase(createPaymentAsync.rejected, function (state, action) {\n      state.isSaving = false;\n    });\n    builder.addCase(fetchInvoicesAsync.pending, function (state, action) {\n      state.isError = false;\n      state.isFetchingInvoices = true;\n    });\n    builder.addCase(fetchInvoicesAsync.fulfilled, function (state, action) {\n      state.invoices = action.payload;\n      state.isError = false;\n      state.isFetchingInvoices = false;\n    });\n    builder.addCase(fetchInvoicesAsync.rejected, function (state, action) {\n      state.isError = true;\n      state.isFetchingInvoices = false;\n    });\n    builder.addCase(fetchInvoiceDetailsAsync.pending, function (state, action) {\n      state.isError = false;\n      state.isFetchingInvoiceDetails = true;\n    });\n    builder.addCase(fetchInvoiceDetailsAsync.fulfilled, function (state, action) {\n      state.invoice = action.payload;\n      state.isError = false;\n      state.isFetchingInvoiceDetails = false;\n    });\n    builder.addCase(fetchInvoiceDetailsAsync.rejected, function (state, action) {\n      state.isError = true;\n      state.isFetchingInvoiceDetails = false;\n    });\n  }\n});\n\n_objectDestructuringEmpty(invoiceSlice.actions);\n\nexport {};","map":{"version":3,"sources":["/Users/airagalias/Documents/GitHub/maximarket-mobile-ts/src/reducers/invoiceSlice.ts"],"names":["createAsyncThunk","createSlice","agent","initialState","invoices","isFetchingInvoices","invoice","undefined","isFetchingInvoiceDetails","isSaving","isError","createPaymentAsync","payment","thunkAPI","bodyFormData","FormData","append","invoiceId","file","modeOfPaymentId","amount","Invoice","create","rejectWithValue","error","data","fetchInvoicesAsync","id","list","fetchInvoiceDetailsAsync","details","invoiceSlice","name","reducers","extraReducers","builder","addCase","pending","state","action","fulfilled","rejected","payload","actions"],"mappings":";;AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,KAAP;AAYA,IAAMC,YAA2B,GAAG;AAClCC,EAAAA,QAAQ,EAAE,EADwB;AAElCC,EAAAA,kBAAkB,EAAE,KAFc;AAGlCC,EAAAA,OAAO,EAAEC,SAHyB;AAIlCC,EAAAA,wBAAwB,EAAE,KAJQ;AAKlCC,EAAAA,QAAQ,EAAE,KALwB;AAMlCC,EAAAA,OAAO,EAAE;AANyB,CAApC;AASA,OAAO,IAAMC,kBAAkB,GAAGX,gBAAgB,CAChD,6BADgD,EAEhD,iBAAOY,OAAP,EAAgBC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGUC,UAAAA,YAHV,GAGyB,IAAIC,QAAJ,EAHzB;AAIID,UAAAA,YAAY,CAACE,MAAb,CAAoB,WAApB,EAAiCJ,OAAO,CAACK,SAAzC;AACAH,UAAAA,YAAY,CAACE,MAAb,CAAoB,MAApB,EAA4BJ,OAAO,CAACM,IAApC;AACAJ,UAAAA,YAAY,CAACE,MAAb,CAAoB,iBAApB,EAAuCJ,OAAO,CAACO,eAA/C;AACAL,UAAAA,YAAY,CAACE,MAAb,CAAoB,QAApB,OAAiCJ,OAAO,CAACQ,MAAzC;AAPJ;AAAA,2CAQiBlB,KAAK,CAACmB,OAAN,CAAcC,MAAd,CAAqBR,YAArB,CARjB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,2CAUWD,QAAQ,CAACU,eAAT,CAAyB;AAAEC,YAAAA,KAAK,EAAE,YAAMC;AAAf,WAAzB,CAVX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAFgD,CAA3C;AAgBP,OAAO,IAAMC,kBAAkB,GAAG1B,gBAAgB,CAChD,6BADgD,EAEhD,kBAAO2B,EAAP,EAAWd,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEiBX,KAAK,CAACmB,OAAN,CAAcO,IAAd,CAAmBD,EAAnB,CAFjB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,4CAIWd,QAAQ,CAACU,eAAT,CAAyB;AAACC,YAAAA,KAAK,EAAE,aAAMC;AAAd,WAAzB,CAJX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAFgD,CAA3C;AAWP,OAAO,IAAMI,wBAAwB,GAAG7B,gBAAgB,CACtD,kCADsD,EAEtD,kBAAO2B,EAAP,EAAWd,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEiBX,KAAK,CAACmB,OAAN,CAAcS,OAAd,CAAsBH,EAAtB,CAFjB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,4CAIWd,QAAQ,CAACU,eAAT,CAAyB;AAACC,YAAAA,KAAK,EAAE,aAAMC;AAAd,WAAzB,CAJX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAFsD,CAAjD;AAWP,OAAO,IAAMM,YAAY,GAAG9B,WAAW,CAAC;AACtC+B,EAAAA,IAAI,EAAE,SADgC;AAEtC7B,EAAAA,YAAY,EAAZA,YAFsC;AAGtC8B,EAAAA,QAAQ,EAAE,EAH4B;AAKtCC,EAAAA,aAAa,EAAG,uBAAAC,OAAO,EAAI;AAEzBA,IAAAA,OAAO,CAACC,OAAR,CAAgBzB,kBAAkB,CAAC0B,OAAnC,EAA4C,UAACC,KAAD,EAAQC,MAAR,EAAmB;AAC7DD,MAAAA,KAAK,CAAC7B,QAAN,GAAiB,IAAjB;AACD,KAFD;AAGA0B,IAAAA,OAAO,CAACC,OAAR,CAAgBzB,kBAAkB,CAAC6B,SAAnC,EAA8C,UAACF,KAAD,EAAQC,MAAR,EAAmB;AAC7DD,MAAAA,KAAK,CAAC7B,QAAN,GAAiB,KAAjB;AACH,KAFD;AAGA0B,IAAAA,OAAO,CAACC,OAAR,CAAgBzB,kBAAkB,CAAC8B,QAAnC,EAA6C,UAACH,KAAD,EAAQC,MAAR,EAAmB;AAC5DD,MAAAA,KAAK,CAAC7B,QAAN,GAAiB,KAAjB;AACH,KAFD;AAIA0B,IAAAA,OAAO,CAACC,OAAR,CAAgBV,kBAAkB,CAACW,OAAnC,EAA4C,UAACC,KAAD,EAAQC,MAAR,EAAmB;AAC3DD,MAAAA,KAAK,CAAC5B,OAAN,GAAgB,KAAhB;AACA4B,MAAAA,KAAK,CAACjC,kBAAN,GAA2B,IAA3B;AACH,KAHD;AAIA8B,IAAAA,OAAO,CAACC,OAAR,CAAgBV,kBAAkB,CAACc,SAAnC,EAA8C,UAACF,KAAD,EAAQC,MAAR,EAAmB;AAC7DD,MAAAA,KAAK,CAAClC,QAAN,GAAiBmC,MAAM,CAACG,OAAxB;AACAJ,MAAAA,KAAK,CAAC5B,OAAN,GAAgB,KAAhB;AACA4B,MAAAA,KAAK,CAACjC,kBAAN,GAA2B,KAA3B;AACH,KAJD;AAKA8B,IAAAA,OAAO,CAACC,OAAR,CAAgBV,kBAAkB,CAACe,QAAnC,EAA6C,UAACH,KAAD,EAAQC,MAAR,EAAmB;AAC5DD,MAAAA,KAAK,CAAC5B,OAAN,GAAgB,IAAhB;AACA4B,MAAAA,KAAK,CAACjC,kBAAN,GAA2B,KAA3B;AACH,KAHD;AAMA8B,IAAAA,OAAO,CAACC,OAAR,CAAgBP,wBAAwB,CAACQ,OAAzC,EAAkD,UAACC,KAAD,EAAQC,MAAR,EAAmB;AACjED,MAAAA,KAAK,CAAC5B,OAAN,GAAgB,KAAhB;AACA4B,MAAAA,KAAK,CAAC9B,wBAAN,GAAiC,IAAjC;AACH,KAHD;AAIA2B,IAAAA,OAAO,CAACC,OAAR,CAAgBP,wBAAwB,CAACW,SAAzC,EAAoD,UAACF,KAAD,EAAQC,MAAR,EAAmB;AACnED,MAAAA,KAAK,CAAChC,OAAN,GAAgBiC,MAAM,CAACG,OAAvB;AACAJ,MAAAA,KAAK,CAAC5B,OAAN,GAAgB,KAAhB;AACA4B,MAAAA,KAAK,CAAC9B,wBAAN,GAAiC,KAAjC;AACH,KAJD;AAKA2B,IAAAA,OAAO,CAACC,OAAR,CAAgBP,wBAAwB,CAACY,QAAzC,EAAmD,UAACH,KAAD,EAAQC,MAAR,EAAmB;AAClED,MAAAA,KAAK,CAAC5B,OAAN,GAAgB,IAAhB;AACA4B,MAAAA,KAAK,CAAC9B,wBAAN,GAAiC,KAAjC;AACH,KAHD;AAID;AA7CqC,CAAD,CAAhC;;AAgDA,0BAAauB,YAAY,CAACY,OAA1B","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\nimport agent from \"../api/agent\";\nimport { ICreatePaymentInput, IInvoice } from \"../models/Invoice\";\n\nexport interface IInvoiceState {\n  invoices: IInvoice[];\n  invoice?: IInvoice;\n  isFetchingInvoices: boolean;\n  isFetchingInvoiceDetails: boolean;\n  isSaving: boolean;\n  isError: boolean;\n}\n\nconst initialState: IInvoiceState = {\n  invoices: [],\n  isFetchingInvoices: false,\n  invoice: undefined,\n  isFetchingInvoiceDetails: false,\n  isSaving: false,\n  isError: false\n}\n\nexport const createPaymentAsync = createAsyncThunk<string, ICreatePaymentInput>(\n  \"invoices/createPaymentAsync\",\n  async (payment, thunkAPI) => {\n  try {\n\n      const bodyFormData = new FormData();\n      bodyFormData.append('invoiceId', payment.invoiceId);\n      bodyFormData.append('file', payment.file);\n      bodyFormData.append('modeOfPaymentId', payment.modeOfPaymentId);\n      bodyFormData.append('amount', `${payment.amount}`);\n      return await agent.Invoice.create(bodyFormData);\n  } catch (error) {\n      return thunkAPI.rejectWithValue({ error: error.data })\n  }\n})\n\nexport const fetchInvoicesAsync = createAsyncThunk<IInvoice[], string>(\n  'invoice/fetchInvoicessAsync',\n  async (id, thunkAPI) => {\n    try {\n      return await agent.Invoice.list(id);\n    } catch (error: any) {\n      return thunkAPI.rejectWithValue({error: error.data})\n    }\n  }\n)\n\nexport const fetchInvoiceDetailsAsync = createAsyncThunk<IInvoice, string>(\n  'invoice/fetchInvoiceDetailsAsync',\n  async (id, thunkAPI) => {\n    try {\n      return await agent.Invoice.details(id);\n    } catch (error: any) {\n      return thunkAPI.rejectWithValue({error: error.data})\n    }\n  }\n)\n\nexport const invoiceSlice = createSlice({\n  name: 'invoice',\n  initialState,\n  reducers: {},\n\n  extraReducers: (builder => {\n\n    builder.addCase(createPaymentAsync.pending, (state, action) => {\n      state.isSaving = true;\n    });\n    builder.addCase(createPaymentAsync.fulfilled, (state, action) => {\n        state.isSaving = false;\n    });\n    builder.addCase(createPaymentAsync.rejected, (state, action) => {\n        state.isSaving = false;\n    });\n\n    builder.addCase(fetchInvoicesAsync.pending, (state, action) => {\n        state.isError = false;\n        state.isFetchingInvoices = true;\n    });\n    builder.addCase(fetchInvoicesAsync.fulfilled, (state, action) => {\n        state.invoices = action.payload;\n        state.isError = false;\n        state.isFetchingInvoices = false;\n    });\n    builder.addCase(fetchInvoicesAsync.rejected, (state, action) => {\n        state.isError = true;\n        state.isFetchingInvoices = false;\n    });\n\n    \n    builder.addCase(fetchInvoiceDetailsAsync.pending, (state, action) => {\n        state.isError = false;\n        state.isFetchingInvoiceDetails = true;\n    });\n    builder.addCase(fetchInvoiceDetailsAsync.fulfilled, (state, action) => {\n        state.invoice = action.payload;\n        state.isError = false;\n        state.isFetchingInvoiceDetails = false;\n    });\n    builder.addCase(fetchInvoiceDetailsAsync.rejected, (state, action) => {\n        state.isError = true;\n        state.isFetchingInvoiceDetails = false;\n    });\n  })\n})\n\nexport const {  } = invoiceSlice.actions;"]},"metadata":{},"sourceType":"module"}