{"ast":null,"code":"import React from 'react';\nimport LoadingScreen from \"../../components/indicator/LoadingScreen\";\nimport { useAppDispatch, useAppSelecter } from \"../../store/configureStore\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar InvoiceDetailsScreen = function InvoiceDetailsScreen() {\n  var _styles = styles,\n      badge = _styles.badge,\n      bg_light = _styles.bg_light,\n      bg_green = _styles.bg_green,\n      bg_red = _styles.bg_red,\n      container = _styles.container,\n      p_5 = _styles.p_5,\n      p_15 = _styles.p_15,\n      rounded = _styles.rounded;\n  var _colors = colors,\n      light = _colors.light;\n  var dispatch = useAppDispatch();\n\n  var _useAppSelecter = useAppSelecter(function (state) {\n    return state.invoice;\n  }),\n      invoice = _useAppSelecter.invoice,\n      isFetchingInvoiceDetails = _useAppSelecter.isFetchingInvoiceDetails;\n\n  var balance = invoice.balance,\n      dateCreated = invoice.dateCreated,\n      dueDate = invoice.dueDate,\n      invoiceItems = invoice.invoiceItems,\n      invoiceNumber = invoice.invoiceNumber,\n      invoiceStatus = invoice.invoiceStatus;\n  if (isFetchingInvoiceDetails) return _jsx(LoadingScreen, {});\n  return _jsxs(View, {\n    style: [bg_light, container, p_15, rounded],\n    children: [_jsx(Detail, {\n      title: \"Account Number\",\n      value: tenantUniqueId\n    }), _jsx(Detail, {\n      title: \"Slot Number\",\n      value: slotNumber\n    }), _jsx(Detail, {\n      title: \"Size\",\n      value: size\n    }), _jsx(Detail, {\n      title: \"Rental Fee\",\n      value: price\n    }), _jsx(Detail, {\n      title: \"Contract Start Date\",\n      value: dateFormatter(startDate)\n    }), _jsx(Detail, {\n      title: \"Contract End Date\",\n      value: dateFormatter(endDate)\n    })]\n  });\n};\n\nexport default InvoiceDetailsScreen;","map":{"version":3,"sources":["/Users/airagalias/Documents/GitHub/maximarket-mobile-ts/src/screens/invoice/InvoiceDetailsScreen.tsx"],"names":["React","LoadingScreen","useAppDispatch","useAppSelecter","InvoiceDetailsScreen","styles","badge","bg_light","bg_green","bg_red","container","p_5","p_15","rounded","colors","light","dispatch","state","invoice","isFetchingInvoiceDetails","balance","dateCreated","dueDate","invoiceItems","invoiceNumber","invoiceStatus","tenantUniqueId","slotNumber","size","price","dateFormatter","startDate","endDate"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,aAAP;AACA,SAASC,cAAT,EAAyBC,cAAzB;;;;AAGA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AAE/B,gBAA6EC,MAA7E;AAAA,MAAQC,KAAR,WAAQA,KAAR;AAAA,MAAeC,QAAf,WAAeA,QAAf;AAAA,MAAyBC,QAAzB,WAAyBA,QAAzB;AAAA,MAAmCC,MAAnC,WAAmCA,MAAnC;AAAA,MAA2CC,SAA3C,WAA2CA,SAA3C;AAAA,MAAsDC,GAAtD,WAAsDA,GAAtD;AAAA,MAA2DC,IAA3D,WAA2DA,IAA3D;AAAA,MAAiEC,OAAjE,WAAiEA,OAAjE;AACA,gBAAkBC,MAAlB;AAAA,MAAQC,KAAR,WAAQA,KAAR;AAEA,MAAMC,QAAQ,GAAGd,cAAc,EAA/B;;AACA,wBAA8CC,cAAc,CAAC,UAACc,KAAD;AAAA,WAAWA,KAAK,CAACC,OAAjB;AAAA,GAAD,CAA5D;AAAA,MAAQA,OAAR,mBAAQA,OAAR;AAAA,MAAiBC,wBAAjB,mBAAiBA,wBAAjB;;AAEA,MAAQC,OAAR,GAAuFF,OAAvF,CAAQE,OAAR;AAAA,MAAiBC,WAAjB,GAAuFH,OAAvF,CAAiBG,WAAjB;AAAA,MAA8BC,OAA9B,GAAuFJ,OAAvF,CAA8BI,OAA9B;AAAA,MAAuCC,YAAvC,GAAuFL,OAAvF,CAAuCK,YAAvC;AAAA,MAAqDC,aAArD,GAAuFN,OAAvF,CAAqDM,aAArD;AAAA,MAAoEC,aAApE,GAAuFP,OAAvF,CAAoEO,aAApE;AAEA,MAAIN,wBAAJ,EAA8B,OAAO,KAAC,aAAD,KAAP;AAE9B,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACZ,QAAD,EAAWG,SAAX,EAAsBE,IAAtB,EAA4BC,OAA5B,CAAb;AAAA,eACI,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,gBAAd;AAA+B,MAAA,KAAK,EAAEa;AAAtC,MADJ,EAEI,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,aAAd;AAA4B,MAAA,KAAK,EAAEC;AAAnC,MAFJ,EAGI,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAqB,MAAA,KAAK,EAAEC;AAA5B,MAHJ,EAII,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,YAAd;AAA2B,MAAA,KAAK,EAAEC;AAAlC,MAJJ,EAKI,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,qBAAd;AAAoC,MAAA,KAAK,EAAEC,aAAa,CAACC,SAAD;AAAxD,MALJ,EAMI,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,mBAAd;AAAkC,MAAA,KAAK,EAAED,aAAa,CAACE,OAAD;AAAtD,MANJ;AAAA,IADJ;AAUH,CAtBD;;AAwBA,eAAe5B,oBAAf","sourcesContent":["import React from 'react';\nimport { Text } from 'react-native';\nimport LoadingScreen from '../../components/indicator/LoadingScreen';\nimport { useAppDispatch, useAppSelecter } from '../../store/configureStore';\n\n\nconst InvoiceDetailsScreen = () => {\n\n    const { badge, bg_light, bg_green, bg_red, container, p_5, p_15, rounded } = styles;\n    const { light } = colors\n\n    const dispatch = useAppDispatch()\n    const { invoice, isFetchingInvoiceDetails } = useAppSelecter((state) => state.invoice)\n\n    const { balance, dateCreated, dueDate, invoiceItems, invoiceNumber, invoiceStatus, } = invoice\n\n    if (isFetchingInvoiceDetails) return <LoadingScreen />\n\n    return (\n        <View style={[bg_light, container, p_15, rounded]}>\n            <Detail title=\"Account Number\" value={tenantUniqueId} />\n            <Detail title=\"Slot Number\" value={slotNumber} />\n            <Detail title=\"Size\" value={size} />\n            <Detail title=\"Rental Fee\" value={price} />\n            <Detail title=\"Contract Start Date\" value={dateFormatter(startDate)} />\n            <Detail title=\"Contract End Date\" value={dateFormatter(endDate)} />\n        </View>\n    );\n}\n\nexport default InvoiceDetailsScreen;"]},"metadata":{},"sourceType":"module"}