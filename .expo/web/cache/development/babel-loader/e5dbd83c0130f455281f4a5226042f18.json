{"ast":null,"code":"import _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Detail from \"../../components/item/Detail\";\nimport { useAppDispatch, useAppSelecter } from \"../../store/configureStore\";\nimport { styles } from \"../../styles/styles\";\nimport { dateFormatter } from \"../../utils/dateFormatter\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar PaymentReceiptScreen = function PaymentReceiptScreen(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  var dispatch = useAppDispatch();\n\n  var _useAppSelecter = useAppSelecter(function (state) {\n    return state.invoice;\n  }),\n      paymentResult = _useAppSelecter.paymentResult;\n\n  var bg_light = styles.bg_light,\n      container_full = styles.container_full,\n      flex_1 = styles.flex_1,\n      p_15 = styles.p_15,\n      rounded = styles.rounded;\n  return _jsxs(View, {\n    style: [bg_light, container_full, flex_1, p_15, rounded],\n    children: [_jsx(Detail, {\n      title: \"Date\",\n      value: !!paymentResult && dateFormatter(paymentResult == null ? void 0 : paymentResult.dateCreated)\n    }), _jsx(Detail, {\n      title: \"Amount\",\n      value: paymentResult == null ? void 0 : paymentResult.amount\n    }), _jsx(Detail, {\n      title: \"Reference Number\",\n      value: paymentResult == null ? void 0 : paymentResult.referenceNumber\n    })]\n  });\n};\n\nexport default PaymentReceiptScreen;","map":{"version":3,"sources":["C:/Users/Alex/Documents/GitHub/maximarket-mobile-ts/src/screens/payment/PaymentReceiptScreen.tsx"],"names":["React","Detail","useAppDispatch","useAppSelecter","styles","dateFormatter","PaymentReceiptScreen","dispatch","state","invoice","paymentResult","bg_light","container_full","flex_1","p_15","rounded","dateCreated","amount","referenceNumber"],"mappings":";AAAA,OAAOA,KAAP,MAAiC,OAAjC;;AAGA,OAAOC,MAAP;AAEA,SAASC,cAAT,EAAyBC,cAAzB;AACA,SAASC,MAAT;AACA,SAASC,aAAT;;;;AAEA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,OAAS;AAAA;;AAClC,MAAMC,QAAQ,GAAGL,cAAc,EAA/B;;AAEA,wBAA0BC,cAAc,CAAC,UAACK,KAAD;AAAA,WAAWA,KAAK,CAACC,OAAjB;AAAA,GAAD,CAAxC;AAAA,MAAQC,aAAR,mBAAQA,aAAR;;AAEA,MAAQC,QAAR,GAA4DP,MAA5D,CAAQO,QAAR;AAAA,MAAkBC,cAAlB,GAA4DR,MAA5D,CAAkBQ,cAAlB;AAAA,MAAkCC,MAAlC,GAA4DT,MAA5D,CAAkCS,MAAlC;AAAA,MAA0CC,IAA1C,GAA4DV,MAA5D,CAA0CU,IAA1C;AAAA,MAAgDC,OAAhD,GAA4DX,MAA5D,CAAgDW,OAAhD;AAWA,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACJ,QAAD,EAAWC,cAAX,EAA2BC,MAA3B,EAAmCC,IAAnC,EAAyCC,OAAzC,CAAb;AAAA,eACI,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAqB,MAAA,KAAK,EAAE,CAAC,CAACL,aAAF,IAAmBL,aAAa,CAACK,aAAD,oBAACA,aAAa,CAAEM,WAAhB;AAA5D,MADJ,EAEI,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAuB,MAAA,KAAK,EAAEN,aAAF,oBAAEA,aAAa,CAAEO;AAA7C,MAFJ,EAGI,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,kBAAd;AAAiC,MAAA,KAAK,EAAEP,aAAF,oBAAEA,aAAa,CAAEQ;AAAvD,MAHJ;AAAA,IADJ;AAOH,CAvBD;;AAyBA,eAAeZ,oBAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { View } from 'react-native';\r\nimport LoadingScreen from '../../components/indicator/LoadingScreen';\r\nimport Detail from '../../components/item/Detail';\r\nimport { fetchInvoiceDetailsAsync, resetPaymentResult } from '../../reducers/invoiceSlice';\r\nimport { useAppDispatch, useAppSelecter } from '../../store/configureStore';\r\nimport { styles } from '../../styles/styles';\r\nimport { dateFormatter } from '../../utils/dateFormatter';\r\n\r\nconst PaymentReceiptScreen = ({ }) => {\r\n    const dispatch = useAppDispatch()\r\n\r\n    const { paymentResult } = useAppSelecter((state) => state.invoice)\r\n\r\n    const { bg_light, container_full, flex_1, p_15, rounded } = styles\r\n\r\n    // if (!paymentResult) return <LoadingScreen />\r\n\r\n    // useEffect(() => {\r\n    //     return (() => {\r\n\r\n    //         dispatch(resetPaymentResult())\r\n    //     })\r\n    // }, [])\r\n\r\n    return (\r\n        <View style={[bg_light, container_full, flex_1, p_15, rounded]}>\r\n            <Detail title='Date' value={!!paymentResult && dateFormatter(paymentResult?.dateCreated)} />\r\n            <Detail title='Amount' value={paymentResult?.amount} />\r\n            <Detail title='Reference Number' value={paymentResult?.referenceNumber} />\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default PaymentReceiptScreen;"]},"metadata":{},"sourceType":"module"}