{"ast":null,"code":"import React, { useEffect } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { FontAwesome } from '@expo/vector-icons';\nimport { useAppSelecter } from \"../../store/configureStore\";\nimport colors from \"../../styles/colors\";\nimport { styles } from \"../../styles/styles\";\nimport { dateFormatter } from \"../../utils/dateFormatter\";\nimport AppButton from \"../../components/button/AppButton\";\nimport AppText from \"../../components/text/AppText\";\nimport InvoiceBadge from \"../../components/badge/InvoiceBadge\";\nimport LoadingScreen from \"../../components/indicator/LoadingScreen\";\nimport { fetchInvoiceDetailsAsync } from \"../../reducers/invoiceSlice\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar InvoiceDetailsScreen = function InvoiceDetailsScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useAppSelecter = useAppSelecter(function (state) {\n    return state.tenant;\n  }),\n      tenant = _useAppSelecter.tenant;\n\n  var _useAppSelecter2 = useAppSelecter(function (state) {\n    return state.invoice;\n  }),\n      invoice = _useAppSelecter2.invoice,\n      isFetchingInvoiceDetails = _useAppSelecter2.isFetchingInvoiceDetails;\n\n  var bg_light = styles.bg_light,\n      bg_primary = styles.bg_primary,\n      container = styles.container,\n      m_15 = styles.m_15,\n      mx_15 = styles.mx_15,\n      my_15 = styles.my_15,\n      me_5 = styles.me_5,\n      my_5 = styles.my_5,\n      p_5 = styles.p_5,\n      p_15 = styles.p_15,\n      rounded = styles.rounded,\n      row_center_x_between = styles.row_center_x_between,\n      row_center_x = styles.row_center_x,\n      row = styles.row,\n      w_30 = styles.w_30,\n      w_50p = styles.w_50p;\n  var darkGrey = colors.darkGrey,\n      green = colors.green,\n      light = colors.light,\n      red = colors.red,\n      secondary = colors.secondary,\n      yellow = colors.yellow;\n  useEffect(function () {\n    if (!invoice) fetchInvoiceDetailsAsync(tenant == null ? void 0 : tenant.tenantUniqueId);\n  }, [invoice]);\n\n  var renderIcon = function renderIcon(status) {\n    if (status == 2) {\n      return _jsx(FontAwesome, {\n        name: \"check-circle\",\n        size: 30,\n        color: green\n      });\n    }\n\n    if (status == 3) {\n      return _jsx(FontAwesome, {\n        name: \"times-circle\",\n        size: 30,\n        color: red\n      });\n    }\n\n    return _jsx(FontAwesome, {\n      name: \"exclamation-circle\",\n      size: 30,\n      color: yellow\n    });\n  };\n\n  if (isFetchingInvoiceDetails || !invoice) return _jsx(LoadingScreen, {});\n  var amount = invoice.amount,\n      dateCreated = invoice.dateCreated,\n      dueDate = invoice.dueDate,\n      invoiceItems = invoice.invoiceItems,\n      invoiceNumber = invoice.invoiceNumber,\n      invoiceStatus = invoice.invoiceStatus,\n      payments = invoice.payments;\n\n  var invoiceDetails = function invoiceDetails() {\n    return _jsxs(_Fragment, {\n      children: [_jsxs(View, {\n        style: [bg_light, container, p_15, rounded],\n        children: [_jsxs(View, {\n          style: row_center_x_between,\n          children: [_jsxs(AppText, {\n            as: \"h3\",\n            bold: true,\n            children: [\"INV-\" + invoiceNumber, \" \"]\n          }), _jsx(InvoiceBadge, {\n            status: invoiceStatus\n          })]\n        }), _jsxs(AppText, {\n          as: \"h2\",\n          bold: true,\n          children: [amount, \" \"]\n        }), _jsxs(View, {\n          style: [my_15, row],\n          children: [_jsxs(View, {\n            style: w_50p,\n            children: [_jsx(AppText, {\n              as: \"h5\",\n              bold: true,\n              color: darkGrey,\n              children: \"Date\"\n            }), _jsx(AppText, {\n              as: \"h4\",\n              bold: true,\n              children: dateFormatter(dateCreated)\n            })]\n          }), _jsxs(View, {\n            style: w_50p,\n            children: [_jsx(AppText, {\n              as: \"h5\",\n              bold: true,\n              color: darkGrey,\n              children: \"Due Date\"\n            }), _jsx(AppText, {\n              as: \"h4\",\n              bold: true,\n              children: dateFormatter(dueDate)\n            })]\n          })]\n        }), _jsxs(View, {\n          style: [bg_primary, p_5, row_center_x_between],\n          children: [_jsx(AppText, {\n            as: \"h5\",\n            bold: true,\n            color: light,\n            children: \"Description\"\n          }), _jsx(AppText, {\n            as: \"h5\",\n            bold: true,\n            color: light,\n            children: \"Amount\"\n          })]\n        }), _jsx(FlatList, {\n          data: invoiceItems,\n          keyExtractor: function keyExtractor(i) {\n            return i.id;\n          },\n          renderItem: function renderItem(_ref2) {\n            var item = _ref2.item;\n            return _jsxs(View, {\n              style: [p_5, row_center_x_between],\n              children: [_jsx(AppText, {\n                as: \"h5\",\n                children: item.description\n              }), _jsx(AppText, {\n                as: \"h5\",\n                children: item.amount\n              })]\n            });\n          }\n        }), _jsxs(View, {\n          style: [p_5, row_center_x_between],\n          children: [_jsx(AppText, {\n            as: \"h5\",\n            bold: true,\n            children: \"Total\"\n          }), _jsx(AppText, {\n            as: \"h5\",\n            bold: true,\n            children: amount\n          })]\n        })]\n      }), _jsx(View, {\n        style: mx_15,\n        children: _jsx(AppButton, {\n          onPress: function onPress() {\n            return navigation.navigate(\"PaymentFormNavigator\");\n          },\n          title: \"Add Payment\"\n        })\n      })]\n    });\n  };\n\n  return _jsxs(ScrollView, {\n    children: [invoiceDetails(), _jsxs(View, {\n      style: [bg_light, container, rounded],\n      children: [_jsx(View, {\n        style: m_15,\n        children: _jsx(AppText, {\n          as: \"h5\",\n          bold: true,\n          children: \"Payment Histories\"\n        })\n      }), _jsx(FlatList, {\n        data: payments,\n        keyExtractor: function keyExtractor(p) {\n          return p.id;\n        },\n        renderItem: function renderItem(_ref3) {\n          var item = _ref3.item;\n          return _jsxs(View, {\n            style: [my_5, p_15, row_center_x_between, rounded],\n            children: [_jsxs(View, {\n              style: [row, row_center_x],\n              children: [_jsx(View, {\n                style: [me_5, w_30],\n                children: _jsx(_Fragment, {\n                  children: renderIcon(item.status)\n                })\n              }), _jsx(AppText, {\n                bold: true,\n                children: dateFormatter(item.dateCreated)\n              })]\n            }), _jsx(AppText, {\n              as: \"h3\",\n              bold: true,\n              color: secondary,\n              children: item.amount\n            })]\n          });\n        }\n      })]\n    })]\n  });\n};\n\nexport default InvoiceDetailsScreen;","map":{"version":3,"sources":["/Users/airagalias/Documents/GitHub/maximarket-mobile-ts/src/screens/invoice/InvoiceDetailsScreen.tsx"],"names":["React","useEffect","FontAwesome","useAppSelecter","colors","styles","dateFormatter","AppButton","AppText","InvoiceBadge","LoadingScreen","fetchInvoiceDetailsAsync","InvoiceDetailsScreen","navigation","state","tenant","invoice","isFetchingInvoiceDetails","bg_light","bg_primary","container","m_15","mx_15","my_15","me_5","my_5","p_5","p_15","rounded","row_center_x_between","row_center_x","row","w_30","w_50p","darkGrey","green","light","red","secondary","yellow","tenantUniqueId","renderIcon","status","amount","dateCreated","dueDate","invoiceItems","invoiceNumber","invoiceStatus","payments","invoiceDetails","i","id","item","description","navigate","p"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport routes from '../../navigations/routes';\nimport { FlatList, ScrollView, View } from 'react-native';\nimport { FontAwesome } from '@expo/vector-icons';\nimport { useAppDispatch, useAppSelecter } from '../../store/configureStore';\nimport colors from '../../styles/colors';\nimport { styles } from '../../styles/styles';\nimport { dateFormatter } from '../../utils/dateFormatter';\nimport AppButton from '../../components/button/AppButton';\nimport AppText from '../../components/text/AppText';\nimport InvoiceBadge from '../../components/badge/InvoiceBadge';\nimport LoadingScreen from '../../components/indicator/LoadingScreen';\nimport { fetchInvoiceDetailsAsync } from '../../reducers/invoiceSlice';\nimport { SafeAreaView } from 'react-native-safe-area-context';\n\ninterface Props {\n    navigation: any\n}\n\nconst InvoiceDetailsScreen: React.FC<Props> = ({ navigation }) => {\n    const { tenant } = useAppSelecter((state) => state.tenant)\n    const { invoice, isFetchingInvoiceDetails } = useAppSelecter((state) => state.invoice)\n\n    const { bg_light, bg_primary, container, m_15, mx_15, my_15, me_5, my_5, p_5, p_15, rounded, row_center_x_between, row_center_x, row, w_30, w_50p } = styles;\n    const { darkGrey, green, light, red, secondary, yellow } = colors;\n\n    useEffect(() => {\n        if (!invoice) fetchInvoiceDetailsAsync(tenant?.tenantUniqueId!)\n    }, [invoice])\n\n    const renderIcon = (status: number) => {\n        if (status == 2) { return <FontAwesome name=\"check-circle\" size={30} color={green} /> }\n        if (status == 3) { return <FontAwesome name=\"times-circle\" size={30} color={red} /> }\n        return <FontAwesome name=\"exclamation-circle\" size={30} color={yellow} />\n    }\n\n    if (isFetchingInvoiceDetails || !invoice) return <LoadingScreen />\n\n    const { amount, dateCreated, dueDate, invoiceItems, invoiceNumber, invoiceStatus, payments } = invoice;\n\n    const invoiceDetails = () => (\n        <>\n            <View style={[bg_light, container, p_15, rounded]}>\n\n                <View style={row_center_x_between}>\n                    <AppText as=\"h3\" bold>{`INV-${invoiceNumber}`} </AppText>\n                    <InvoiceBadge status={invoiceStatus} />\n                </View>\n                <AppText as=\"h2\" bold>{amount} </AppText>\n\n                <View style={[my_15, row]}>\n                    <View style={w_50p}>\n                        <AppText as=\"h5\" bold color={darkGrey}>Date</AppText>\n                        <AppText as=\"h4\" bold>{dateFormatter(dateCreated)}</AppText>\n                    </View>\n\n                    <View style={w_50p}>\n                        <AppText as=\"h5\" bold color={darkGrey}>Due Date</AppText>\n                        <AppText as=\"h4\" bold>{dateFormatter(dueDate)}</AppText>\n                    </View>\n                </View>\n\n                <View style={[bg_primary, p_5, row_center_x_between]}>\n                    <AppText as=\"h5\" bold color={light}>Description</AppText>\n                    <AppText as=\"h5\" bold color={light}>Amount</AppText>\n                </View>\n\n                <FlatList\n                    data={invoiceItems}\n                    keyExtractor={(i) => i.id}\n                    renderItem={({ item }) =>\n                        <View style={[p_5, row_center_x_between]}>\n                            <AppText as=\"h5\">{item.description}</AppText>\n                            <AppText as=\"h5\">{item.amount}</AppText>\n                        </View>\n                    }\n                />\n\n                <View style={[p_5, row_center_x_between]}>\n                    <AppText as=\"h5\" bold>Total</AppText>\n                    <AppText as=\"h5\" bold>{amount}</AppText>\n                </View>\n\n            </View>\n\n            <View style={mx_15}>\n                <AppButton onPress={() => navigation.navigate(\"PaymentFormNavigator\")} title='Add Payment' />\n            </View>\n        </>\n    )\n\n    return (\n        <ScrollView>\n            {invoiceDetails()}\n\n\n\n            <View style={[bg_light, container, rounded]}>\n                <View style={m_15}>\n                    <AppText as=\"h5\" bold>Payment Histories</AppText>\n                </View>\n\n                <FlatList\n                    data={payments}\n                    keyExtractor={(p => p.id)}\n                    renderItem={({ item }) => (\n                        <View style={[my_5, p_15, row_center_x_between, rounded]}>\n                            <View style={[row, row_center_x]}>\n                                <View style={[me_5, w_30]}>\n                                    <>{renderIcon(item.status)}</>\n                                </View>\n                                <AppText bold>{dateFormatter(item.dateCreated)}</AppText>\n                            </View>\n                            <AppText as=\"h3\" bold color={secondary}>{item.amount}</AppText>\n                        </View>\n                    )}\n\n                />\n            </View>\n        </ScrollView>\n    );\n}\n\nexport default InvoiceDetailsScreen;"]},"metadata":{},"sourceType":"module"}