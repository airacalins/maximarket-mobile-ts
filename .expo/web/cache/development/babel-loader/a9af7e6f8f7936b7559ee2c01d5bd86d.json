{"ast":null,"code":"import React, { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport LoadingScreen from \"../../components/indicator/LoadingScreen\";\nimport Detail from \"../../components/item/Detail\";\nimport { fetchInvoiceDetailsAsync } from \"../../reducers/invoiceSlice\";\nimport { useAppSelecter } from \"../../store/configureStore\";\nimport { dateFormatter } from \"../../utils/dateFormatter\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar PaymentDetailsScreen = function PaymentDetailsScreen() {\n  var _useAppSelecter = useAppSelecter(function (state) {\n    return state.tenant;\n  }),\n      tenant = _useAppSelecter.tenant;\n\n  var _useAppSelecter2 = useAppSelecter(function (state) {\n    return state.invoice;\n  }),\n      invoice = _useAppSelecter2.invoice,\n      paymentResult = _useAppSelecter2.paymentResult,\n      isFetchingInvoiceDetails = _useAppSelecter2.isFetchingInvoiceDetails;\n\n  useEffect(function () {\n    if (!invoice) fetchInvoiceDetailsAsync(tenant == null ? void 0 : tenant.tenantUniqueId);\n  }, [invoice]);\n  if (isFetchingInvoiceDetails || !invoice) return _jsx(LoadingScreen, {});\n  var _ref = paymentResult,\n      amount = _ref.amount,\n      dateCreated = _ref.dateCreated,\n      referenceNumber = _ref.referenceNumber;\n  var payments = invoice.payments;\n  return _jsxs(View, {\n    children: [_jsx(Detail, {\n      title: \"Date\",\n      value: dateFormatter(dateCreated)\n    }), _jsx(Detail, {\n      title: \"Amount\",\n      value: amount\n    }), _jsx(Detail, {\n      title: \"Reference Number\",\n      value: referenceNumber\n    }), _jsx(Detail, {\n      title: \"Status\",\n      value: \"\"\n    }), _jsx(Detail, {\n      title: \"Bank Name\",\n      value: \"\"\n    }), _jsx(Detail, {\n      title: \"Account Name\",\n      value: \"\"\n    }), _jsx(Detail, {\n      title: \"Account Number\",\n      value: \"\"\n    })]\n  });\n};\n\nexport default PaymentDetailsScreen;","map":{"version":3,"sources":["/Users/airagalias/Documents/GitHub/maximarket-mobile-ts/src/screens/payment/PaymentDetailsScreen.tsx"],"names":["React","useEffect","LoadingScreen","Detail","fetchInvoiceDetailsAsync","useAppSelecter","dateFormatter","PaymentDetailsScreen","state","tenant","invoice","paymentResult","isFetchingInvoiceDetails","tenantUniqueId","amount","dateCreated","referenceNumber","payments"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAOC,aAAP;AACA,OAAOC,MAAP;AACA,SAASC,wBAAT;AACA,SAASC,cAAT;AACA,SAASC,aAAT;;;;AAEA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AAC/B,wBAAmBF,cAAc,CAAC,UAACG,KAAD;AAAA,WAAWA,KAAK,CAACC,MAAjB;AAAA,GAAD,CAAjC;AAAA,MAAQA,MAAR,mBAAQA,MAAR;;AACA,yBAA6DJ,cAAc,CAAC,UAACG,KAAD;AAAA,WAAWA,KAAK,CAACE,OAAjB;AAAA,GAAD,CAA3E;AAAA,MAAQA,OAAR,oBAAQA,OAAR;AAAA,MAAiBC,aAAjB,oBAAiBA,aAAjB;AAAA,MAAgCC,wBAAhC,oBAAgCA,wBAAhC;;AAEAX,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAI,CAACS,OAAL,EAAcN,wBAAwB,CAACK,MAAD,oBAACA,MAAM,CAAEI,cAAT,CAAxB;AACjB,GAFQ,EAEN,CAACH,OAAD,CAFM,CAAT;AAIA,MAAIE,wBAAwB,IAAI,CAACF,OAAjC,EAA0C,OAAO,KAAC,aAAD,KAAP;AAE1C,aAAiDC,aAAjD;AAAA,MAAQG,MAAR,QAAQA,MAAR;AAAA,MAAgBC,WAAhB,QAAgBA,WAAhB;AAAA,MAA6BC,eAA7B,QAA6BA,eAA7B;AAEA,MAAQC,QAAR,GAAqBP,OAArB,CAAQO,QAAR;AAEA,SACI,MAAC,IAAD;AAAA,eACI,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAqB,MAAA,KAAK,EAAEX,aAAa,CAACS,WAAD;AAAzC,MADJ,EAEI,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAuB,MAAA,KAAK,EAAED;AAA9B,MAFJ,EAGI,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,kBAAd;AAAiC,MAAA,KAAK,EAAEE;AAAxC,MAHJ,EAII,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAuB,MAAA,KAAK,EAAC;AAA7B,MAJJ,EAKI,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,WAAd;AAA0B,MAAA,KAAK,EAAC;AAAhC,MALJ,EAMI,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,cAAd;AAA6B,MAAA,KAAK,EAAC;AAAnC,MANJ,EAOI,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,gBAAd;AAA+B,MAAA,KAAK,EAAC;AAArC,MAPJ;AAAA,IADJ;AAWH,CAzBD;;AA2BA,eAAeT,oBAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { Text, View } from 'react-native';\nimport LoadingScreen from '../../components/indicator/LoadingScreen';\nimport Detail from '../../components/item/Detail';\nimport { fetchInvoiceDetailsAsync } from '../../reducers/invoiceSlice';\nimport { useAppSelecter } from '../../store/configureStore';\nimport { dateFormatter } from '../../utils/dateFormatter';\n\nconst PaymentDetailsScreen = () => {\n    const { tenant } = useAppSelecter((state) => state.tenant)\n    const { invoice, paymentResult, isFetchingInvoiceDetails } = useAppSelecter((state) => state.invoice)\n\n    useEffect(() => {\n        if (!invoice) fetchInvoiceDetailsAsync(tenant?.tenantUniqueId!)\n    }, [invoice])\n\n    if (isFetchingInvoiceDetails || !invoice) return <LoadingScreen />\n\n    const { amount, dateCreated, referenceNumber } = paymentResult!\n\n    const { payments } = invoice\n\n    return (\n        <View>\n            <Detail title='Date' value={dateFormatter(dateCreated)} />\n            <Detail title='Amount' value={amount} />\n            <Detail title='Reference Number' value={referenceNumber} />\n            <Detail title='Status' value=\"\" />\n            <Detail title='Bank Name' value=\"\" />\n            <Detail title='Account Name' value=\"\" />\n            <Detail title='Account Number' value=\"\" />\n        </View>\n    );\n}\n\nexport default PaymentDetailsScreen;"]},"metadata":{},"sourceType":"module"}