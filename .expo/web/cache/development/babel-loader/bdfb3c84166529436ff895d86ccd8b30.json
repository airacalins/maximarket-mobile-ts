{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport InvoiceBadge from \"../../components/badge/InvoiceBadge\";\nimport LoadingScreen from \"../../components/indicator/LoadingScreen\";\nimport Detail from \"../../components/item/Detail\";\nimport { useAppDispatch, useAppSelecter } from \"../../store/configureStore\";\nimport colors from \"../../styles/colors\";\nimport { styles } from \"../../styles/styles\";\nimport { dateFormatter } from \"../../utils/dateFormatter\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar InvoiceDetailsScreen = function InvoiceDetailsScreen() {\n  var badge = styles.badge,\n      bg_light = styles.bg_light,\n      bg_green = styles.bg_green,\n      bg_red = styles.bg_red,\n      container = styles.container,\n      p_5 = styles.p_5,\n      p_15 = styles.p_15,\n      rounded = styles.rounded;\n  var light = colors.light;\n  var dispatch = useAppDispatch();\n\n  var _useAppSelecter = useAppSelecter(function (state) {\n    return state.invoice;\n  }),\n      invoice = _useAppSelecter.invoice,\n      isFetchingInvoiceDetails = _useAppSelecter.isFetchingInvoiceDetails;\n\n  var _ref = invoice,\n      amount = _ref.amount,\n      dateCreated = _ref.dateCreated,\n      dueDate = _ref.dueDate,\n      invoiceNumber = _ref.invoiceNumber,\n      invoiceStatus = _ref.invoiceStatus;\n  if (isFetchingInvoiceDetails) return _jsx(LoadingScreen, {});\n  return _jsxs(View, {\n    style: [bg_light, container, p_15, rounded],\n    children: [_jsx(Detail, {\n      title: \"Invoice Status\",\n      value: _jsx(InvoiceBadge, {\n        status: invoiceStatus\n      })\n    }), _jsx(Detail, {\n      title: \"Invoice Number\",\n      value: invoiceNumber\n    }), _jsx(Detail, {\n      title: \"Date Created\",\n      value: dateFormatter(dateCreated)\n    }), _jsx(Detail, {\n      title: \"Due Date\",\n      value: dateFormatter(dueDate)\n    }), _jsx(Detail, {\n      title: \"Amount\",\n      value: amount\n    })]\n  });\n};\n\nexport default InvoiceDetailsScreen;","map":{"version":3,"sources":["/Users/airagalias/Documents/GitHub/maximarket-mobile-ts/src/screens/invoice/InvoiceDetailsScreen.tsx"],"names":["React","InvoiceBadge","LoadingScreen","Detail","useAppDispatch","useAppSelecter","colors","styles","dateFormatter","InvoiceDetailsScreen","badge","bg_light","bg_green","bg_red","container","p_5","p_15","rounded","light","dispatch","state","invoice","isFetchingInvoiceDetails","amount","dateCreated","dueDate","invoiceNumber","invoiceStatus"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAOC,YAAP;AACA,OAAOC,aAAP;AACA,OAAOC,MAAP;AACA,SAASC,cAAT,EAAyBC,cAAzB;AACA,OAAOC,MAAP;AACA,SAASC,MAAT;AACA,SAASC,aAAT;;;;AAGA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AAE/B,MAAQC,KAAR,GAA6EH,MAA7E,CAAQG,KAAR;AAAA,MAAeC,QAAf,GAA6EJ,MAA7E,CAAeI,QAAf;AAAA,MAAyBC,QAAzB,GAA6EL,MAA7E,CAAyBK,QAAzB;AAAA,MAAmCC,MAAnC,GAA6EN,MAA7E,CAAmCM,MAAnC;AAAA,MAA2CC,SAA3C,GAA6EP,MAA7E,CAA2CO,SAA3C;AAAA,MAAsDC,GAAtD,GAA6ER,MAA7E,CAAsDQ,GAAtD;AAAA,MAA2DC,IAA3D,GAA6ET,MAA7E,CAA2DS,IAA3D;AAAA,MAAiEC,OAAjE,GAA6EV,MAA7E,CAAiEU,OAAjE;AACA,MAAQC,KAAR,GAAkBZ,MAAlB,CAAQY,KAAR;AAEA,MAAMC,QAAQ,GAAGf,cAAc,EAA/B;;AACA,wBAA8CC,cAAc,CAAC,UAACe,KAAD;AAAA,WAAWA,KAAK,CAACC,OAAjB;AAAA,GAAD,CAA5D;AAAA,MAAQA,OAAR,mBAAQA,OAAR;AAAA,MAAiBC,wBAAjB,mBAAiBA,wBAAjB;;AAEA,aAAwED,OAAxE;AAAA,MAAQE,MAAR,QAAQA,MAAR;AAAA,MAAgBC,WAAhB,QAAgBA,WAAhB;AAAA,MAA6BC,OAA7B,QAA6BA,OAA7B;AAAA,MAAsCC,aAAtC,QAAsCA,aAAtC;AAAA,MAAqDC,aAArD,QAAqDA,aAArD;AAEA,MAAIL,wBAAJ,EAA8B,OAAO,KAAC,aAAD,KAAP;AAE9B,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACX,QAAD,EAAWG,SAAX,EAAsBE,IAAtB,EAA4BC,OAA5B,CAAb;AAAA,eACI,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,gBAAd;AAA+B,MAAA,KAAK,EAAE,KAAC,YAAD;AAAc,QAAA,MAAM,EAAEU;AAAtB;AAAtC,MADJ,EAEI,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,gBAAd;AAA+B,MAAA,KAAK,EAAED;AAAtC,MAFJ,EAGI,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,cAAd;AAA6B,MAAA,KAAK,EAAElB,aAAa,CAACgB,WAAD;AAAjD,MAHJ,EAII,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,UAAd;AAAyB,MAAA,KAAK,EAAEhB,aAAa,CAACiB,OAAD;AAA7C,MAJJ,EAKI,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAuB,MAAA,KAAK,EAAEF;AAA9B,MALJ;AAAA,IADJ;AAUH,CAtBD;;AAwBA,eAAed,oBAAf","sourcesContent":["import React from 'react';\nimport { Text, View } from 'react-native';\nimport InvoiceBadge from '../../components/badge/InvoiceBadge';\nimport LoadingScreen from '../../components/indicator/LoadingScreen';\nimport Detail from '../../components/item/Detail';\nimport { useAppDispatch, useAppSelecter } from '../../store/configureStore';\nimport colors from '../../styles/colors';\nimport { styles } from '../../styles/styles';\nimport { dateFormatter } from '../../utils/dateFormatter';\n\n\nconst InvoiceDetailsScreen = () => {\n\n    const { badge, bg_light, bg_green, bg_red, container, p_5, p_15, rounded } = styles;\n    const { light } = colors\n\n    const dispatch = useAppDispatch()\n    const { invoice, isFetchingInvoiceDetails } = useAppSelecter((state) => state.invoice)\n\n    const { amount, dateCreated, dueDate, invoiceNumber, invoiceStatus, } = invoice!\n\n    if (isFetchingInvoiceDetails) return <LoadingScreen />\n\n    return (\n        <View style={[bg_light, container, p_15, rounded]}>\n            <Detail title=\"Invoice Status\" value={<InvoiceBadge status={invoiceStatus} />} />\n            <Detail title=\"Invoice Number\" value={invoiceNumber} />\n            <Detail title=\"Date Created\" value={dateFormatter(dateCreated)} />\n            <Detail title=\"Due Date\" value={dateFormatter(dueDate)} />\n            <Detail title=\"Amount\" value={amount} />\n\n        </View>\n    );\n}\n\nexport default InvoiceDetailsScreen;"]},"metadata":{},"sourceType":"module"}