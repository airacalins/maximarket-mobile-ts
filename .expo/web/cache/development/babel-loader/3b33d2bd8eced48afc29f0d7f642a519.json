{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport { Ionicons } from '@expo/vector-icons';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport colors from \"../../styles/colors\";\nimport { styles } from \"../../styles/styles\";\nimport AppMenu from \"../../components/menu/AppMenu\";\nimport routes from \"../../navigations/routes\";\nimport { useAppDispatch, useAppSelecter } from \"../../store/configureStore\";\nimport LoadingScreen from \"../../components/indicator/LoadingScreen\";\nimport { resetTenant } from \"../../reducers/tenantSlice\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar MenusScreen = function MenusScreen(_ref) {\n  var navigation = _ref.navigation;\n  var dispatch = useAppDispatch();\n\n  var _useAppSelecter = useAppSelecter(function (state) {\n    return state.tenant;\n  }),\n      tenant = _useAppSelecter.tenant,\n      isFetchingTenantDetails = _useAppSelecter.isFetchingTenantDetails;\n\n  var _ref2 = tenant,\n      firstName = _ref2.firstName,\n      lastName = _ref2.lastName;\n  var bg_light = styles.bg_light,\n      container_full = styles.container_full,\n      mb_10 = styles.mb_10,\n      rounded = styles.rounded;\n  var light = colors.light;\n  if (isFetchingTenantDetails) return _jsx(LoadingScreen, {});\n  return _jsxs(View, {\n    style: container_full,\n    children: [_jsxs(View, {\n      style: [bg_light, rounded, mb_10],\n      children: [_jsx(AppMenu, {\n        title: firstName + \" \" + lastName,\n        subtitle: \"Edit Personal Information\",\n        icon: _jsx(FontAwesome5, {\n          name: \"user\",\n          size: 20,\n          color: light\n        }),\n        onPress: function onPress() {\n          return navigation.navigate(routes.ACCOUNT_FORM);\n        }\n      }), _jsx(AppMenu, {\n        title: \"My Store\",\n        subtitle: \"View rented slot details\",\n        icon: _jsx(FontAwesome5, {\n          name: \"store\",\n          size: 20,\n          color: light\n        }),\n        onPress: function onPress() {\n          return navigation.navigate(routes.STORE_DETAILS);\n        }\n      })]\n    }), _jsxs(View, {\n      style: [bg_light, rounded],\n      children: [_jsx(AppMenu, {\n        title: \"Slot Locator\",\n        subtitle: \"Visual map and available slots\",\n        icon: _jsx(Ionicons, {\n          name: \"location\",\n          size: 20,\n          color: light\n        }),\n        onPress: function onPress() {\n          return navigation.navigate('SlotNavigator');\n        }\n      }), _jsx(AppMenu, {\n        title: \"Mode of Payments\",\n        subtitle: \"List of acceptable payment methods\",\n        icon: _jsx(Ionicons, {\n          name: \"card\",\n          size: 20,\n          color: light\n        }),\n        onPress: function onPress() {\n          return navigation.navigate(routes.MODE_OF_PAYMENTS);\n        }\n      }), _jsx(AppMenu, {\n        title: \"Contacts\",\n        subtitle: \"Where to find us?\",\n        icon: _jsx(FontAwesome5, {\n          name: \"phone\",\n          size: 20,\n          color: light\n        }),\n        onPress: function onPress() {\n          return navigation.navigate(routes.CONTACTS);\n        }\n      }), _jsx(AppMenu, {\n        title: \"Logout\",\n        subtitle: \"Logout\",\n        icon: _jsx(MaterialCommunityIcons, {\n          name: \"logout-variant\",\n          size: 20,\n          color: light\n        }),\n        onPress: function onPress() {\n          return dispatch(resetTenant());\n        }\n      })]\n    })]\n  });\n};\n\nexport default MenusScreen;","map":{"version":3,"sources":["/Users/airagalias/Documents/GitHub/maximarket-mobile-ts/src/screens/menu/MenusScreen.tsx"],"names":["React","FontAwesome5","Ionicons","MaterialCommunityIcons","colors","styles","AppMenu","routes","useAppDispatch","useAppSelecter","LoadingScreen","resetTenant","MenusScreen","navigation","dispatch","state","tenant","isFetchingTenantDetails","firstName","lastName","bg_light","container_full","mb_10","rounded","light","navigate","ACCOUNT_FORM","STORE_DETAILS","MODE_OF_PAYMENTS","CONTACTS"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,sBAAT,QAAuC,oBAAvC;AAEA,OAAOC,MAAP;AACA,SAASC,MAAT;AAEA,OAAOC,OAAP;AACA,OAAOC,MAAP;AACA,SAASC,cAAT,EAAyBC,cAAzB;AACA,OAAOC,aAAP;AACA,SAASC,WAAT;;;;AAMA,IAAMC,WAA4B,GAAG,SAA/BA,WAA+B,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AACrD,MAAMC,QAAQ,GAAGN,cAAc,EAA/B;;AACA,wBAA4CC,cAAc,CAAC,UAACM,KAAD;AAAA,WAAWA,KAAK,CAACC,MAAjB;AAAA,GAAD,CAA1D;AAAA,MAAQA,MAAR,mBAAQA,MAAR;AAAA,MAAgBC,uBAAhB,mBAAgBA,uBAAhB;;AACA,cAAgCD,MAAhC;AAAA,MAAQE,SAAR,SAAQA,SAAR;AAAA,MAAmBC,QAAnB,SAAmBA,QAAnB;AAEA,MAAQC,QAAR,GAAqDf,MAArD,CAAQe,QAAR;AAAA,MAAkBC,cAAlB,GAAqDhB,MAArD,CAAkBgB,cAAlB;AAAA,MAAkCC,KAAlC,GAAqDjB,MAArD,CAAkCiB,KAAlC;AAAA,MAAyCC,OAAzC,GAAqDlB,MAArD,CAAyCkB,OAAzC;AACA,MAAQC,KAAR,GAAkBpB,MAAlB,CAAQoB,KAAR;AAEA,MAAIP,uBAAJ,EAA6B,OAAO,KAAC,aAAD,KAAP;AAE7B,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEI,cAAb;AAAA,eAEI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAE,CAACD,QAAD,EAAWG,OAAX,EAAoBD,KAApB,CAAb;AAAA,iBACI,KAAC,OAAD;AACI,QAAA,KAAK,EAAKJ,SAAL,SAAkBC,QAD3B;AAEI,QAAA,QAAQ,EAAC,2BAFb;AAGI,QAAA,IAAI,EAAE,KAAC,YAAD;AAAc,UAAA,IAAI,EAAC,MAAnB;AAA0B,UAAA,IAAI,EAAE,EAAhC;AAAoC,UAAA,KAAK,EAAEK;AAA3C,UAHV;AAII,QAAA,OAAO,EAAE;AAAA,iBAAMX,UAAU,CAACY,QAAX,CAAoBlB,MAAM,CAACmB,YAA3B,CAAN;AAAA;AAJb,QADJ,EAQI,KAAC,OAAD;AACI,QAAA,KAAK,EAAC,UADV;AAEI,QAAA,QAAQ,EAAC,0BAFb;AAGI,QAAA,IAAI,EAAE,KAAC,YAAD;AAAc,UAAA,IAAI,EAAC,OAAnB;AAA2B,UAAA,IAAI,EAAE,EAAjC;AAAqC,UAAA,KAAK,EAAEF;AAA5C,UAHV;AAII,QAAA,OAAO,EAAE;AAAA,iBAAMX,UAAU,CAACY,QAAX,CAAoBlB,MAAM,CAACoB,aAA3B,CAAN;AAAA;AAJb,QARJ;AAAA,MAFJ,EAkBI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAE,CAACP,QAAD,EAAWG,OAAX,CAAb;AAAA,iBACI,KAAC,OAAD;AACI,QAAA,KAAK,EAAC,cADV;AAEI,QAAA,QAAQ,EAAC,gCAFb;AAGI,QAAA,IAAI,EAAE,KAAC,QAAD;AAAU,UAAA,IAAI,EAAC,UAAf;AAA0B,UAAA,IAAI,EAAE,EAAhC;AAAoC,UAAA,KAAK,EAAEC;AAA3C,UAHV;AAII,QAAA,OAAO,EAAE;AAAA,iBAAMX,UAAU,CAACY,QAAX,CAAoB,eAApB,CAAN;AAAA;AAJb,QADJ,EAQI,KAAC,OAAD;AACI,QAAA,KAAK,EAAC,kBADV;AAEI,QAAA,QAAQ,EAAC,oCAFb;AAGI,QAAA,IAAI,EAAE,KAAC,QAAD;AAAU,UAAA,IAAI,EAAC,MAAf;AAAsB,UAAA,IAAI,EAAE,EAA5B;AAAgC,UAAA,KAAK,EAAED;AAAvC,UAHV;AAII,QAAA,OAAO,EAAE;AAAA,iBAAMX,UAAU,CAACY,QAAX,CAAoBlB,MAAM,CAACqB,gBAA3B,CAAN;AAAA;AAJb,QARJ,EAeI,KAAC,OAAD;AACI,QAAA,KAAK,EAAC,UADV;AAEI,QAAA,QAAQ,EAAC,mBAFb;AAGI,QAAA,IAAI,EAAE,KAAC,YAAD;AAAc,UAAA,IAAI,EAAC,OAAnB;AAA2B,UAAA,IAAI,EAAE,EAAjC;AAAqC,UAAA,KAAK,EAAEJ;AAA5C,UAHV;AAII,QAAA,OAAO,EAAE;AAAA,iBAAMX,UAAU,CAACY,QAAX,CAAoBlB,MAAM,CAACsB,QAA3B,CAAN;AAAA;AAJb,QAfJ,EAsBI,KAAC,OAAD;AACI,QAAA,KAAK,EAAC,QADV;AAEI,QAAA,QAAQ,EAAC,QAFb;AAGI,QAAA,IAAI,EAAE,KAAC,sBAAD;AAAwB,UAAA,IAAI,EAAC,gBAA7B;AAA8C,UAAA,IAAI,EAAE,EAApD;AAAwD,UAAA,KAAK,EAAEL;AAA/D,UAHV;AAII,QAAA,OAAO,EAAE;AAAA,iBAAMV,QAAQ,CAACH,WAAW,EAAZ,CAAd;AAAA;AAJb,QAtBJ;AAAA,MAlBJ;AAAA,IADJ;AAmDH,CA7DD;;AA+DA,eAAeC,WAAf","sourcesContent":["import React from 'react';\nimport { View } from 'react-native';\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport { Ionicons } from '@expo/vector-icons';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\n\nimport colors from '../../styles/colors';\nimport { styles } from '../../styles/styles';\nimport AppText from '../../components/text/AppText';\nimport AppMenu from '../../components/menu/AppMenu';\nimport routes from '../../navigations/routes';\nimport { useAppDispatch, useAppSelecter } from '../../store/configureStore';\nimport LoadingScreen from '../../components/indicator/LoadingScreen';\nimport { resetTenant } from '../../reducers/tenantSlice';\n\ninterface Props {\n    navigation: any\n}\n\nconst MenusScreen: React.FC<Props> = ({ navigation }) => {\n    const dispatch = useAppDispatch();\n    const { tenant, isFetchingTenantDetails } = useAppSelecter((state) => state.tenant)\n    const { firstName, lastName } = tenant!\n\n    const { bg_light, container_full, mb_10, rounded } = styles;\n    const { light } = colors;\n\n    if (isFetchingTenantDetails) return <LoadingScreen />\n\n    return (\n        <View style={container_full}>\n\n            <View style={[bg_light, rounded, mb_10]}>\n                <AppMenu\n                    title={`${firstName} ${lastName}`}\n                    subtitle='Edit Personal Information'\n                    icon={<FontAwesome5 name=\"user\" size={20} color={light} />}\n                    onPress={() => navigation.navigate(routes.ACCOUNT_FORM)}\n                />\n\n                <AppMenu\n                    title='My Store'\n                    subtitle='View rented slot details'\n                    icon={<FontAwesome5 name=\"store\" size={20} color={light} />}\n                    onPress={() => navigation.navigate(routes.STORE_DETAILS)}\n                />\n            </View>\n\n            <View style={[bg_light, rounded]}>\n                <AppMenu\n                    title='Slot Locator'\n                    subtitle='Visual map and available slots'\n                    icon={<Ionicons name=\"location\" size={20} color={light} />}\n                    onPress={() => navigation.navigate('SlotNavigator')}\n                />\n\n                <AppMenu\n                    title='Mode of Payments'\n                    subtitle='List of acceptable payment methods'\n                    icon={<Ionicons name=\"card\" size={20} color={light} />}\n                    onPress={() => navigation.navigate(routes.MODE_OF_PAYMENTS)}\n                />\n\n                <AppMenu\n                    title='Contacts'\n                    subtitle='Where to find us?'\n                    icon={<FontAwesome5 name=\"phone\" size={20} color={light} />}\n                    onPress={() => navigation.navigate(routes.CONTACTS)}\n                />\n\n                <AppMenu\n                    title='Logout'\n                    subtitle='Logout'\n                    icon={<MaterialCommunityIcons name=\"logout-variant\" size={20} color={light} />}\n                    onPress={() => dispatch(resetTenant())\n                    }\n                />\n            </View>\n        </View>\n    );\n}\n\nexport default MenusScreen;"]},"metadata":{},"sourceType":"module"}