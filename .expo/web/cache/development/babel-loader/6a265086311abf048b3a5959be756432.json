{"ast":null,"code":"import _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nimport React from 'react';\nimport { useAppSelecter } from \"../../store/configureStore\";\nimport View from \"react-native-web/dist/exports/View\";\nimport colors from \"../../styles/colors\";\nimport { dateFormatter } from \"../../utils/dateFormatter\";\nimport { styles } from \"../../styles/styles\";\nimport Detail from \"../../components/item/Detail\";\nimport AppText from \"../../components/text/AppText\";\nimport { currencyFormatter } from \"../../utils/currencyFormatter\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar PaymentDetailsScreen = function PaymentDetailsScreen(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  var _useAppSelecter = useAppSelecter(function (state) {\n    return state.invoice;\n  }),\n      selectedPayment = _useAppSelecter.selectedPayment;\n\n  var _ref2 = selectedPayment,\n      status = _ref2.status,\n      bankName = _ref2.bankName,\n      accountName = _ref2.accountName,\n      accountNumber = _ref2.accountNumber,\n      dateCreated = _ref2.dateCreated,\n      amount = _ref2.amount,\n      referenceNumber = _ref2.referenceNumber;\n  var bg_green = styles.bg_green,\n      bg_light = styles.bg_light,\n      bg_red = styles.bg_red,\n      bg_yellow = styles.bg_yellow,\n      container = styles.container,\n      m_15 = styles.m_15,\n      px_5 = styles.px_5,\n      p_15 = styles.p_15,\n      rounded = styles.rounded;\n  var light = colors.light;\n\n  var renderPaymentStatusBadge = function renderPaymentStatusBadge(status) {\n    if (status == 0 || status == 1) {\n      return _jsx(View, {\n        style: [bg_yellow, px_5, rounded],\n        children: _jsx(AppText, {\n          as: \"h5\",\n          color: light,\n          children: \"Pending\"\n        })\n      });\n    }\n\n    if (status == 2) {\n      return _jsx(View, {\n        style: [bg_green, px_5, rounded],\n        children: _jsx(AppText, {\n          as: \"h5\",\n          color: light,\n          children: \"Approved\"\n        })\n      });\n    }\n\n    return _jsx(View, {\n      style: [bg_red, px_5, rounded],\n      children: _jsx(AppText, {\n        as: \"h5\",\n        color: light,\n        children: \"Declined\"\n      })\n    });\n  };\n\n  return _jsxs(View, {\n    style: [bg_light, container, m_15, p_15, rounded],\n    children: [_jsx(Detail, {\n      title: \"Reference Number\",\n      value: referenceNumber\n    }), _jsx(Detail, {\n      title: \"Status\",\n      value: renderPaymentStatusBadge(status)\n    }), _jsx(Detail, {\n      title: \"Date\",\n      value: dateFormatter(dateCreated)\n    }), _jsx(Detail, {\n      title: \"Bank Name\",\n      value: bankName\n    }), _jsx(Detail, {\n      title: \"Account Name\",\n      value: accountName\n    }), _jsx(Detail, {\n      title: \"Account Number\",\n      value: accountNumber\n    }), _jsx(Detail, {\n      title: \"Amount\",\n      value: currencyFormatter(amount)\n    })]\n  });\n};\n\nexport default PaymentDetailsScreen;","map":{"version":3,"sources":["/Users/airagalias/Documents/GitHub/maximarket-mobile-ts/src/screens/payment/PaymentDetailsScreen.tsx"],"names":["React","useAppSelecter","colors","dateFormatter","styles","Detail","AppText","currencyFormatter","PaymentDetailsScreen","state","invoice","selectedPayment","status","bankName","accountName","accountNumber","dateCreated","amount","referenceNumber","bg_green","bg_light","bg_red","bg_yellow","container","m_15","px_5","p_15","rounded","light","renderPaymentStatusBadge"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useAppSelecter } from '../../store/configureStore';\nimport { View } from 'react-native';\n\nimport colors from '../../styles/colors';\nimport { dateFormatter } from '../../utils/dateFormatter';\nimport { styles } from '../../styles/styles';\nimport Detail from '../../components/item/Detail';\nimport AppText from '../../components/text/AppText';\nimport { currencyFormatter } from '../../utils/currencyFormatter';\n\ninterface Props {\n}\n\nconst PaymentDetailsScreen: React.FC<Props> = ({ }) => {\n    const { selectedPayment } = useAppSelecter((state) => state.invoice)\n    const { status, bankName, accountName, accountNumber, dateCreated, amount, referenceNumber } = selectedPayment!\n\n    const { bg_green, bg_light, bg_red, bg_yellow, container, m_15, px_5, p_15, rounded } = styles\n    const { light } = colors\n\n    const renderPaymentStatusBadge = (status: number) => {\n        if (status == 0 || status == 1) {\n            return (\n                <View style={[bg_yellow, px_5, rounded]}>\n                    <AppText as='h5' color={light}>Pending</AppText>\n                </View >\n            )\n        }\n        if (status == 2) {\n            return (\n\n                <View style={[bg_green, px_5, rounded]}>\n                    <AppText as='h5' color={light}>Approved</AppText>\n                </View>)\n        }\n        return (\n            <View style={[bg_red, px_5, rounded]}>\n                <AppText as='h5' color={light}>Declined</AppText>\n            </View>\n        )\n    }\n\n    return (\n        <View style={[bg_light, container, m_15, p_15, rounded]}>\n            <Detail title='Reference Number' value={referenceNumber} />\n            <Detail title='Status' value={renderPaymentStatusBadge(status)} />\n            <Detail title='Date' value={dateFormatter(dateCreated)} />\n            <Detail title='Bank Name' value={bankName} />\n            <Detail title='Account Name' value={accountName} />\n            <Detail title='Account Number' value={accountNumber} />\n            <Detail title='Amount' value={currencyFormatter(amount)} />\n        </View>\n    );\n}\n\nexport default PaymentDetailsScreen;"]},"metadata":{},"sourceType":"module"}