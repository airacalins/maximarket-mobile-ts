{"ast":null,"code":"import axios from 'axios';\nimport Toast from 'react-native-toast-message';\naxios.defaults.baseURL = 'https://fast-badlands-66183.herokuapp.com/api/';\n\nvar responseBody = function responseBody(response) {\n  return response.data;\n};\n\naxios.interceptors.response.use(function (response) {\n  return response;\n}, function (error) {\n  var _error$response = error.response,\n      data = _error$response.data,\n      status = _error$response.status;\n\n  switch (status) {\n    case 400:\n      if (data.errors) {\n        var modelStateErrors = [];\n\n        for (var key in data.errors) {\n          if (data.errors[key]) {\n            modelStateErrors.push(data.errors[key]);\n            Toast.show({\n              type: 'error',\n              text1: \"Error message\",\n              text2: data.errors[key][0]\n            });\n          }\n        }\n\n        throw modelStateErrors.flat();\n      }\n\n      Toast.show(data.title);\n      break;\n\n    case 401:\n      Toast.show({\n        type: 'error',\n        text1: \"Error message\",\n        text2: data.title || 'Unauthorized'\n      });\n      break;\n\n    case 500:\n      Toast.show({\n        type: 'error',\n        text1: \"Error message\",\n        text2: \"Server error\"\n      });\n      break;\n\n    default:\n      break;\n  }\n\n  return Promise.reject(error.response);\n});\nvar request = {\n  get: function get(url) {\n    return axios.get(url).then(responseBody);\n  },\n  post: function post(url, body) {\n    return axios.post(url, body).then(responseBody);\n  },\n  put: function put(url, body) {\n    return axios.put(url, body).then(responseBody);\n  },\n  delete: function _delete(url) {\n    return axios.delete(url).then(responseBody);\n  },\n  fileUpload: function fileUpload(url, body) {\n    return axios.post(url, body, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  }\n};\nvar Announcement = {\n  list: function list() {\n    return request.get('announcements');\n  },\n  details: function details(id) {\n    return request.get(\"announcements/\" + id);\n  }\n};\nvar Invoice = {\n  list: function list(id) {\n    return request.get(\"invoices/get-tenant-invoice-by-account-number/\" + id);\n  },\n  create: function create(values) {\n    return request.fileUpload('invoices/payment/', values);\n  },\n  details: function details(id) {\n    return request.get(\"invoices/\" + id);\n  }\n};\nvar ModeOfPayment = {\n  list: function list() {\n    return request.get('modeOfPayments');\n  }\n};\nvar Slot = {\n  list: function list() {\n    return request.get('slots');\n  },\n  details: function details(id) {\n    return request.get(\"slots/\" + id);\n  }\n};\nvar Tenant = {\n  details: function details(id) {\n    return request.get(\"tenants/get-tenant-by-account-number/\" + id);\n  },\n  getContractPhotos: function getContractPhotos(id) {\n    return request.get(\"tenants/get-contract-photo/\" + id);\n  },\n  update: function update(values) {\n    return request.put('tenants', values);\n  }\n};\nvar agent = {\n  Announcement: Announcement,\n  Invoice: Invoice,\n  ModeOfPayment: ModeOfPayment,\n  Slot: Slot,\n  Tenant: Tenant\n};\nexport default agent;","map":{"version":3,"sources":["/Users/airagalias/Documents/GitHub/maximarket-mobile-ts/src/api/agent.ts"],"names":["axios","Toast","defaults","baseURL","responseBody","response","data","interceptors","use","error","status","errors","modelStateErrors","key","push","show","type","text1","text2","flat","title","Promise","reject","request","get","url","then","post","body","put","delete","fileUpload","headers","Announcement","list","details","id","Invoice","create","values","ModeOfPayment","Slot","Tenant","getContractPhotos","update","agent"],"mappings":"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","sourcesContent":["import axios, { AxiosError, AxiosResponse } from 'axios';\nimport Toast from 'react-native-toast-message'\n\naxios.defaults.baseURL = 'https://fast-badlands-66183.herokuapp.com/api/';\n\nconst responseBody = (response: any) => response.data;\n\naxios.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    const { data, status } = error.response;\n    switch (status) {\n      case 400:\n        if (data.errors) {\n          const modelStateErrors = [];\n          for (const key in data.errors) {\n            if (data.errors[key]) {\n              modelStateErrors.push(data.errors[key]);\n              Toast.show({ type: 'error', text1: \"Error message\", text2: data.errors[key][0] });\n            }\n          }\n          throw modelStateErrors.flat();\n        }\n        Toast.show(data.title);\n        break;\n\n      case 401:\n        Toast.show({ type: 'error', text1: \"Error message\", text2: data.title || 'Unauthorized' });\n        break;\n\n      case 500:\n        Toast.show({ type: 'error', text1: \"Error message\", text2: \"Server error\" });\n        break;\n      default:\n        break;\n    }\n    return Promise.reject(error.response);\n  }\n);\n\nconst request = {\n  get: (url: string) => axios.get(url).then(responseBody),\n  post: (url: string, body: {}) => axios.post(url, body).then(responseBody),\n  put: (url: string, body: {}) => axios.put(url, body).then(responseBody),\n  delete: (url: string) => axios.delete(url).then(responseBody),\n  fileUpload: (url: string, body: {}) => axios.post(url, body, { headers: { 'Content-Type': 'multipart/form-data' }})\n};\n\nconst Announcement = {\n  list: () => request.get('announcements'),\n  details: (id: string) => request.get(`announcements/${id}`),\n}\n\nconst Invoice = {\n  list: (id: string) => request.get(`invoices/get-tenant-invoice-by-account-number/${id}`),\n  create: (values: any) => request.fileUpload('invoices/payment/', values),\n  details: (id: string) => request.get(`invoices/${id}`),\n}\n\nconst ModeOfPayment = {\n  list: () => request.get('modeOfPayments')\n}\n\nconst Slot = {\n  list: () => request.get('slots'),\n  details: (id: string) => request.get(`slots/${id}`),\n}\n\nconst Tenant = {\n  details: (id :string) => request.get(`tenants/get-tenant-by-account-number/${id}`),\n  getContractPhotos: (id: string) => request.get(`tenants/get-contract-photo/${id}`),\n  update: (values: any) => request.put('tenants', values),\n};\n\nconst agent = {\n  Announcement,\n  Invoice,\n  ModeOfPayment,\n  Slot,\n  Tenant\n};\n\nexport default agent;\n"]},"metadata":{},"sourceType":"module"}