{"ast":null,"code":"import React, { useEffect, useMemo } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Entypo } from '@expo/vector-icons';\nimport { FontAwesome } from '@expo/vector-icons';\nimport { useAppDispatch, useAppSelecter } from \"../../store/configureStore\";\nimport colors from \"../../styles/colors\";\nimport { styles } from \"../../styles/styles\";\nimport AppText from \"../../components/text/AppText\";\nimport AppMenu from \"../../components/menu/AppMenu\";\nimport { dateFormatter } from \"../../utils/dateFormatter\";\nimport { currencyFormatter } from \"../../utils/currencyFormatter\";\nimport { fetchInvoicesAsync } from \"../../reducers/invoiceSlice\";\nimport LoadingScreen from \"../../components/indicator/LoadingScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var dispatch = useAppDispatch();\n\n  var _useAppSelecter = useAppSelecter(function (state) {\n    return state.tenant;\n  }),\n      tenant = _useAppSelecter.tenant;\n\n  var _useAppSelecter2 = useAppSelecter(function (state) {\n    return state.invoice;\n  }),\n      invoices = _useAppSelecter2.invoices,\n      isFetchingInvoices = _useAppSelecter2.isFetchingInvoices;\n\n  var _ref2 = tenant,\n      firstName = _ref2.firstName,\n      tenantUniqueId = _ref2.tenantUniqueId,\n      contract = _ref2.contract;\n  var _ref3 = contract,\n      slotNumber = _ref3.slotNumber,\n      nextBillingDate = _ref3.nextBillingDate;\n  useEffect(function () {\n    if (!!tenant) dispatch(fetchInvoicesAsync(tenant.tenantUniqueId));\n  }, [tenant]);\n  var totalBalance = useMemo(function () {\n    return !!invoices ? invoices.reduce(function (previousValue, currentValue) {\n      return previousValue + currentValue.balance;\n    }, 0) : 0;\n  }, [invoices]);\n  var bg_dark = styles.bg_dark,\n      bg_light = styles.bg_light,\n      bg_secondary = styles.bg_secondary,\n      container_full = styles.container_full,\n      icon_circle_xs = styles.icon_circle_xs,\n      mb_10 = styles.mb_10,\n      me_8 = styles.me_8,\n      my_5 = styles.my_5,\n      my_15 = styles.my_15,\n      pb_15 = styles.pb_15,\n      px_15 = styles.px_15,\n      py_25 = styles.py_25,\n      rounded = styles.rounded,\n      row = styles.row,\n      row_center_x = styles.row_center_x,\n      row_center_x_between = styles.row_center_x_between,\n      row_center_y = styles.row_center_y,\n      w_50p = styles.w_50p;\n  var darkGrey = colors.darkGrey,\n      light = colors.light;\n  if (isFetchingInvoices) return _jsx(LoadingScreen, {});\n  return _jsxs(View, {\n    style: container_full,\n    children: [_jsxs(View, {\n      style: [my_5, row_center_x_between],\n      children: [_jsxs(View, {\n        children: [_jsxs(AppText, {\n          bold: true,\n          color: darkGrey,\n          children: [\"Hi, \", firstName]\n        }), _jsx(AppText, {\n          bold: true,\n          children: tenantUniqueId\n        })]\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate('AnnouncementNavigator');\n        },\n        children: _jsx(FontAwesome, {\n          name: \"bell\",\n          size: 20,\n          color: colors.darkGrey\n        })\n      })]\n    }), _jsxs(View, {\n      style: [bg_dark, px_15, py_25, rounded, my_15],\n      children: [_jsxs(View, {\n        style: [pb_15, row_center_y],\n        children: [_jsx(AppText, {\n          as: \"h5\",\n          color: light,\n          children: \"Total Balance\"\n        }), _jsx(AppText, {\n          as: \"h3\",\n          bold: true,\n          color: light,\n          children: currencyFormatter(totalBalance)\n        })]\n      }), _jsxs(View, {\n        style: row,\n        children: [_jsxs(View, {\n          style: [row_center_x, w_50p],\n          children: [_jsx(View, {\n            style: [icon_circle_xs, me_8, bg_secondary],\n            children: _jsx(Entypo, {\n              name: \"location-pin\",\n              size: 15,\n              color: light\n            })\n          }), _jsxs(View, {\n            children: [_jsx(AppText, {\n              as: \"h5\",\n              color: light,\n              children: \"Slot Number\"\n            }), _jsx(AppText, {\n              as: \"h5\",\n              bold: true,\n              color: light,\n              children: slotNumber\n            })]\n          })]\n        }), _jsxs(View, {\n          style: [row_center_x, w_50p],\n          children: [_jsx(View, {\n            style: [icon_circle_xs, me_8, bg_secondary],\n            children: _jsx(FontAwesome, {\n              name: \"calendar-o\",\n              size: 15,\n              color: light\n            })\n          }), _jsxs(View, {\n            children: [_jsx(AppText, {\n              as: \"h5\",\n              color: light,\n              children: \"Next Billing Date\"\n            }), _jsx(AppText, {\n              as: \"h5\",\n              bold: true,\n              color: light,\n              children: dateFormatter(nextBillingDate)\n            })]\n          })]\n        })]\n      })]\n    }), _jsx(View, {\n      style: [bg_light, rounded, mb_10],\n      children: _jsx(AppMenu, {\n        title: \"Invoices\",\n        subtitle: \"View recent invoices\",\n        icon: _jsx(FontAwesome, {\n          name: \"file-text-o\",\n          size: 22,\n          color: light\n        }),\n        onPress: function onPress() {\n          return navigation.navigate(\"InvoicesNavigator\");\n        }\n      })\n    })]\n  });\n};\n\nexport default HomeScreen;","map":{"version":3,"sources":["/Users/airagalias/Documents/GitHub/maximarket-mobile-ts/src/screens/account/HomeScreen.tsx"],"names":["React","useEffect","useMemo","Entypo","FontAwesome","useAppDispatch","useAppSelecter","colors","styles","AppText","AppMenu","dateFormatter","currencyFormatter","fetchInvoicesAsync","LoadingScreen","HomeScreen","navigation","dispatch","state","tenant","invoice","invoices","isFetchingInvoices","firstName","tenantUniqueId","contract","slotNumber","nextBillingDate","totalBalance","reduce","previousValue","currentValue","balance","bg_dark","bg_light","bg_secondary","container_full","icon_circle_xs","mb_10","me_8","my_5","my_15","pb_15","px_15","py_25","rounded","row","row_center_x","row_center_x_between","row_center_y","w_50p","darkGrey","light","navigate"],"mappings":"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","sourcesContent":["import React, { useEffect, useMemo } from 'react';\nimport { TouchableOpacity, View } from 'react-native';\nimport { Entypo } from '@expo/vector-icons';\nimport { FontAwesome } from '@expo/vector-icons';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\n\nimport { useAppDispatch, useAppSelecter } from '../../store/configureStore';\nimport colors from '../../styles/colors';\nimport { styles } from '../../styles/styles';\nimport AppText from '../../components/text/AppText';\nimport AppMenu from '../../components/menu/AppMenu';\nimport { dateFormatter } from '../../utils/dateFormatter';\nimport { currencyFormatter } from '../../utils/currencyFormatter';\nimport { fetchInvoicesAsync } from '../../reducers/invoiceSlice';\nimport LoadingScreen from '../../components/indicator/LoadingScreen';\n\ninterface Props {\n    navigation: any\n}\n\nconst HomeScreen: React.FC<Props> = ({ navigation }) => {\n    const dispatch = useAppDispatch();\n    const { tenant } = useAppSelecter((state) => state.tenant)\n    const { invoices, isFetchingInvoices } = useAppSelecter((state) => state.invoice)\n\n    const { firstName, tenantUniqueId, contract } = tenant!;\n    const { slotNumber, nextBillingDate } = contract!;\n\n    useEffect(() => {\n        if (!!tenant)\n            dispatch(fetchInvoicesAsync(tenant.tenantUniqueId))\n    }, [tenant])\n\n    const totalBalance = useMemo(\n        () => !!invoices ?\n            invoices.reduce((previousValue, currentValue) =>\n                previousValue + currentValue.balance, 0) : 0,\n        [invoices]\n    );\n\n    const { bg_dark, bg_light, bg_secondary, container_full, icon_circle_xs, mb_10, me_8, my_5, my_15, pb_15, px_15, py_25, rounded, row, row_center_x, row_center_x_between, row_center_y, w_50p } = styles;\n    const { darkGrey, light } = colors;\n\n    if (isFetchingInvoices) return <LoadingScreen />\n\n    return (\n\n        <View style={container_full}>\n            <View style={[my_5, row_center_x_between]}>\n                <View>\n                    <AppText bold color={darkGrey}>Hi, {firstName}</AppText>\n                    <AppText bold>{tenantUniqueId}</AppText>\n                </View>\n\n                <TouchableOpacity onPress={() => navigation.navigate('AnnouncementNavigator')}>\n                    <FontAwesome name=\"bell\" size={20} color={colors.darkGrey} />\n                </TouchableOpacity>\n            </View>\n\n            <View style={[bg_dark, px_15, py_25, rounded, my_15]}>\n                <View style={[pb_15, row_center_y]}>\n                    <AppText as=\"h5\" color={light}>Total Balance</AppText>\n                    <AppText as=\"h3\" bold color={light}>{currencyFormatter(totalBalance)}</AppText>\n                </View>\n\n                <View style={row}>\n                    <View style={[row_center_x, w_50p]}>\n                        <View style={[icon_circle_xs, me_8, bg_secondary]}>\n                            <Entypo name=\"location-pin\" size={15} color={light} />\n                        </View>\n\n                        <View>\n                            <AppText as=\"h5\" color={light}>Slot Number</AppText>\n                            <AppText as=\"h5\" bold color={light}>{slotNumber}</AppText>\n                        </View>\n                    </View>\n\n                    <View style={[row_center_x, w_50p]}>\n                        <View style={[icon_circle_xs, me_8, bg_secondary]}>\n                            <FontAwesome name=\"calendar-o\" size={15} color={light} />\n                        </View>\n\n                        <View>\n                            <AppText as=\"h5\" color={light}>Next Billing Date</AppText>\n                            <AppText as=\"h5\" bold color={light}>{dateFormatter(nextBillingDate)}</AppText>\n                        </View>\n                    </View>\n                </View>\n            </View>\n\n            <View style={[bg_light, rounded, mb_10]}>\n                <AppMenu\n                    title='Invoices'\n                    subtitle='View recent invoices'\n                    icon={<FontAwesome name=\"file-text-o\" size={22} color={light} />}\n                    onPress={() => navigation.navigate(\"InvoicesNavigator\")}\n                />\n            </View>\n\n        </View >\n\n    );\n}\n\n\nexport default HomeScreen;"]},"metadata":{},"sourceType":"module"}