{"ast":null,"code":"import _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport agent from \"../api/agent\";\nvar initialState = {\n  tenant: undefined,\n  isFetchingTenantDetails: false,\n  isSaving: false,\n  contractPhotos: [],\n  isFetchingPhotos: false,\n  errorMessage: \"\"\n};\nexport var fetchTenantDetailsAsync = createAsyncThunk('tenants/fetchTenantDetailsAsync', function _callee(id, thunkAPI) {\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(agent.Tenant.details(id));\n\n        case 3:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 6:\n          _context.prev = 6;\n          _context.t0 = _context[\"catch\"](0);\n          return _context.abrupt(\"return\", thunkAPI.rejectWithValue({\n            error: _context.t0.data\n          }));\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n});\nexport var getTenantContractPhoto = createAsyncThunk('tenants/getTenantContractPhoto', function _callee2(model, thunkAPI) {\n  return _regeneratorRuntime.async(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(agent.Tenant.getContractPhotos(model));\n\n        case 3:\n          return _context2.abrupt(\"return\", _context2.sent);\n\n        case 6:\n          _context2.prev = 6;\n          _context2.t0 = _context2[\"catch\"](0);\n          return _context2.abrupt(\"return\", thunkAPI.rejectWithValue({\n            error: _context2.t0.data\n          }));\n\n        case 9:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n});\nexport var tenantSlice = createSlice({\n  name: 'tenant',\n  initialState: initialState,\n  reducers: {},\n  extraReducers: function extraReducers(builder) {\n    builder.addCase(fetchTenantDetailsAsync.pending, function (state, action) {\n      state.isFetchingTenantDetails = true;\n    });\n    builder.addCase(fetchTenantDetailsAsync.fulfilled, function (state, action) {\n      state.tenant = action.payload;\n      state.isFetchingTenantDetails = false;\n    });\n    builder.addCase(fetchTenantDetailsAsync.rejected, function (state, action) {\n      state.errorMessage = \"Invalid Account Number\";\n      state.isFetchingTenantDetails = false;\n    });\n    builder.addCase(getTenantContractPhoto.pending, function (state, action) {\n      state.isFetchingPhotos = true;\n    });\n    builder.addCase(getTenantContractPhoto.fulfilled, function (state, action) {\n      state.contractPhotos = action.payload;\n      state.isFetchingPhotos = false;\n    });\n    builder.addCase(getTenantContractPhoto.rejected, function (state, action) {\n      state.errorMessage = \"No contract photo\";\n      state.isFetchingPhotos = false;\n    });\n  }\n});\n\n_objectDestructuringEmpty(tenantSlice.actions);\n\nexport {};","map":{"version":3,"sources":["/Users/airagalias/Documents/GitHub/maximarket-mobile-ts/src/reducers/tenantSlice.ts"],"names":["createAsyncThunk","createSlice","agent","initialState","tenant","undefined","isFetchingTenantDetails","isSaving","contractPhotos","isFetchingPhotos","errorMessage","fetchTenantDetailsAsync","id","thunkAPI","Tenant","details","rejectWithValue","error","data","getTenantContractPhoto","model","getContractPhotos","tenantSlice","name","reducers","extraReducers","builder","addCase","pending","state","action","fulfilled","payload","rejected","actions"],"mappings":";;AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,KAAP;AAaA,IAAMC,YAA0B,GAAG;AACjCC,EAAAA,MAAM,EAAEC,SADyB;AAEjCC,EAAAA,uBAAuB,EAAE,KAFQ;AAGjCC,EAAAA,QAAQ,EAAE,KAHuB;AAIjCC,EAAAA,cAAc,EAAC,EAJkB;AAKjCC,EAAAA,gBAAgB,EAAE,KALe;AAMjCC,EAAAA,YAAY,EAAE;AANmB,CAAnC;AASA,OAAO,IAAMC,uBAAuB,GAAGX,gBAAgB,CACrD,iCADqD,EAErD,iBAAOY,EAAP,EAAWC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEiBX,KAAK,CAACY,MAAN,CAAaC,OAAb,CAAqBH,EAArB,CAFjB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,2CAIWC,QAAQ,CAACG,eAAT,CAAyB;AAACC,YAAAA,KAAK,EAAE,YAAMC;AAAd,WAAzB,CAJX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAFqD,CAAhD;AAWP,OAAO,IAAMC,sBAAsB,GAAGnB,gBAAgB,CACpD,gCADoD,EAEpD,kBAAOoB,KAAP,EAAcP,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEiBX,KAAK,CAACY,MAAN,CAAaO,iBAAb,CAA+BD,KAA/B,CAFjB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,4CAIWP,QAAQ,CAACG,eAAT,CAAyB;AAACC,YAAAA,KAAK,EAAE,aAAMC;AAAd,WAAzB,CAJX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAFoD,CAA/C;AAWP,OAAO,IAAMI,WAAW,GAAGrB,WAAW,CAAC;AACrCsB,EAAAA,IAAI,EAAE,QAD+B;AAErCpB,EAAAA,YAAY,EAAZA,YAFqC;AAGrCqB,EAAAA,QAAQ,EAAE,EAH2B;AAKrCC,EAAAA,aAAa,EAAG,uBAAAC,OAAO,EAAI;AAGzBA,IAAAA,OAAO,CAACC,OAAR,CAAgBhB,uBAAuB,CAACiB,OAAxC,EAAiD,UAACC,KAAD,EAAQC,MAAR,EAAmB;AAClED,MAAAA,KAAK,CAACvB,uBAAN,GAAgC,IAAhC;AACD,KAFD;AAGAoB,IAAAA,OAAO,CAACC,OAAR,CAAgBhB,uBAAuB,CAACoB,SAAxC,EAAmD,UAACF,KAAD,EAAQC,MAAR,EAAmB;AACpED,MAAAA,KAAK,CAACzB,MAAN,GAAe0B,MAAM,CAACE,OAAtB;AACAH,MAAAA,KAAK,CAACvB,uBAAN,GAAgC,KAAhC;AACD,KAHD;AAIAoB,IAAAA,OAAO,CAACC,OAAR,CAAgBhB,uBAAuB,CAACsB,QAAxC,EAAkD,UAACJ,KAAD,EAAQC,MAAR,EAAmB;AACnED,MAAAA,KAAK,CAACnB,YAAN,GAAqB,wBAArB;AACAmB,MAAAA,KAAK,CAACvB,uBAAN,GAAgC,KAAhC;AACD,KAHD;AAMAoB,IAAAA,OAAO,CAACC,OAAR,CAAgBR,sBAAsB,CAACS,OAAvC,EAAgD,UAACC,KAAD,EAAQC,MAAR,EAAmB;AACjED,MAAAA,KAAK,CAACpB,gBAAN,GAAyB,IAAzB;AACD,KAFD;AAIAiB,IAAAA,OAAO,CAACC,OAAR,CAAgBR,sBAAsB,CAACY,SAAvC,EAAkD,UAACF,KAAD,EAAQC,MAAR,EAAmB;AACnED,MAAAA,KAAK,CAACrB,cAAN,GAAuBsB,MAAM,CAACE,OAA9B;AACAH,MAAAA,KAAK,CAACpB,gBAAN,GAAyB,KAAzB;AACD,KAHD;AAKAiB,IAAAA,OAAO,CAACC,OAAR,CAAgBR,sBAAsB,CAACc,QAAvC,EAAiD,UAACJ,KAAD,EAAQC,MAAR,EAAmB;AAClED,MAAAA,KAAK,CAACnB,YAAN,GAAqB,mBAArB;AACAmB,MAAAA,KAAK,CAACpB,gBAAN,GAAyB,KAAzB;AACD,KAHD;AAMD;AApCoC,CAAD,CAA/B;;AAuCA,0BAAYa,WAAW,CAACY,OAAxB","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\nimport agent from \"../api/agent\";\nimport { ITenant } from \"../components/models/Tenant\";\nimport { IContractPhotos } from \"../components/models/TenantContract\";\n\nexport interface ITenantState {\n  tenant?: ITenant;\n  isFetchingTenantDetails: boolean;\n  isSaving: boolean;\n  isFetchingPhotos: boolean;\n  contractPhotos: IContractPhotos[];\n  errorMessage: string\n}\n\nconst initialState: ITenantState = {\n  tenant: undefined,\n  isFetchingTenantDetails: false,\n  isSaving: false,\n  contractPhotos:[],\n  isFetchingPhotos: false,\n  errorMessage: \"\"\n}\n\nexport const fetchTenantDetailsAsync = createAsyncThunk<ITenant, string>(\n  'tenants/fetchTenantDetailsAsync',\n  async (id, thunkAPI) => {\n    try {\n      return await agent.Tenant.details(id);\n    } catch (error: any) {\n      return thunkAPI.rejectWithValue({error: error.data})\n    }\n  }\n)\n\nexport const getTenantContractPhoto = createAsyncThunk<any, string>(\n  'tenants/getTenantContractPhoto',\n  async (model, thunkAPI) => {\n    try {\n      return await agent.Tenant.getContractPhotos(model);\n    } catch (error: any) {\n      return thunkAPI.rejectWithValue({error: error.data})\n    }\n  }\n)\n\nexport const tenantSlice = createSlice({\n  name: 'tenant',\n  initialState,\n  reducers: {\n  },\n  extraReducers: (builder => {\n\n    \n    builder.addCase(fetchTenantDetailsAsync.pending, (state, action) => {\n      state.isFetchingTenantDetails = true;\n    });\n    builder.addCase(fetchTenantDetailsAsync.fulfilled, (state, action) => {\n      state.tenant = action.payload;\n      state.isFetchingTenantDetails = false;\n    });\n    builder.addCase(fetchTenantDetailsAsync.rejected, (state, action) => {\n      state.errorMessage = \"Invalid Account Number\";\n      state.isFetchingTenantDetails = false;\n    });\n    \n\n    builder.addCase(getTenantContractPhoto.pending, (state, action) => {\n      state.isFetchingPhotos = true;\n    });\n\n    builder.addCase(getTenantContractPhoto.fulfilled, (state, action) => {\n      state.contractPhotos = action.payload;\n      state.isFetchingPhotos = false;\n    });\n    \n    builder.addCase(getTenantContractPhoto.rejected, (state, action) => {\n      state.errorMessage = \"No contract photo\";\n      state.isFetchingPhotos = false;\n    });\n\n\n  })\n})\n\nexport const { } = tenantSlice.actions;"]},"metadata":{},"sourceType":"module"}