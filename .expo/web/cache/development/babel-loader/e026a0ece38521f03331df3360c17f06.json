{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport LoadingScreen from \"../../components/indicator/LoadingScreen\";\nimport FormTextInput from \"../../components/input/FormTextInput\";\nimport AppText from \"../../components/text/AppText\";\nimport { useAppSelecter } from \"../../store/configureStore\";\nimport colors from \"../../styles/colors\";\nimport { styles } from \"../../styles/styles\";\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport AppButton from \"../../components/button/AppButton\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar PaymentFormScreen = function PaymentFormScreen() {\n  var _useAppSelecter = useAppSelecter(function (state) {\n    return state.invoice;\n  }),\n      invoice = _useAppSelecter.invoice,\n      isFetchingInvoiceDetails = _useAppSelecter.isFetchingInvoiceDetails;\n\n  var bg_light = styles.bg_light,\n      container = styles.container,\n      my_5 = styles.my_5,\n      row_center_x = styles.row_center_x;\n  var darkGrey = colors.darkGrey,\n      primary = colors.primary;\n  var _ref = invoice,\n      invoiceNumber = _ref.invoiceNumber;\n  if (isFetchingInvoiceDetails) return _jsx(LoadingScreen, {});\n  return _jsxs(View, {\n    style: container,\n    children: [_jsxs(View, {\n      style: [my_5],\n      children: [_jsx(AppText, {\n        as: \"h5\",\n        bold: true,\n        color: darkGrey,\n        children: \"Invoice Number\"\n      }), _jsx(AppText, {\n        bold: true,\n        children: invoiceNumber\n      })]\n    }), _jsx(FormTextInput, {\n      label: \"Mode of Payment\"\n    }), _jsx(FormTextInput, {\n      label: \"Amount\",\n      icon: _jsx(MaterialIcons, {\n        name: \"money\",\n        size: 20,\n        color: primary\n      }),\n      placeholder: \"Amount\"\n    }), _jsx(AppText, {\n      as: \"h5\",\n      bold: true,\n      color: darkGrey,\n      children: \"Proof of Payment\"\n    }), _jsx(View, {\n      style: [bg_light],\n      children: _jsx(MaterialCommunityIcons, {\n        name: \"camera-account\",\n        size: 50,\n        color: darkGrey\n      })\n    }), _jsx(AppButton, {\n      title: \"Submit\"\n    })]\n  });\n};\n\nexport default PaymentFormScreen;","map":{"version":3,"sources":["/Users/airagalias/Documents/GitHub/maximarket-mobile-ts/src/screens/payment/PaymentFormScreen.tsx"],"names":["React","LoadingScreen","FormTextInput","AppText","useAppSelecter","colors","styles","MaterialIcons","MaterialCommunityIcons","AppButton","PaymentFormScreen","state","invoice","isFetchingInvoiceDetails","bg_light","container","my_5","row_center_x","darkGrey","primary","invoiceNumber"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAOC,aAAP;AACA,OAAOC,aAAP;AACA,OAAOC,OAAP;AACA,SAASC,cAAT;AACA,OAAOC,MAAP;AACA,SAASC,MAAT;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,sBAAT,QAAuC,oBAAvC;AAEA,OAAOC,SAAP;;;;AAGA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAE5B,wBAA8CN,cAAc,CAAC,UAACO,KAAD;AAAA,WAAWA,KAAK,CAACC,OAAjB;AAAA,GAAD,CAA5D;AAAA,MAAQA,OAAR,mBAAQA,OAAR;AAAA,MAAiBC,wBAAjB,mBAAiBA,wBAAjB;;AAEA,MAAQC,QAAR,GAAoDR,MAApD,CAAQQ,QAAR;AAAA,MAAkBC,SAAlB,GAAoDT,MAApD,CAAkBS,SAAlB;AAAA,MAA6BC,IAA7B,GAAoDV,MAApD,CAA6BU,IAA7B;AAAA,MAAmCC,YAAnC,GAAoDX,MAApD,CAAmCW,YAAnC;AACA,MAAQC,QAAR,GAA8Bb,MAA9B,CAAQa,QAAR;AAAA,MAAkBC,OAAlB,GAA8Bd,MAA9B,CAAkBc,OAAlB;AAEA,aAA0BP,OAA1B;AAAA,MAAQQ,aAAR,QAAQA,aAAR;AAEA,MAAIP,wBAAJ,EAA8B,OAAO,KAAC,aAAD,KAAP;AAE9B,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEE,SAAb;AAAA,eAEI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAE,CAACC,IAAD,CAAb;AAAA,iBACI,KAAC,OAAD;AAAS,QAAA,EAAE,EAAC,IAAZ;AAAiB,QAAA,IAAI,MAArB;AAAsB,QAAA,KAAK,EAAEE,QAA7B;AAAA;AAAA,QADJ,EAEI,KAAC,OAAD;AAAS,QAAA,IAAI,MAAb;AAAA,kBAAgBE;AAAhB,QAFJ;AAAA,MAFJ,EAOI,KAAC,aAAD;AAAe,MAAA,KAAK,EAAC;AAArB,MAPJ,EAQI,KAAC,aAAD;AAAe,MAAA,KAAK,EAAC,QAArB;AAA8B,MAAA,IAAI,EAAE,KAAC,aAAD;AAAe,QAAA,IAAI,EAAC,OAApB;AAA4B,QAAA,IAAI,EAAE,EAAlC;AAAsC,QAAA,KAAK,EAAED;AAA7C,QAApC;AAA8F,MAAA,WAAW,EAAC;AAA1G,MARJ,EAUI,KAAC,OAAD;AAAS,MAAA,EAAE,EAAC,IAAZ;AAAiB,MAAA,IAAI,MAArB;AAAsB,MAAA,KAAK,EAAED,QAA7B;AAAA;AAAA,MAVJ,EAWI,KAAC,IAAD;AAAM,MAAA,KAAK,EAAE,CAACJ,QAAD,CAAb;AAAA,gBACI,KAAC,sBAAD;AAAwB,QAAA,IAAI,EAAC,gBAA7B;AAA8C,QAAA,IAAI,EAAE,EAApD;AAAwD,QAAA,KAAK,EAAEI;AAA/D;AADJ,MAXJ,EAeI,KAAC,SAAD;AAAW,MAAA,KAAK,EAAC;AAAjB,MAfJ;AAAA,IADJ;AAoBH,CA/BD;;AAiCA,eAAeR,iBAAf","sourcesContent":["import React from 'react';\nimport { Text, View } from 'react-native';\nimport LoadingScreen from '../../components/indicator/LoadingScreen';\nimport FormTextInput from '../../components/input/FormTextInput';\nimport AppText from '../../components/text/AppText';\nimport { useAppSelecter } from '../../store/configureStore';\nimport colors from '../../styles/colors';\nimport { styles } from '../../styles/styles';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\n\nimport AppButton from '../../components/button/AppButton';\n\n\nconst PaymentFormScreen = () => {\n\n    const { invoice, isFetchingInvoiceDetails } = useAppSelecter((state) => state.invoice)\n\n    const { bg_light, container, my_5, row_center_x } = styles\n    const { darkGrey, primary } = colors\n\n    const { invoiceNumber } = invoice!\n\n    if (isFetchingInvoiceDetails) return <LoadingScreen />\n\n    return (\n        <View style={container}>\n\n            <View style={[my_5]}>\n                <AppText as=\"h5\" bold color={darkGrey} >Invoice Number</AppText>\n                <AppText bold >{invoiceNumber}</AppText>\n            </View>\n\n            <FormTextInput label='Mode of Payment' />\n            <FormTextInput label='Amount' icon={<MaterialIcons name=\"money\" size={20} color={primary} />} placeholder='Amount' />\n\n            <AppText as=\"h5\" bold color={darkGrey} >Proof of Payment</AppText>\n            <View style={[bg_light]}>\n                <MaterialCommunityIcons name=\"camera-account\" size={50} color={darkGrey} />\n            </View>\n\n            <AppButton title='Submit' />\n\n        </View>\n    );\n}\n\nexport default PaymentFormScreen;"]},"metadata":{},"sourceType":"module"}