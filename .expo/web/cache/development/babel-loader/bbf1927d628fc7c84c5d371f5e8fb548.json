{"ast":null,"code":"import React, { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport AppText from \"../../components/text/AppText\";\nimport { useAppSelecter } from \"../../store/configureStore\";\nimport colors from \"../../styles/colors\";\nimport { styles } from \"../../styles/styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar AnnouncementsScreen = function AnnouncementsScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useAppSelecter = useAppSelecter(function (state) {\n    return state.tenant;\n  }),\n      tenant = _useAppSelecter.tenant;\n\n  var _useAppSelecter2 = useAppSelecter(function (state) {\n    return state.announcement;\n  }),\n      announcements = _useAppSelecter2.announcements,\n      isFetchingAnnouncements = _useAppSelecter2.isFetchingAnnouncements;\n\n  useEffect(function () {\n    if (!tenant) navigation.navigate(\"AuthNavigator\");\n  }, [tenant]);\n  var bg_light = styles.bg_light,\n      container = styles.container,\n      my_5 = styles.my_5,\n      p_15 = styles.p_15,\n      rounded = styles.rounded;\n  var darkGrey = colors.darkGrey;\n  return _jsxs(View, {\n    style: container,\n    children: [_jsxs(View, {\n      style: [bg_light, my_5, p_15, rounded],\n      children: [_jsx(AppText, {\n        as: \"h4\",\n        bold: true,\n        children: \"Subject\"\n      }), _jsx(AppText, {\n        as: \"h5\",\n        bold: true,\n        color: darkGrey,\n        children: \"June 27, 2021\"\n      })]\n    }), _jsxs(View, {\n      style: [bg_light, my_5, p_15, rounded],\n      children: [_jsx(AppText, {\n        as: \"h4\",\n        bold: true,\n        children: \"Subject\"\n      }), _jsx(AppText, {\n        as: \"h5\",\n        bold: true,\n        color: darkGrey,\n        children: \"June 27, 2021\"\n      })]\n    })]\n  });\n};\n\nexport default AnnouncementsScreen;","map":{"version":3,"sources":["/Users/airagalias/Documents/GitHub/maximarket-mobile-ts/src/screens/announcement/AnouncementsScreen.tsx"],"names":["React","useEffect","AppText","useAppSelecter","colors","styles","AnnouncementsScreen","navigation","state","tenant","announcement","announcements","isFetchingAnnouncements","navigate","bg_light","container","my_5","p_15","rounded","darkGrey"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAOC,OAAP;AACA,SAASC,cAAT;AACA,OAAOC,MAAP;AACA,SAASC,MAAT;;;;AAMA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAC5C,wBAAmBJ,cAAc,CAAC,UAACK,KAAD;AAAA,WAAWA,KAAK,CAACC,MAAjB;AAAA,GAAD,CAAjC;AAAA,MAAQA,MAAR,mBAAQA,MAAR;;AACA,yBAAmDN,cAAc,CAAC,UAACK,KAAD;AAAA,WAAWA,KAAK,CAACE,YAAjB;AAAA,GAAD,CAAjE;AAAA,MAAQC,aAAR,oBAAQA,aAAR;AAAA,MAAuBC,uBAAvB,oBAAuBA,uBAAvB;;AAEAX,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAI,CAACQ,MAAL,EAAaF,UAAU,CAACM,QAAX,CAAoB,eAApB;AAChB,GAFQ,EAEN,CAACJ,MAAD,CAFM,CAAT;AAIA,MAAQK,QAAR,GAAqDT,MAArD,CAAQS,QAAR;AAAA,MAAkBC,SAAlB,GAAqDV,MAArD,CAAkBU,SAAlB;AAAA,MAA6BC,IAA7B,GAAqDX,MAArD,CAA6BW,IAA7B;AAAA,MAAmCC,IAAnC,GAAqDZ,MAArD,CAAmCY,IAAnC;AAAA,MAAyCC,OAAzC,GAAqDb,MAArD,CAAyCa,OAAzC;AACA,MAAQC,QAAR,GAAqBf,MAArB,CAAQe,QAAR;AAEA,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,SAAb;AAAA,eACI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAE,CAACD,QAAD,EAAWE,IAAX,EAAiBC,IAAjB,EAAuBC,OAAvB,CAAb;AAAA,iBACI,KAAC,OAAD;AAAS,QAAA,EAAE,EAAC,IAAZ;AAAiB,QAAA,IAAI,MAArB;AAAA;AAAA,QADJ,EAEI,KAAC,OAAD;AAAS,QAAA,EAAE,EAAC,IAAZ;AAAiB,QAAA,IAAI,MAArB;AAAsB,QAAA,KAAK,EAAEC,QAA7B;AAAA;AAAA,QAFJ;AAAA,MADJ,EAMI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAE,CAACL,QAAD,EAAWE,IAAX,EAAiBC,IAAjB,EAAuBC,OAAvB,CAAb;AAAA,iBACI,KAAC,OAAD;AAAS,QAAA,EAAE,EAAC,IAAZ;AAAiB,QAAA,IAAI,MAArB;AAAA;AAAA,QADJ,EAEI,KAAC,OAAD;AAAS,QAAA,EAAE,EAAC,IAAZ;AAAiB,QAAA,IAAI,MAArB;AAAsB,QAAA,KAAK,EAAEC,QAA7B;AAAA;AAAA,QAFJ;AAAA,MANJ;AAAA,IADJ;AAaH,CAxBD;;AA0BA,eAAeb,mBAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { Text, View } from 'react-native';\nimport AppText from '../../components/text/AppText';\nimport { useAppSelecter } from '../../store/configureStore';\nimport colors from '../../styles/colors';\nimport { styles } from '../../styles/styles';\n\ninterface Props {\n    navigation: any\n}\n\nconst AnnouncementsScreen = ({ navigation }) => {\n    const { tenant } = useAppSelecter((state) => state.tenant)\n    const { announcements, isFetchingAnnouncements } = useAppSelecter((state) => state.announcement)\n\n    useEffect(() => {\n        if (!tenant) navigation.navigate(\"AuthNavigator\")\n    }, [tenant])\n\n    const { bg_light, container, my_5, p_15, rounded } = styles\n    const { darkGrey } = colors\n\n    return (\n        <View style={container}>\n            <View style={[bg_light, my_5, p_15, rounded,]}>\n                <AppText as='h4' bold>Subject</AppText>\n                <AppText as='h5' bold color={darkGrey}>June 27, 2021</AppText>\n            </View>\n\n            <View style={[bg_light, my_5, p_15, rounded,]}>\n                <AppText as='h4' bold>Subject</AppText>\n                <AppText as='h5' bold color={darkGrey}>June 27, 2021</AppText>\n            </View>\n        </View>\n    );\n}\n\nexport default AnnouncementsScreen;"]},"metadata":{},"sourceType":"module"}