{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport LoadingScreen from \"../../components/indicator/LoadingScreen\";\nimport AppText from \"../../components/text/AppText\";\nimport { useAppSelecter } from \"../../store/configureStore\";\nimport colors from \"../../styles/colors\";\nimport { styles } from \"../../styles/styles\";\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar PaymentFormScreen = function PaymentFormScreen() {\n  var _useAppSelecter = useAppSelecter(function (state) {\n    return state.invoice;\n  }),\n      invoice = _useAppSelecter.invoice,\n      isFetchingInvoiceDetails = _useAppSelecter.isFetchingInvoiceDetails;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  var bg_light = styles.bg_light,\n      container = styles.container,\n      my_5 = styles.my_5,\n      p_30 = styles.p_30,\n      row_center = styles.row_center;\n  var darkGrey = colors.darkGrey,\n      primary = colors.primary;\n  var _ref = invoice,\n      invoiceNumber = _ref.invoiceNumber;\n  if (isFetchingInvoiceDetails) return _jsx(LoadingScreen, {});\n  return _jsxs(View, {\n    style: container,\n    children: [_jsxs(View, {\n      style: [my_5],\n      children: [_jsx(AppText, {\n        as: \"h5\",\n        bold: true,\n        color: darkGrey,\n        children: \"Invoice Number\"\n      }), _jsx(AppText, {\n        bold: true,\n        children: invoiceNumber\n      })]\n    }), _jsxs(View, {\n      style: my_5,\n      children: [_jsx(AppText, {\n        as: \"h5\",\n        bold: true,\n        color: darkGrey,\n        children: \"Proof of Payment\"\n      }), _jsx(View, {\n        style: [bg_light, p_30, row_center],\n        children: _jsx(MaterialCommunityIcons, {\n          name: \"camera-account\",\n          size: 50,\n          color: darkGrey\n        })\n      })]\n    })]\n  });\n};\n\nexport default PaymentFormScreen;","map":{"version":3,"sources":["/Users/airagalias/Documents/GitHub/maximarket-mobile-ts/src/screens/payment/PaymentFormScreen.tsx"],"names":["React","useState","LoadingScreen","AppText","useAppSelecter","colors","styles","MaterialCommunityIcons","PaymentFormScreen","state","invoice","isFetchingInvoiceDetails","image","setImage","bg_light","container","my_5","p_30","row_center","darkGrey","primary","invoiceNumber"],"mappings":";AAAA,OAAOA,KAAP,IAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,OAAOC,aAAP;AAEA,OAAOC,OAAP;AACA,SAASC,cAAT;AACA,OAAOC,MAAP;AACA,SAASC,MAAT;AAEA,SAASC,sBAAT,QAAuC,oBAAvC;;;;AAMA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC5B,wBAA8CJ,cAAc,CAAC,UAACK,KAAD;AAAA,WAAWA,KAAK,CAACC,OAAjB;AAAA,GAAD,CAA5D;AAAA,MAAQA,OAAR,mBAAQA,OAAR;AAAA,MAAiBC,wBAAjB,mBAAiBA,wBAAjB;;AAEA,kBAA0BV,QAAQ,CAAC,IAAD,CAAlC;AAAA;AAAA,MAAOW,KAAP;AAAA,MAAcC,QAAd;;AAIA,MAAQC,QAAR,GAAwDR,MAAxD,CAAQQ,QAAR;AAAA,MAAkBC,SAAlB,GAAwDT,MAAxD,CAAkBS,SAAlB;AAAA,MAA6BC,IAA7B,GAAwDV,MAAxD,CAA6BU,IAA7B;AAAA,MAAmCC,IAAnC,GAAwDX,MAAxD,CAAmCW,IAAnC;AAAA,MAAyCC,UAAzC,GAAwDZ,MAAxD,CAAyCY,UAAzC;AACA,MAAQC,QAAR,GAA8Bd,MAA9B,CAAQc,QAAR;AAAA,MAAkBC,OAAlB,GAA8Bf,MAA9B,CAAkBe,OAAlB;AAEA,aAA0BV,OAA1B;AAAA,MAAQW,aAAR,QAAQA,aAAR;AAEA,MAAIV,wBAAJ,EAA8B,OAAO,KAAC,aAAD,KAAP;AAE9B,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEI,SAAb;AAAA,eAEI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAE,CAACC,IAAD,CAAb;AAAA,iBACI,KAAC,OAAD;AAAS,QAAA,EAAE,EAAC,IAAZ;AAAiB,QAAA,IAAI,MAArB;AAAsB,QAAA,KAAK,EAAEG,QAA7B;AAAA;AAAA,QADJ,EAEI,KAAC,OAAD;AAAS,QAAA,IAAI,MAAb;AAAA,kBAAgBE;AAAhB,QAFJ;AAAA,MAFJ,EAUI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEL,IAAb;AAAA,iBACI,KAAC,OAAD;AAAS,QAAA,EAAE,EAAC,IAAZ;AAAiB,QAAA,IAAI,MAArB;AAAsB,QAAA,KAAK,EAAEG,QAA7B;AAAA;AAAA,QADJ,EAEI,KAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACL,QAAD,EAAWG,IAAX,EAAiBC,UAAjB,CAAb;AAAA,kBACI,KAAC,sBAAD;AAAwB,UAAA,IAAI,EAAC,gBAA7B;AAA8C,UAAA,IAAI,EAAE,EAApD;AAAwD,UAAA,KAAK,EAAEC;AAA/D;AADJ,QAFJ;AAAA,MAVJ;AAAA,IADJ;AAsBH,CApCD;;AAsCA,eAAeX,iBAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Text, View } from 'react-native';\nimport LoadingScreen from '../../components/indicator/LoadingScreen';\nimport FormTextInput from '../../components/input/FormTextInput';\nimport AppText from '../../components/text/AppText';\nimport { useAppSelecter } from '../../store/configureStore';\nimport colors from '../../styles/colors';\nimport { styles } from '../../styles/styles';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\n\nimport AppButton from '../../components/button/AppButton';\nimport { requestCameraPermissionsAsync } from 'expo-image-picker';\n\n\nconst PaymentFormScreen = () => {\n    const { invoice, isFetchingInvoiceDetails } = useAppSelecter((state) => state.invoice)\n\n    const [image, setImage] = useState(null);\n\n\n\n    const { bg_light, container, my_5, p_30, row_center } = styles\n    const { darkGrey, primary } = colors\n\n    const { invoiceNumber } = invoice!\n\n    if (isFetchingInvoiceDetails) return <LoadingScreen />\n\n    return (\n        <View style={container}>\n\n            <View style={[my_5]}>\n                <AppText as=\"h5\" bold color={darkGrey} >Invoice Number</AppText>\n                <AppText bold >{invoiceNumber}</AppText>\n            </View>\n\n            {/* <FormTextInput label='Mode of Payment' />\n            <FormTextInput label='Amount' icon={<MaterialIcons name=\"money\" size={20} color={primary} />} placeholder='Amount' /> */}\n\n            <View style={my_5}>\n                <AppText as=\"h5\" bold color={darkGrey} >Proof of Payment</AppText>\n                <View style={[bg_light, p_30, row_center]}>\n                    <MaterialCommunityIcons name=\"camera-account\" size={50} color={darkGrey} />\n                </View>\n            </View>\n\n            {/* <AppButton title='Submit' /> */}\n\n        </View>\n    );\n}\n\nexport default PaymentFormScreen;"]},"metadata":{},"sourceType":"module"}