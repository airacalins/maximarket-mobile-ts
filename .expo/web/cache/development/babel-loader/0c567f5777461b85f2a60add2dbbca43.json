{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport agent from \"../api/agent\";\nvar initialState = {\n  invoices: [],\n  isFetchingInvoices: false,\n  invoice: undefined,\n  isFetchingInvoiceDetails: false,\n  isSaving: false,\n  isError: false,\n  paymentResult: undefined\n};\nexport var createPaymentAsync = createAsyncThunk('invoice/createPaymentAsync', function _callee(payment, thunkAPI) {\n  var bodyFormData;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          bodyFormData = new FormData();\n          bodyFormData.append('invoiceId', payment.invoiceId);\n          bodyFormData.append('file', payment.file);\n          bodyFormData.append('modeOfPaymentId', payment.modeOfPaymentId);\n          bodyFormData.append('amount', \"\" + payment.amount);\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(agent.Invoice.create(bodyFormData));\n\n        case 8:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 11:\n          _context.prev = 11;\n          _context.t0 = _context[\"catch\"](0);\n          return _context.abrupt(\"return\", thunkAPI.rejectWithValue({\n            error: _context.t0.data\n          }));\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 11]], Promise);\n});\nexport var fetchInvoicesAsync = createAsyncThunk('invoice/fetchInvoicessAsync', function _callee2(id, thunkAPI) {\n  return _regeneratorRuntime.async(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(agent.Invoice.list(id));\n\n        case 3:\n          return _context2.abrupt(\"return\", _context2.sent);\n\n        case 6:\n          _context2.prev = 6;\n          _context2.t0 = _context2[\"catch\"](0);\n          return _context2.abrupt(\"return\", thunkAPI.rejectWithValue({\n            error: _context2.t0.data\n          }));\n\n        case 9:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n});\nexport var fetchInvoiceDetailsAsync = createAsyncThunk('invoice/fetchInvoiceDetailsAsync', function _callee3(id, thunkAPI) {\n  return _regeneratorRuntime.async(function _callee3$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(agent.Invoice.details(id));\n\n        case 3:\n          return _context3.abrupt(\"return\", _context3.sent);\n\n        case 6:\n          _context3.prev = 6;\n          _context3.t0 = _context3[\"catch\"](0);\n          return _context3.abrupt(\"return\", thunkAPI.rejectWithValue({\n            error: _context3.t0.data\n          }));\n\n        case 9:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n});\nexport var invoiceSlice = createSlice({\n  name: 'invoice',\n  initialState: initialState,\n  reducers: {\n    resetPaymentResult: function resetPaymentResult(state) {\n      state.paymentResult = undefined;\n    }\n  },\n  extraReducers: function extraReducers(builder) {\n    builder.addCase(createPaymentAsync.pending, function (state, action) {\n      state.isSaving = true;\n    });\n    builder.addCase(createPaymentAsync.fulfilled, function (state, action) {\n      state.paymentResult = action.payload;\n      state.isSaving = false;\n    });\n    builder.addCase(createPaymentAsync.rejected, function (state, action) {\n      state.isSaving = false;\n    });\n    builder.addCase(fetchInvoicesAsync.pending, function (state, action) {\n      state.isError = false;\n      state.isFetchingInvoices = true;\n    });\n    builder.addCase(fetchInvoicesAsync.fulfilled, function (state, action) {\n      state.invoices = action.payload;\n      state.isError = false;\n      state.isFetchingInvoices = false;\n    });\n    builder.addCase(fetchInvoicesAsync.rejected, function (state, action) {\n      state.isError = true;\n      state.isFetchingInvoices = false;\n    });\n    builder.addCase(fetchInvoiceDetailsAsync.pending, function (state, action) {\n      state.isError = false;\n      state.isFetchingInvoiceDetails = true;\n    });\n    builder.addCase(fetchInvoiceDetailsAsync.fulfilled, function (state, action) {\n      state.invoice = action.payload;\n      state.isError = false;\n      state.isFetchingInvoiceDetails = false;\n    });\n    builder.addCase(fetchInvoiceDetailsAsync.rejected, function (state, action) {\n      state.isError = true;\n      state.isFetchingInvoiceDetails = false;\n    });\n  }\n});\nvar resetPaymentResult = invoiceSlice.actions.resetPaymentResult;\nexport { resetPaymentResult };","map":{"version":3,"sources":["/Users/airagalias/Documents/GitHub/maximarket-mobile-ts/src/reducers/invoiceSlice.ts"],"names":["createAsyncThunk","createSlice","agent","initialState","invoices","isFetchingInvoices","invoice","undefined","isFetchingInvoiceDetails","isSaving","isError","paymentResult","createPaymentAsync","payment","thunkAPI","bodyFormData","FormData","append","invoiceId","file","modeOfPaymentId","amount","Invoice","create","rejectWithValue","error","data","fetchInvoicesAsync","id","list","fetchInvoiceDetailsAsync","details","invoiceSlice","name","reducers","resetPaymentResult","state","extraReducers","builder","addCase","pending","action","fulfilled","payload","rejected","actions"],"mappings":"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","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\nimport agent from \"../api/agent\";\nimport { ICreatePaymentInput, IInvoice, IPaymentResult } from \"../models/Invoice\";\n\nexport interface IInvoiceState {\n  invoices: IInvoice[];\n  invoice?: IInvoice;\n  isFetchingInvoices: boolean;\n  isFetchingInvoiceDetails: boolean;\n  isSaving: boolean;\n  isError: boolean;\n  paymentResult?: IPaymentResult\n}\n\nconst initialState: IInvoiceState = {\n  invoices: [],\n  isFetchingInvoices: false,\n  invoice: undefined,\n  isFetchingInvoiceDetails: false,\n  isSaving: false,\n  isError: false,\n  paymentResult: undefined,\n}\n\nexport const createPaymentAsync = createAsyncThunk<IPaymentResult, ICreatePaymentInput>(\n  'invoice/createPaymentAsync',\n  async (payment, thunkAPI) => {\n    try {\n      const bodyFormData = new FormData();\n      bodyFormData.append('invoiceId', payment.invoiceId);\n      bodyFormData.append('file', payment.file);\n      bodyFormData.append('modeOfPaymentId', payment.modeOfPaymentId);\n      bodyFormData.append('amount', `${payment.amount}`);\n      return await agent.Invoice.create(bodyFormData) as any;\n    } catch (error: any) {\n      return thunkAPI.rejectWithValue({error: error.data})\n    }\n  }\n)\n\nexport const fetchInvoicesAsync = createAsyncThunk<IInvoice[], string>(\n  'invoice/fetchInvoicessAsync',\n  async (id, thunkAPI) => {\n    try {\n      return await agent.Invoice.list(id);\n    } catch (error: any) {\n      return thunkAPI.rejectWithValue({error: error.data})\n    }\n  }\n)\n\nexport const fetchInvoiceDetailsAsync = createAsyncThunk<IInvoice, string>(\n  'invoice/fetchInvoiceDetailsAsync',\n  async (id, thunkAPI) => {\n    try {\n      return await agent.Invoice.details(id);\n    } catch (error: any) {\n      return thunkAPI.rejectWithValue({error: error.data})\n    }\n  }\n)\n\nexport const invoiceSlice = createSlice({\n  name: 'invoice',\n  initialState,\n  reducers: {\n    resetPaymentResult(state) {\n      state.paymentResult = undefined;\n    },\n  },\n\n\n  extraReducers: (builder => {\n\n    builder.addCase(createPaymentAsync.pending, (state, action) => {\n      state.isSaving = true;\n    });\n    builder.addCase(createPaymentAsync.fulfilled, (state, action) => {\n      state.paymentResult = action.payload\n      state.isSaving = false;\n    });\n    builder.addCase(createPaymentAsync.rejected, (state, action) => {\n        state.isSaving = false;\n    });\n\n    builder.addCase(fetchInvoicesAsync.pending, (state, action) => {\n        state.isError = false;\n        state.isFetchingInvoices = true;\n    });\n    builder.addCase(fetchInvoicesAsync.fulfilled, (state, action) => {\n        state.invoices = action.payload;\n        state.isError = false;\n        state.isFetchingInvoices = false;\n    });\n    builder.addCase(fetchInvoicesAsync.rejected, (state, action) => {\n        state.isError = true;\n        state.isFetchingInvoices = false;\n    });\n\n    \n    builder.addCase(fetchInvoiceDetailsAsync.pending, (state, action) => {\n        state.isError = false;\n        state.isFetchingInvoiceDetails = true;\n    });\n    builder.addCase(fetchInvoiceDetailsAsync.fulfilled, (state, action) => {\n        state.invoice = action.payload;\n        state.isError = false;\n        state.isFetchingInvoiceDetails = false;\n    });\n    builder.addCase(fetchInvoiceDetailsAsync.rejected, (state, action) => {\n        state.isError = true;\n        state.isFetchingInvoiceDetails = false;\n    });\n  })\n})\n\nexport const { resetPaymentResult } = invoiceSlice.actions;"]},"metadata":{},"sourceType":"module"}