{"ast":null,"code":"import React, { useEffect } from 'react';\nimport moment from 'moment';\nimport View from \"react-native-web/dist/exports/View\";\nimport { useAppSelecter } from \"../../store/configureStore\";\nimport { styles } from \"../../styles/styles\";\nimport AppText from \"../../components/text/AppText\";\nimport LoadingScreen from \"../../components/indicator/LoadingScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar AnnouncementDetailsScreen = function AnnouncementDetailsScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useAppSelecter = useAppSelecter(function (state) {\n    return state.tenant;\n  }),\n      tenant = _useAppSelecter.tenant;\n\n  var _useAppSelecter2 = useAppSelecter(function (state) {\n    return state.announcement;\n  }),\n      announcement = _useAppSelecter2.announcement;\n\n  useEffect(function () {\n    if (!tenant) navigation.navigate(\"AuthNavigator\");\n  }, [tenant]);\n  if (!announcement) return _jsx(LoadingScreen, {});\n  var title = announcement.title,\n      message = announcement.message,\n      dateCreated = announcement.dateCreated;\n  var bg_light = styles.bg_light,\n      container = styles.container,\n      flex_1 = styles.flex_1,\n      my_5 = styles.my_5,\n      p_15 = styles.p_15;\n  return _jsxs(View, {\n    style: [bg_light, container, flex_1, p_15],\n    children: [_jsx(AppText, {\n      bold: true,\n      children: title\n    }), _jsx(View, {\n      style: my_5,\n      children: _jsx(AppText, {\n        children: moment(dateCreated).format(\"MMM DD, YYYY\")\n      })\n    }), _jsx(AppText, {\n      children: message\n    })]\n  });\n};\n\nexport default AnnouncementDetailsScreen;","map":{"version":3,"sources":["C:/Users/Alex/Documents/GitHub/maximarket-mobile-ts/src/screens/announcement/AnnouncementDetailsScreen.tsx"],"names":["React","useEffect","moment","useAppSelecter","styles","AppText","LoadingScreen","AnnouncementDetailsScreen","navigation","state","tenant","announcement","navigate","title","message","dateCreated","bg_light","container","flex_1","my_5","p_15","format"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAGA,SAAyBC,cAAzB;AACA,SAASC,MAAT;AACA,OAAOC,OAAP;AACA,OAAOC,aAAP;;;;AAOA,IAAMC,yBAA0C,GAAG,SAA7CA,yBAA6C,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AACnE,wBAAmBL,cAAc,CAAC,UAACM,KAAD;AAAA,WAAWA,KAAK,CAACC,MAAjB;AAAA,GAAD,CAAjC;AAAA,MAAQA,MAAR,mBAAQA,MAAR;;AACA,yBAAyBP,cAAc,CAAC,UAACM,KAAD;AAAA,WAAWA,KAAK,CAACE,YAAjB;AAAA,GAAD,CAAvC;AAAA,MAAQA,YAAR,oBAAQA,YAAR;;AAEAV,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAI,CAACS,MAAL,EAAaF,UAAU,CAACI,QAAX,CAAoB,eAApB;AAChB,GAFQ,EAEN,CAACF,MAAD,CAFM,CAAT;AAIA,MAAI,CAACC,YAAL,EAAmB,OAAO,KAAC,aAAD,KAAP;AAEnB,MAAQE,KAAR,GAAwCF,YAAxC,CAAQE,KAAR;AAAA,MAAeC,OAAf,GAAwCH,YAAxC,CAAeG,OAAf;AAAA,MAAwBC,WAAxB,GAAwCJ,YAAxC,CAAwBI,WAAxB;AACA,MAAQC,QAAR,GAAoDZ,MAApD,CAAQY,QAAR;AAAA,MAAkBC,SAAlB,GAAoDb,MAApD,CAAkBa,SAAlB;AAAA,MAA6BC,MAA7B,GAAoDd,MAApD,CAA6Bc,MAA7B;AAAA,MAAqCC,IAArC,GAAoDf,MAApD,CAAqCe,IAArC;AAAA,MAA2CC,IAA3C,GAAoDhB,MAApD,CAA2CgB,IAA3C;AAEA,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACJ,QAAD,EAAWC,SAAX,EAAsBC,MAAtB,EAA8BE,IAA9B,CAAb;AAAA,eACI,KAAC,OAAD;AAAS,MAAA,IAAI,MAAb;AAAA,gBAAeP;AAAf,MADJ,EAEI,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEM,IAAb;AAAA,gBACI,KAAC,OAAD;AAAA,kBAAUjB,MAAM,CAACa,WAAD,CAAN,CAAoBM,MAApB,CAA2B,cAA3B;AAAV;AADJ,MAFJ,EAKI,KAAC,OAAD;AAAA,gBAAUP;AAAV,MALJ;AAAA,IADJ;AASH,CAtBD;;AAwBA,eAAeP,yBAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport moment from 'moment';\r\nimport { View } from 'react-native';\r\n\r\nimport { useAppDispatch, useAppSelecter } from '../../store/configureStore';\r\nimport { styles } from '../../styles/styles';\r\nimport AppText from '../../components/text/AppText';\r\nimport LoadingScreen from '../../components/indicator/LoadingScreen';\r\n\r\ninterface Props {\r\n    navigation: any,\r\n    route: any\r\n}\r\n\r\nconst AnnouncementDetailsScreen: React.FC<Props> = ({ navigation }) => {\r\n    const { tenant } = useAppSelecter((state) => state.tenant)\r\n    const { announcement } = useAppSelecter((state) => state.announcement)\r\n\r\n    useEffect(() => {\r\n        if (!tenant) navigation.navigate(\"AuthNavigator\")\r\n    }, [tenant])\r\n\r\n    if (!announcement) return <LoadingScreen />\r\n\r\n    const { title, message, dateCreated } = announcement\r\n    const { bg_light, container, flex_1, my_5, p_15 } = styles;\r\n\r\n    return (\r\n        <View style={[bg_light, container, flex_1, p_15]}>\r\n            <AppText bold>{title}</AppText>\r\n            <View style={my_5}>\r\n                <AppText>{moment(dateCreated).format(\"MMM DD, YYYY\")}</AppText>\r\n            </View>\r\n            <AppText>{message}</AppText>\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default AnnouncementDetailsScreen;"]},"metadata":{},"sourceType":"module"}