{"ast":null,"code":"import React, { useEffect } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport colors from \"../../styles/colors\";\nimport { styles } from \"../../styles/styles\";\nimport AppText from \"../../components/text/AppText\";\nimport { useAppDispatch, useAppSelecter } from \"../../store/configureStore\";\nimport { fetchInvoicesAsync } from \"../../reducers/invoiceSlice\";\nimport LoadingScreen from \"../../components/indicator/LoadingScreen\";\nimport NoData from \"../../components/indicator/NoData\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar InvoicesScreen = function InvoicesScreen(_ref) {\n  var navigation = _ref.navigation;\n  var dispatch = useAppDispatch();\n\n  var _useAppSelecter = useAppSelecter(function (state) {\n    return state.tenant;\n  }),\n      tenant = _useAppSelecter.tenant;\n\n  var _useAppSelecter2 = useAppSelecter(function (state) {\n    return state.invoice;\n  }),\n      invoices = _useAppSelecter2.invoices,\n      isFetchingInvoiceDetails = _useAppSelecter2.isFetchingInvoiceDetails;\n\n  useEffect(function () {\n    if (!tenant) navigation.navigate(\"AuthNavigator\");\n  }, [tenant]);\n  useEffect(function () {\n    dispatch(fetchInvoicesAsync(tenant == null ? void 0 : tenant.id));\n  }, []);\n  var bg_light = styles.bg_light,\n      container = styles.container,\n      my_5 = styles.my_5,\n      p_15 = styles.p_15,\n      row_center_x_between = styles.row_center_x_between,\n      rounded = styles.rounded;\n  var darkGrey = colors.darkGrey,\n      secondary = colors.secondary;\n  if (isFetchingInvoiceDetails) return _jsx(LoadingScreen, {});\n  if (!invoices) return _jsx(NoData, {});\n  return _jsx(TouchableOpacity, {\n    children: _jsx(View, {\n      style: container,\n      children: _jsx(FlatList, {\n        data: invoices,\n        keyExtractor: function keyExtractor(i) {\n          return i.id;\n        },\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item;\n          return _jsx(TouchableOpacity, {\n            onPress: function onPress() {},\n            children: _jsxs(View, {\n              style: [bg_light, my_5, p_15, row_center_x_between, rounded],\n              children: [_jsxs(View, {\n                children: [_jsx(AppText, {\n                  bold: true,\n                  children: item.invoiceNumber\n                }), _jsx(AppText, {\n                  as: \"h5\",\n                  bold: true,\n                  color: darkGrey,\n                  children: \"2022 FEB 13\"\n                })]\n              }), _jsx(AppText, {\n                as: \"h3\",\n                bold: true,\n                color: secondary,\n                children: \"20,000\"\n              })]\n            })\n          });\n        }\n      })\n    })\n  });\n};\n\nexport default InvoicesScreen;","map":{"version":3,"sources":["/Users/airagalias/Documents/GitHub/maximarket-mobile-ts/src/screens/invoice/InvoicesScreen.tsx"],"names":["React","useEffect","colors","styles","AppText","useAppDispatch","useAppSelecter","fetchInvoicesAsync","LoadingScreen","NoData","InvoicesScreen","navigation","dispatch","state","tenant","invoice","invoices","isFetchingInvoiceDetails","navigate","id","bg_light","container","my_5","p_15","row_center_x_between","rounded","darkGrey","secondary","i","item","invoiceNumber"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { FlatList, Text, TouchableOpacity, View } from 'react-native';\nimport colors from '../../styles/colors';\nimport { styles } from '../../styles/styles';\nimport { FontAwesome } from '@expo/vector-icons';\nimport AppText from '../../components/text/AppText';\nimport { useAppDispatch, useAppSelecter } from '../../store/configureStore';\nimport { useDispatch } from 'react-redux';\nimport { fetchInvoicesAsync } from '../../reducers/invoiceSlice';\nimport LoadingScreen from '../../components/indicator/LoadingScreen';\nimport NoData from '../../components/indicator/NoData';\n\ninterface Props {\n    navigation: any\n}\n\nconst InvoicesScreen: React.FC<Props> = ({ navigation }) => {\n    const dispatch = useAppDispatch()\n    const { tenant } = useAppSelecter((state) => state.tenant)\n    const { invoices, isFetchingInvoiceDetails } = useAppSelecter((state) => state.invoice)\n\n    useEffect(() => {\n        if (!tenant) navigation.navigate(\"AuthNavigator\")\n    }, [tenant])\n\n    useEffect(() => {\n        dispatch(fetchInvoicesAsync(tenant?.id!))\n    }, [])\n\n    const { bg_light, container, my_5, p_15, row_center_x_between, rounded } = styles;\n    const { darkGrey, secondary } = colors;\n\n    if (isFetchingInvoiceDetails) return <LoadingScreen />\n    if (!invoices) return <NoData />\n\n    return (\n        <TouchableOpacity>\n            <View style={container}>\n\n                <FlatList\n                    data={invoices}\n                    keyExtractor={(i) => i.id}\n                    renderItem={({ item }) =>\n                        <TouchableOpacity onPress={() => { }}>\n                            <View style={[bg_light, my_5, p_15, row_center_x_between, rounded]}>\n                                <View>\n                                    <AppText bold>{item.invoiceNumber}</AppText>\n                                    <AppText as=\"h5\" bold color={darkGrey}>2022 FEB 13</AppText>\n                                </View>\n                                <AppText as=\"h3\" bold color={secondary}>20,000</AppText>\n                            </View>\n                        </TouchableOpacity>\n                    }\n                />\n\n\n\n            </View>\n        </TouchableOpacity>\n    );\n}\n\nexport default InvoicesScreen;"]},"metadata":{},"sourceType":"module"}