{"ast":null,"code":"import React, { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport LoadingScreen from \"../../components/indicator/LoadingScreen\";\nimport Detail from \"../../components/item/Detail\";\nimport { fetchInvoiceDetailsAsync } from \"../../reducers/invoiceSlice\";\nimport { useAppSelecter } from \"../../store/configureStore\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar PaymentDetailsScreen = function PaymentDetailsScreen() {\n  var _useAppSelecter = useAppSelecter(function (state) {\n    return state.tenant;\n  }),\n      tenant = _useAppSelecter.tenant;\n\n  var _useAppSelecter2 = useAppSelecter(function (state) {\n    return state.invoice;\n  }),\n      invoice = _useAppSelecter2.invoice,\n      paymentResult = _useAppSelecter2.paymentResult,\n      isFetchingInvoiceDetails = _useAppSelecter2.isFetchingInvoiceDetails;\n\n  useEffect(function () {\n    if (!invoice) fetchInvoiceDetailsAsync(tenant == null ? void 0 : tenant.tenantUniqueId);\n  }, [invoice]);\n  if (isFetchingInvoiceDetails || !invoice) return _jsx(LoadingScreen, {});\n  var amount = paymentResult.amount,\n      dateCreated = paymentResult.dateCreated,\n      referenceNumber = paymentResult.referenceNumber;\n  return _jsxs(View, {\n    children: [_jsx(Detail, {\n      title: \"Reference Number\",\n      value: \"\"\n    }), _jsx(Detail, {\n      title: \"Status\",\n      value: \"\"\n    }), _jsx(Detail, {\n      title: \"Bank Name\",\n      value: \"\"\n    }), _jsx(Detail, {\n      title: \"Account Name\",\n      value: \"\"\n    }), _jsx(Detail, {\n      title: \"Account Number\",\n      value: \"\"\n    }), _jsx(Detail, {\n      title: \"Date\",\n      value: \"\"\n    }), _jsx(Detail, {\n      title: \"Amount\",\n      value: \"\"\n    })]\n  });\n};\n\nexport default PaymentDetailsScreen;","map":{"version":3,"sources":["/Users/airagalias/Documents/GitHub/maximarket-mobile-ts/src/screens/payment/PaymentDetailsScreen.tsx"],"names":["React","useEffect","LoadingScreen","Detail","fetchInvoiceDetailsAsync","useAppSelecter","PaymentDetailsScreen","state","tenant","invoice","paymentResult","isFetchingInvoiceDetails","tenantUniqueId","amount","dateCreated","referenceNumber"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAOC,aAAP;AACA,OAAOC,MAAP;AACA,SAASC,wBAAT;AACA,SAASC,cAAT;;;;AAEA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AAC/B,wBAAmBD,cAAc,CAAC,UAACE,KAAD;AAAA,WAAWA,KAAK,CAACC,MAAjB;AAAA,GAAD,CAAjC;AAAA,MAAQA,MAAR,mBAAQA,MAAR;;AACA,yBAA6DH,cAAc,CAAC,UAACE,KAAD;AAAA,WAAWA,KAAK,CAACE,OAAjB;AAAA,GAAD,CAA3E;AAAA,MAAQA,OAAR,oBAAQA,OAAR;AAAA,MAAiBC,aAAjB,oBAAiBA,aAAjB;AAAA,MAAgCC,wBAAhC,oBAAgCA,wBAAhC;;AAEAV,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAI,CAACQ,OAAL,EAAcL,wBAAwB,CAACI,MAAD,oBAACA,MAAM,CAAEI,cAAT,CAAxB;AACjB,GAFQ,EAEN,CAACH,OAAD,CAFM,CAAT;AAIA,MAAIE,wBAAwB,IAAI,CAACF,OAAjC,EAA0C,OAAO,KAAC,aAAD,KAAP;AAE1C,MAAQI,MAAR,GAEwBH,aAFxB,CAAQG,MAAR;AAAA,MACIC,WADJ,GAEwBJ,aAFxB,CACII,WADJ;AAAA,MAEIC,eAFJ,GAEwBL,aAFxB,CAEIK,eAFJ;AAMA,SACI,MAAC,IAAD;AAAA,eACI,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,kBAAd;AAAiC,MAAA,KAAK,EAAC;AAAvC,MADJ,EAEI,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAuB,MAAA,KAAK,EAAC;AAA7B,MAFJ,EAGI,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,WAAd;AAA0B,MAAA,KAAK,EAAC;AAAhC,MAHJ,EAII,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,cAAd;AAA6B,MAAA,KAAK,EAAC;AAAnC,MAJJ,EAKI,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,gBAAd;AAA+B,MAAA,KAAK,EAAC;AAArC,MALJ,EAMI,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAqB,MAAA,KAAK,EAAC;AAA3B,MANJ,EAOI,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAuB,MAAA,KAAK,EAAC;AAA7B,MAPJ;AAAA,IADJ;AAWH,CA3BD;;AA6BA,eAAeT,oBAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { Text, View } from 'react-native';\nimport LoadingScreen from '../../components/indicator/LoadingScreen';\nimport Detail from '../../components/item/Detail';\nimport { fetchInvoiceDetailsAsync } from '../../reducers/invoiceSlice';\nimport { useAppSelecter } from '../../store/configureStore';\n\nconst PaymentDetailsScreen = () => {\n    const { tenant } = useAppSelecter((state) => state.tenant)\n    const { invoice, paymentResult, isFetchingInvoiceDetails } = useAppSelecter((state) => state.invoice)\n\n    useEffect(() => {\n        if (!invoice) fetchInvoiceDetailsAsync(tenant?.tenantUniqueId!)\n    }, [invoice])\n\n    if (isFetchingInvoiceDetails || !invoice) return <LoadingScreen />\n\n    const { amount,\n        dateCreated,\n        referenceNumber } = paymentResult\n\n    // const { invoiceStatus, bankName, accountName, accountNumber, dateCreated, amount, referenceNumber } = invoice\n\n    return (\n        <View>\n            <Detail title='Reference Number' value=\"\" />\n            <Detail title='Status' value=\"\" />\n            <Detail title='Bank Name' value=\"\" />\n            <Detail title='Account Name' value=\"\" />\n            <Detail title='Account Number' value=\"\" />\n            <Detail title='Date' value=\"\" />\n            <Detail title='Amount' value=\"\" />\n        </View>\n    );\n}\n\nexport default PaymentDetailsScreen;"]},"metadata":{},"sourceType":"module"}