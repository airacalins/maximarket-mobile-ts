{"ast":null,"code":"import React, { useState } from 'react';\nimport routes from \"../../navigations/routes\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useAppDispatch, useAppSelecter } from \"../../store/configureStore\";\nimport colors from \"../../styles/colors\";\nimport { styles } from \"../../styles/styles\";\nimport { dateFormatter } from \"../../utils/dateFormatter\";\nimport AppButton from \"../../components/button/AppButton\";\nimport AppText from \"../../components/text/AppText\";\nimport InvoiceBadge from \"../../components/badge/InvoiceBadge\";\nimport LoadingScreen from \"../../components/indicator/LoadingScreen\";\nimport { fetchInvoiceDetailsAsync } from \"../../reducers/invoiceSlice\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar InvoiceDetailsScreen = function InvoiceDetailsScreen(_ref) {\n  var navigation = _ref.navigation;\n  var dispatch = useAppDispatch();\n\n  var _useAppSelecter = useAppSelecter(function (state) {\n    return state.tenant;\n  }),\n      tenant = _useAppSelecter.tenant,\n      isFetchingTenantDetails = _useAppSelecter.isFetchingTenantDetails,\n      isSaving = _useAppSelecter.isSaving;\n\n  var _useAppSelecter2 = useAppSelecter(function (state) {\n    return state.invoice;\n  }),\n      invoice = _useAppSelecter2.invoice,\n      isFetchingInvoiceDetails = _useAppSelecter2.isFetchingInvoiceDetails;\n\n  useState(function () {\n    if (!invoice) fetchInvoiceDetailsAsync(tenant == null ? void 0 : tenant.tenantUniqueId);\n  }, [tenant]);\n  var _ref2 = invoice,\n      amount = _ref2.amount,\n      dateCreated = _ref2.dateCreated,\n      dueDate = _ref2.dueDate,\n      invoiceItems = _ref2.invoiceItems,\n      invoiceNumber = _ref2.invoiceNumber,\n      invoiceStatus = _ref2.invoiceStatus;\n  var bg_light = styles.bg_light,\n      bg_primary = styles.bg_primary,\n      container = styles.container,\n      mx_15 = styles.mx_15,\n      my_15 = styles.my_15,\n      p_5 = styles.p_5,\n      p_15 = styles.p_15,\n      rounded = styles.rounded,\n      row_center_x_between = styles.row_center_x_between,\n      row = styles.row,\n      w_50p = styles.w_50p;\n  var darkGrey = colors.darkGrey,\n      light = colors.light;\n  if (isFetchingInvoiceDetails) return _jsx(LoadingScreen, {});\n  return _jsxs(_Fragment, {\n    children: [_jsxs(View, {\n      style: [bg_light, container, p_15, rounded],\n      children: [_jsxs(View, {\n        style: row_center_x_between,\n        children: [_jsxs(AppText, {\n          as: \"h3\",\n          bold: true,\n          children: [\"INV-\" + invoiceNumber, \" \"]\n        }), _jsx(InvoiceBadge, {\n          status: invoiceStatus\n        })]\n      }), _jsxs(AppText, {\n        as: \"h2\",\n        bold: true,\n        children: [amount, \" \"]\n      }), _jsxs(View, {\n        style: [my_15, row],\n        children: [_jsxs(View, {\n          style: w_50p,\n          children: [_jsx(AppText, {\n            as: \"h5\",\n            bold: true,\n            color: darkGrey,\n            children: \"Date\"\n          }), _jsx(AppText, {\n            as: \"h4\",\n            bold: true,\n            children: dateFormatter(dateCreated)\n          })]\n        }), _jsxs(View, {\n          style: w_50p,\n          children: [_jsx(AppText, {\n            as: \"h5\",\n            bold: true,\n            color: darkGrey,\n            children: \"Due Date\"\n          }), _jsx(AppText, {\n            as: \"h4\",\n            bold: true,\n            children: dateFormatter(dueDate)\n          })]\n        })]\n      }), _jsxs(View, {\n        style: [bg_primary, p_5, row_center_x_between],\n        children: [_jsx(AppText, {\n          as: \"h5\",\n          bold: true,\n          color: light,\n          children: \"Description\"\n        }), _jsx(AppText, {\n          as: \"h5\",\n          bold: true,\n          color: light,\n          children: \"Amount\"\n        })]\n      }), _jsx(FlatList, {\n        data: invoiceItems,\n        keyExtractor: function keyExtractor(i) {\n          return i.id;\n        },\n        renderItem: function renderItem(_ref3) {\n          var item = _ref3.item;\n          return _jsxs(View, {\n            style: [p_5, row_center_x_between],\n            children: [_jsx(AppText, {\n              as: \"h5\",\n              children: item.description\n            }), _jsx(AppText, {\n              as: \"h5\",\n              children: item.amount\n            })]\n          });\n        }\n      }), _jsxs(View, {\n        style: [p_5, row_center_x_between],\n        children: [_jsx(AppText, {\n          as: \"h5\",\n          bold: true,\n          children: \"Total\"\n        }), _jsx(AppText, {\n          as: \"h5\",\n          bold: true,\n          children: amount\n        })]\n      })]\n    }), _jsx(View, {\n      style: mx_15,\n      children: _jsx(AppButton, {\n        onPress: function onPress() {\n          return navigation.navigate(routes.PAYMENT_FORM);\n        },\n        title: \"Pay\"\n      })\n    })]\n  });\n};\n\nexport default InvoiceDetailsScreen;","map":{"version":3,"sources":["/Users/airagalias/Documents/GitHub/maximarket-mobile-ts/src/screens/invoice/InvoiceDetailsScreen.tsx"],"names":["React","useState","routes","useAppDispatch","useAppSelecter","colors","styles","dateFormatter","AppButton","AppText","InvoiceBadge","LoadingScreen","fetchInvoiceDetailsAsync","InvoiceDetailsScreen","navigation","dispatch","state","tenant","isFetchingTenantDetails","isSaving","invoice","isFetchingInvoiceDetails","tenantUniqueId","amount","dateCreated","dueDate","invoiceItems","invoiceNumber","invoiceStatus","bg_light","bg_primary","container","mx_15","my_15","p_5","p_15","rounded","row_center_x_between","row","w_50p","darkGrey","light","i","id","item","description","navigate","PAYMENT_FORM"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport routes from '../../navigations/routes';\nimport { FlatList, View } from 'react-native';\n\nimport { useAppDispatch, useAppSelecter } from '../../store/configureStore';\nimport colors from '../../styles/colors';\nimport { styles } from '../../styles/styles';\nimport { dateFormatter } from '../../utils/dateFormatter';\nimport AppButton from '../../components/button/AppButton';\nimport AppText from '../../components/text/AppText';\nimport InvoiceBadge from '../../components/badge/InvoiceBadge';\nimport LoadingScreen from '../../components/indicator/LoadingScreen';\nimport { fetchInvoiceDetailsAsync } from '../../reducers/invoiceSlice';\n\ninterface Props {\n    navigation: any\n}\n\nconst InvoiceDetailsScreen: React.FC<Props> = ({ navigation }) => {\n    const dispatch = useAppDispatch();\n    const { tenant, isFetchingTenantDetails, isSaving } = useAppSelecter((state) => state.tenant)\n    const { invoice, isFetchingInvoiceDetails } = useAppSelecter((state) => state.invoice)\n\n    useState(() => {\n        if (!invoice) fetchInvoiceDetailsAsync(tenant?.tenantUniqueId)\n    }, [tenant])\n\n    const { amount, dateCreated, dueDate, invoiceItems, invoiceNumber, invoiceStatus } = invoice!\n\n    const { bg_light, bg_primary, container, mx_15, my_15, p_5, p_15, rounded, row_center_x_between, row, w_50p } = styles;\n    const { darkGrey, light } = colors\n\n    if (isFetchingInvoiceDetails) return <LoadingScreen />\n\n    return (\n        <>\n            <View style={[bg_light, container, p_15, rounded]}>\n\n                <View style={row_center_x_between}>\n                    <AppText as=\"h3\" bold>{`INV-${invoiceNumber}`} </AppText>\n                    <InvoiceBadge status={invoiceStatus} />\n                </View>\n                <AppText as=\"h2\" bold>{amount} </AppText>\n\n                <View style={[my_15, row]}>\n                    <View style={w_50p}>\n                        <AppText as=\"h5\" bold color={darkGrey}>Date</AppText>\n                        <AppText as=\"h4\" bold>{dateFormatter(dateCreated)}</AppText>\n                    </View>\n\n                    <View style={w_50p}>\n                        <AppText as=\"h5\" bold color={darkGrey}>Due Date</AppText>\n                        <AppText as=\"h4\" bold>{dateFormatter(dueDate)}</AppText>\n                    </View>\n                </View>\n\n                <View style={[bg_primary, p_5, row_center_x_between]}>\n                    <AppText as=\"h5\" bold color={light}>Description</AppText>\n                    <AppText as=\"h5\" bold color={light}>Amount</AppText>\n                </View>\n\n                <FlatList\n                    data={invoiceItems}\n                    keyExtractor={(i) => i.id}\n                    renderItem={({ item }) =>\n                        <View style={[p_5, row_center_x_between]}>\n                            <AppText as=\"h5\">{item.description}</AppText>\n                            <AppText as=\"h5\">{item.amount}</AppText>\n                        </View>\n                    }\n                />\n\n                <View style={[p_5, row_center_x_between]}>\n                    <AppText as=\"h5\" bold>Total</AppText>\n                    <AppText as=\"h5\" bold>{amount}</AppText>\n                </View>\n\n            </View>\n\n            <View style={mx_15}>\n                <AppButton onPress={() => navigation.navigate(routes.PAYMENT_FORM)} title='Pay' />\n            </View>\n        </>\n    );\n}\n\nexport default InvoiceDetailsScreen;"]},"metadata":{},"sourceType":"module"}