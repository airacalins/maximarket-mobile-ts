{"ast":null,"code":"import React, { useEffect } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport colors from \"../../styles/colors\";\nimport { styles } from \"../../styles/styles\";\nimport { FontAwesome } from '@expo/vector-icons';\nimport AppText from \"../../components/text/AppText\";\nimport { useAppSelecter } from \"../../store/configureStore\";\nimport { useDispatch } from 'react-redux';\nimport { fetchInvoicesAsync } from \"../../reducers/invoiceSlice\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar InvoicesScreen = function InvoicesScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useAppSelecter = useAppSelecter(function (state) {\n    return state.tenant;\n  }),\n      tenant = _useAppSelecter.tenant;\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    if (!tenant) navigation.navigate(\"AuthNavigator\");\n  }, [tenant]);\n  useEffect(function () {\n    useDispatch(fetchInvoicesAsync());\n  }, []);\n  var bg_light = styles.bg_light,\n      container = styles.container,\n      me_5 = styles.me_5,\n      my_5 = styles.my_5,\n      p_15 = styles.p_15,\n      row = styles.row,\n      row_center_x = styles.row_center_x,\n      row_center_x_between = styles.row_center_x_between,\n      rounded = styles.rounded,\n      w_30 = styles.w_30;\n  var darkGrey = colors.darkGrey,\n      green = colors.green,\n      red = colors.red,\n      secondary = colors.secondary,\n      yellow = colors.yellow;\n\n  var renderIcon = function renderIcon(status) {\n    if (status == 2) {\n      _jsx(FontAwesome, {\n        name: \"check-circle\",\n        size: 30,\n        color: green\n      });\n    }\n\n    if (status == 3) {\n      _jsx(FontAwesome, {\n        name: \"times-circle\",\n        size: 30,\n        color: red\n      });\n    }\n\n    _jsx(FontAwesome, {\n      name: \"exclamation-circle\",\n      size: 30,\n      color: yellow\n    });\n  };\n\n  return _jsx(TouchableOpacity, {\n    onPress: function onPress() {\n      return handleInvoiceDetails(\"\");\n    },\n    children: _jsx(View, {\n      style: container,\n      children: _jsxs(View, {\n        style: [bg_light, my_5, p_15, row_center_x_between, rounded],\n        children: [_jsxs(View, {\n          children: [_jsx(AppText, {\n            bold: true,\n            children: \"JFJAILJF\"\n          }), _jsx(AppText, {\n            as: \"h5\",\n            bold: true,\n            color: darkGrey,\n            children: \"2022 FEB 13\"\n          })]\n        }), _jsx(AppText, {\n          as: \"h3\",\n          bold: true,\n          color: secondary,\n          children: \"20,000\"\n        })]\n      })\n    })\n  });\n};\n\nexport default InvoicesScreen;","map":{"version":3,"sources":["/Users/airagalias/Documents/GitHub/maximarket-mobile-ts/src/screens/invoice/InvoicesScreen.tsx"],"names":["React","useEffect","colors","styles","FontAwesome","AppText","useAppSelecter","useDispatch","fetchInvoicesAsync","InvoicesScreen","navigation","state","tenant","dispatch","navigate","bg_light","container","me_5","my_5","p_15","row","row_center_x","row_center_x_between","rounded","w_30","darkGrey","green","red","secondary","yellow","renderIcon","status","handleInvoiceDetails"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { Text, TouchableOpacity, View } from 'react-native';\nimport colors from '../../styles/colors';\nimport { styles } from '../../styles/styles';\nimport { FontAwesome } from '@expo/vector-icons';\nimport AppText from '../../components/text/AppText';\nimport { useAppSelecter } from '../../store/configureStore';\nimport { useDispatch } from 'react-redux';\nimport { fetchInvoicesAsync } from '../../reducers/invoiceSlice';\n\ninterface Props {\n    navigation: any\n}\n\n\nconst InvoicesScreen: React.FC<Props> = ({ navigation }) => {\n    const { tenant } = useAppSelecter((state) => state.tenant)\n    const dispatch = useDispatch()\n\n\n    useEffect(() => {\n        if (!tenant) navigation.navigate(\"AuthNavigator\")\n    }, [tenant])\n\n    useEffect(() => {\n        useDispatch(fetchInvoicesAsync())\n    }, [])\n\n    const { bg_light, container, me_5, my_5, p_15, row, row_center_x, row_center_x_between, rounded, w_30 } = styles;\n    const { darkGrey, green, red, secondary, yellow } = colors;\n\n    const renderIcon = (status: number) => {\n        if (status == 2) { <FontAwesome name=\"check-circle\" size={30} color={green} /> }\n        if (status == 3) { <FontAwesome name=\"times-circle\" size={30} color={red} /> }\n        <FontAwesome name=\"exclamation-circle\" size={30} color={yellow} />\n    }\n\n\n    return (\n        <TouchableOpacity onPress={() => handleInvoiceDetails(\"\")}>\n            <View style={container}>\n                <View style={[bg_light, my_5, p_15, row_center_x_between, rounded]}>\n                    <View>\n                        <AppText bold>JFJAILJF</AppText>\n                        <AppText as=\"h5\" bold color={darkGrey}>2022 FEB 13</AppText>\n                    </View>\n                    <AppText as=\"h3\" bold color={secondary}>20,000</AppText>\n                </View>\n            </View>\n        </TouchableOpacity>\n    );\n}\n\nexport default InvoicesScreen;"]},"metadata":{},"sourceType":"module"}