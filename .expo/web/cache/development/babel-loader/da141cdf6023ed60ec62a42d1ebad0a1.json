{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport agent from \"../api/agent\";\nvar initialState = {\n  tenant: undefined,\n  isFetchingTenantDetails: false,\n  isSaving: false,\n  contractPhotos: [],\n  isFetchingPhotos: false,\n  errorMessage: \"\"\n};\nexport var fetchTenantDetailsAsync = createAsyncThunk('tenants/fetchTenantDetailsAsync', function _callee(id, thunkAPI) {\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(agent.Tenant.details(id));\n\n        case 3:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 6:\n          _context.prev = 6;\n          _context.t0 = _context[\"catch\"](0);\n          return _context.abrupt(\"return\", thunkAPI.rejectWithValue({\n            error: _context.t0.data\n          }));\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n});\nexport var updateTenantDetailsAsync = createAsyncThunk('tenants/updateTenantDetailsAsync', function _callee2(tenant, thunkAPI) {\n  return _regeneratorRuntime.async(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(agent.Tenant.update(tenant));\n\n        case 3:\n          return _context2.abrupt(\"return\", _context2.sent);\n\n        case 6:\n          _context2.prev = 6;\n          _context2.t0 = _context2[\"catch\"](0);\n          return _context2.abrupt(\"return\", thunkAPI.rejectWithValue({\n            error: _context2.t0.data\n          }));\n\n        case 9:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n});\nexport var getTenantContractPhoto = createAsyncThunk('tenants/getTenantContractPhoto', function _callee3(id, thunkAPI) {\n  return _regeneratorRuntime.async(function _callee3$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(agent.Tenant.getContractPhotos(id));\n\n        case 3:\n          return _context3.abrupt(\"return\", _context3.sent);\n\n        case 6:\n          _context3.prev = 6;\n          _context3.t0 = _context3[\"catch\"](0);\n          return _context3.abrupt(\"return\", thunkAPI.rejectWithValue({\n            error: _context3.t0.data\n          }));\n\n        case 9:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n});\nexport var tenantSlice = createSlice({\n  name: 'tenant',\n  initialState: initialState,\n  reducers: {\n    resetTenant: function resetTenant(state, action) {\n      state.tenant = undefined;\n    }\n  },\n  extraReducers: function extraReducers(builder) {\n    builder.addCase(fetchTenantDetailsAsync.pending, function (state, action) {\n      state.isFetchingTenantDetails = true;\n    });\n    builder.addCase(fetchTenantDetailsAsync.fulfilled, function (state, action) {\n      state.tenant = action.payload;\n      state.isFetchingTenantDetails = false;\n    });\n    builder.addCase(fetchTenantDetailsAsync.rejected, function (state, action) {\n      state.isFetchingTenantDetails = false;\n      state.errorMessage = \"Invalid Account Number\";\n    });\n    builder.addCase(getTenantContractPhoto.pending, function (state, action) {\n      state.isFetchingPhotos = true;\n    });\n    builder.addCase(getTenantContractPhoto.fulfilled, function (state, action) {\n      state.contractPhotos = action.payload;\n      state.isFetchingPhotos = false;\n    });\n    builder.addCase(getTenantContractPhoto.rejected, function (state, action) {\n      state.errorMessage = \"No contract photo\";\n      state.isFetchingPhotos = false;\n    });\n    builder.addCase(updateTenantDetailsAsync.pending, function (state, action) {\n      state.isSaving = true;\n    });\n    builder.addCase(updateTenantDetailsAsync.fulfilled, function (state, action) {\n      state.isSaving = false;\n    });\n    builder.addCase(updateTenantDetailsAsync.rejected, function (state, action) {\n      state.isSaving = false;\n    });\n  }\n});\nvar resetTenant = tenantSlice.actions.resetTenant;\nexport { resetTenant };","map":{"version":3,"sources":["/Users/airagalias/Documents/GitHub/maximarket-mobile-ts/src/reducers/tenantSlice.ts"],"names":["createAsyncThunk","createSlice","agent","initialState","tenant","undefined","isFetchingTenantDetails","isSaving","contractPhotos","isFetchingPhotos","errorMessage","fetchTenantDetailsAsync","id","thunkAPI","Tenant","details","rejectWithValue","error","data","updateTenantDetailsAsync","update","getTenantContractPhoto","getContractPhotos","tenantSlice","name","reducers","resetTenant","state","action","extraReducers","builder","addCase","pending","fulfilled","payload","rejected","actions"],"mappings":"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","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\nimport agent from \"../api/agent\";\nimport { ITenant, IUpdateTenantInput } from \"../models/Tenant\";\nimport { IContractPhotos } from \"../models/TenantContract\";\n\nexport interface ITenantState {\n  tenant?: ITenant;\n  isFetchingTenantDetails: boolean;\n  isSaving: boolean;\n  isFetchingPhotos: boolean;\n  contractPhotos: IContractPhotos[];\n  errorMessage: string\n}\n\nconst initialState: ITenantState = {\n  tenant: undefined,\n  isFetchingTenantDetails: false,\n  isSaving: false,\n  contractPhotos:[],\n  isFetchingPhotos: false,\n  errorMessage: \"\"\n}\n\nexport const fetchTenantDetailsAsync = createAsyncThunk<ITenant, string>(\n  'tenants/fetchTenantDetailsAsync',\n  async (id, thunkAPI) => {\n    try {\n      return await agent.Tenant.details(id);\n    } catch (error: any) {\n      return thunkAPI.rejectWithValue({error: error.data})\n    }\n  }\n)\n\nexport const updateTenantDetailsAsync = createAsyncThunk<ITenant, IUpdateTenantInput>(\n  'tenants/updateTenantDetailsAsync',\n  async (tenant, thunkAPI) => {\n    try {\n      return await agent.Tenant.update(tenant);\n    } catch (error: any) {\n      return thunkAPI.rejectWithValue({error: error.data})\n    }\n  }\n)\n\nexport const getTenantContractPhoto = createAsyncThunk<any, string>(\n  'tenants/getTenantContractPhoto',\n  async (id, thunkAPI) => {\n    try {\n      return await agent.Tenant.getContractPhotos(id);\n    } catch (error: any) {\n      return thunkAPI.rejectWithValue({error: error.data})\n    }\n  }\n)\n\nexport const tenantSlice = createSlice({\n  name: 'tenant',\n  initialState,\n  reducers: {\n    resetTenant(state, action) {\n      state.tenant = undefined;\n    },\n  },\n  extraReducers: (builder => {\n\n    \n    builder.addCase(fetchTenantDetailsAsync.pending, (state, action) => {\n      state.isFetchingTenantDetails = true;\n    });\n    builder.addCase(fetchTenantDetailsAsync.fulfilled, (state, action) => {\n      state.tenant = action.payload;\n      state.isFetchingTenantDetails = false;\n    });\n    builder.addCase(fetchTenantDetailsAsync.rejected, (state, action) => {\n      state.isFetchingTenantDetails = false;\n      state.errorMessage = \"Invalid Account Number\";\n    });\n    \n\n    builder.addCase(getTenantContractPhoto.pending, (state, action) => {\n      state.isFetchingPhotos = true;\n    });\n\n    builder.addCase(getTenantContractPhoto.fulfilled, (state, action) => {\n      state.contractPhotos = action.payload;\n      state.isFetchingPhotos = false;\n    });\n    \n    builder.addCase(getTenantContractPhoto.rejected, (state, action) => {\n      state.errorMessage = \"No contract photo\";\n      state.isFetchingPhotos = false;\n    });\n\n    builder.addCase(updateTenantDetailsAsync.pending, (state, action) => {\n      state.isSaving = true;\n  });\n\n  builder.addCase(updateTenantDetailsAsync.fulfilled, (state, action) => {\n      state.isSaving = false;\n  });\n\n  builder.addCase(updateTenantDetailsAsync.rejected, (state, action) => {\n      state.isSaving = false;\n  });\n\n\n  })\n})\n\nexport const { resetTenant } = tenantSlice.actions;\n"]},"metadata":{},"sourceType":"module"}