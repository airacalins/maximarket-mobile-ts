{"ast":null,"code":"import React, { useEffect } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport colors from \"../../styles/colors\";\nimport { styles } from \"../../styles/styles\";\nimport AppText from \"../../components/text/AppText\";\nimport { useAppDispatch, useAppSelecter } from \"../../store/configureStore\";\nimport { fetchInvoicesAsync } from \"../../reducers/invoiceSlice\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar InvoicesScreen = function InvoicesScreen(_ref) {\n  var navigation = _ref.navigation;\n  var dispatch = useAppDispatch();\n\n  var _useAppSelecter = useAppSelecter(function (state) {\n    return state.tenant;\n  }),\n      tenant = _useAppSelecter.tenant;\n\n  var _useAppSelecter2 = useAppSelecter(function (state) {\n    return state.invoice;\n  }),\n      invoices = _useAppSelecter2.invoices;\n\n  useEffect(function () {\n    if (!tenant) navigation.navigate(\"AuthNavigator\");\n  }, [tenant]);\n  useEffect(function () {\n    dispatch(fetchInvoicesAsync(tenant == null ? void 0 : tenant.id));\n  }, []);\n  var bg_light = styles.bg_light,\n      container = styles.container,\n      my_5 = styles.my_5,\n      p_15 = styles.p_15,\n      row_center_x_between = styles.row_center_x_between,\n      rounded = styles.rounded;\n  var darkGrey = colors.darkGrey,\n      green = colors.green,\n      red = colors.red,\n      secondary = colors.secondary,\n      yellow = colors.yellow;\n  return _jsx(TouchableOpacity, {\n    children: _jsx(View, {\n      style: container,\n      children: _jsxs(View, {\n        style: [bg_light, my_5, p_15, row_center_x_between, rounded],\n        children: [_jsxs(View, {\n          children: [_jsx(AppText, {\n            bold: true,\n            children: \"JFJAILJF\"\n          }), _jsx(AppText, {\n            as: \"h5\",\n            bold: true,\n            color: darkGrey,\n            children: \"2022 FEB 13\"\n          })]\n        }), _jsx(AppText, {\n          as: \"h3\",\n          bold: true,\n          color: secondary,\n          children: \"20,000\"\n        })]\n      })\n    })\n  });\n};\n\nexport default InvoicesScreen;","map":{"version":3,"sources":["/Users/airagalias/Documents/GitHub/maximarket-mobile-ts/src/screens/invoice/InvoicesScreen.tsx"],"names":["React","useEffect","colors","styles","AppText","useAppDispatch","useAppSelecter","fetchInvoicesAsync","InvoicesScreen","navigation","dispatch","state","tenant","invoice","invoices","navigate","id","bg_light","container","my_5","p_15","row_center_x_between","rounded","darkGrey","green","red","secondary","yellow"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,OAAOC,MAAP;AACA,SAASC,MAAT;AAEA,OAAOC,OAAP;AACA,SAASC,cAAT,EAAyBC,cAAzB;AAEA,SAASC,kBAAT;;;;AAMA,IAAMC,cAA+B,GAAG,SAAlCA,cAAkC,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AACxD,MAAMC,QAAQ,GAAGL,cAAc,EAA/B;;AACA,wBAAmBC,cAAc,CAAC,UAACK,KAAD;AAAA,WAAWA,KAAK,CAACC,MAAjB;AAAA,GAAD,CAAjC;AAAA,MAAQA,MAAR,mBAAQA,MAAR;;AACA,yBAAqBN,cAAc,CAAC,UAACK,KAAD;AAAA,WAAWA,KAAK,CAACE,OAAjB;AAAA,GAAD,CAAnC;AAAA,MAAQC,QAAR,oBAAQA,QAAR;;AAGAb,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAI,CAACW,MAAL,EAAaH,UAAU,CAACM,QAAX,CAAoB,eAApB;AAChB,GAFQ,EAEN,CAACH,MAAD,CAFM,CAAT;AAIAX,EAAAA,SAAS,CAAC,YAAM;AACZS,IAAAA,QAAQ,CAACH,kBAAkB,CAACK,MAAD,oBAACA,MAAM,CAAEI,EAAT,CAAnB,CAAR;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,MAAQC,QAAR,GAA2Ed,MAA3E,CAAQc,QAAR;AAAA,MAAkBC,SAAlB,GAA2Ef,MAA3E,CAAkBe,SAAlB;AAAA,MAA6BC,IAA7B,GAA2EhB,MAA3E,CAA6BgB,IAA7B;AAAA,MAAmCC,IAAnC,GAA2EjB,MAA3E,CAAmCiB,IAAnC;AAAA,MAAyCC,oBAAzC,GAA2ElB,MAA3E,CAAyCkB,oBAAzC;AAAA,MAA+DC,OAA/D,GAA2EnB,MAA3E,CAA+DmB,OAA/D;AACA,MAAQC,QAAR,GAAoDrB,MAApD,CAAQqB,QAAR;AAAA,MAAkBC,KAAlB,GAAoDtB,MAApD,CAAkBsB,KAAlB;AAAA,MAAyBC,GAAzB,GAAoDvB,MAApD,CAAyBuB,GAAzB;AAAA,MAA8BC,SAA9B,GAAoDxB,MAApD,CAA8BwB,SAA9B;AAAA,MAAyCC,MAAzC,GAAoDzB,MAApD,CAAyCyB,MAAzC;AAGA,SACI,KAAC,gBAAD;AAAA,cACI,KAAC,IAAD;AAAM,MAAA,KAAK,EAAET,SAAb;AAAA,gBACI,MAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACD,QAAD,EAAWE,IAAX,EAAiBC,IAAjB,EAAuBC,oBAAvB,EAA6CC,OAA7C,CAAb;AAAA,mBACI,MAAC,IAAD;AAAA,qBACI,KAAC,OAAD;AAAS,YAAA,IAAI,MAAb;AAAA;AAAA,YADJ,EAEI,KAAC,OAAD;AAAS,YAAA,EAAE,EAAC,IAAZ;AAAiB,YAAA,IAAI,MAArB;AAAsB,YAAA,KAAK,EAAEC,QAA7B;AAAA;AAAA,YAFJ;AAAA,UADJ,EAKI,KAAC,OAAD;AAAS,UAAA,EAAE,EAAC,IAAZ;AAAiB,UAAA,IAAI,MAArB;AAAsB,UAAA,KAAK,EAAEG,SAA7B;AAAA;AAAA,UALJ;AAAA;AADJ;AADJ,IADJ;AAaH,CA/BD;;AAiCA,eAAelB,cAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { Text, TouchableOpacity, View } from 'react-native';\nimport colors from '../../styles/colors';\nimport { styles } from '../../styles/styles';\nimport { FontAwesome } from '@expo/vector-icons';\nimport AppText from '../../components/text/AppText';\nimport { useAppDispatch, useAppSelecter } from '../../store/configureStore';\nimport { useDispatch } from 'react-redux';\nimport { fetchInvoicesAsync } from '../../reducers/invoiceSlice';\n\ninterface Props {\n    navigation: any\n}\n\nconst InvoicesScreen: React.FC<Props> = ({ navigation }) => {\n    const dispatch = useAppDispatch()\n    const { tenant } = useAppSelecter((state) => state.tenant)\n    const { invoices } = useAppSelecter((state) => state.invoice)\n\n\n    useEffect(() => {\n        if (!tenant) navigation.navigate(\"AuthNavigator\")\n    }, [tenant])\n\n    useEffect(() => {\n        dispatch(fetchInvoicesAsync(tenant?.id!))\n    }, [])\n\n    const { bg_light, container, my_5, p_15, row_center_x_between, rounded } = styles;\n    const { darkGrey, green, red, secondary, yellow } = colors;\n\n\n    return (\n        <TouchableOpacity>\n            <View style={container}>\n                <View style={[bg_light, my_5, p_15, row_center_x_between, rounded]}>\n                    <View>\n                        <AppText bold>JFJAILJF</AppText>\n                        <AppText as=\"h5\" bold color={darkGrey}>2022 FEB 13</AppText>\n                    </View>\n                    <AppText as=\"h3\" bold color={secondary}>20,000</AppText>\n                </View>\n            </View>\n        </TouchableOpacity>\n    );\n}\n\nexport default InvoicesScreen;"]},"metadata":{},"sourceType":"module"}