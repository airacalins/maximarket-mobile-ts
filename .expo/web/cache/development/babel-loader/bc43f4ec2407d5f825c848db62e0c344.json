{"ast":null,"code":"import _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nimport React, { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport LoadingScreen from \"../../components/indicator/LoadingScreen\";\nimport Detail from \"../../components/item/Detail\";\nimport { fetchInvoiceDetailsAsync } from \"../../reducers/invoiceSlice\";\nimport { useAppSelecter } from \"../../store/configureStore\";\nimport { styles } from \"../../styles/styles\";\nimport { dateFormatter } from \"../../utils/dateFormatter\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar PaymentReceiptScreen = function PaymentReceiptScreen(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  var _useAppSelecter = useAppSelecter(function (state) {\n    return state.tenant;\n  }),\n      tenant = _useAppSelecter.tenant;\n\n  var _useAppSelecter2 = useAppSelecter(function (state) {\n    return state.invoice;\n  }),\n      invoice = _useAppSelecter2.invoice,\n      paymentResult = _useAppSelecter2.paymentResult,\n      isFetchingInvoiceDetails = _useAppSelecter2.isFetchingInvoiceDetails;\n\n  var _ref2 = paymentResult,\n      amount = _ref2.amount,\n      dateCreated = _ref2.dateCreated,\n      referenceNumber = _ref2.referenceNumber;\n  var container = styles.container,\n      flex_1 = styles.flex_1;\n  useEffect(function () {\n    if (!invoice) fetchInvoiceDetailsAsync(tenant == null ? void 0 : tenant.tenantUniqueId);\n  }, [invoice]);\n  if (!paymentResult) return _jsx(LoadingScreen, {});\n  return _jsxs(View, {\n    style: [container, flex_1],\n    children: [_jsx(Detail, {\n      title: \"Date\",\n      value: dateFormatter(dateCreated)\n    }), _jsx(Detail, {\n      title: \"Amount\",\n      value: amount\n    }), _jsx(Detail, {\n      title: \"Reference Number\",\n      value: referenceNumber\n    })]\n  });\n};\n\nexport default PaymentReceiptScreen;","map":{"version":3,"sources":["/Users/airagalias/Documents/GitHub/maximarket-mobile-ts/src/screens/payment/PaymentReceiptScreen.tsx"],"names":["React","useEffect","LoadingScreen","Detail","fetchInvoiceDetailsAsync","useAppSelecter","styles","dateFormatter","PaymentReceiptScreen","state","tenant","invoice","paymentResult","isFetchingInvoiceDetails","amount","dateCreated","referenceNumber","container","flex_1","tenantUniqueId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAOC,aAAP;AACA,OAAOC,MAAP;AACA,SAASC,wBAAT;AACA,SAASC,cAAT;AACA,SAASC,MAAT;AACA,SAASC,aAAT;;;;AAEA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,OAAS;AAAA;;AAElC,wBAAmBH,cAAc,CAAC,UAACI,KAAD;AAAA,WAAWA,KAAK,CAACC,MAAjB;AAAA,GAAD,CAAjC;AAAA,MAAQA,MAAR,mBAAQA,MAAR;;AACA,yBAA6DL,cAAc,CAAC,UAACI,KAAD;AAAA,WAAWA,KAAK,CAACE,OAAjB;AAAA,GAAD,CAA3E;AAAA,MAAQA,OAAR,oBAAQA,OAAR;AAAA,MAAiBC,aAAjB,oBAAiBA,aAAjB;AAAA,MAAgCC,wBAAhC,oBAAgCA,wBAAhC;;AAEA,cAAiDD,aAAjD;AAAA,MAAQE,MAAR,SAAQA,MAAR;AAAA,MAAgBC,WAAhB,SAAgBA,WAAhB;AAAA,MAA6BC,eAA7B,SAA6BA,eAA7B;AACA,MAAQC,SAAR,GAA8BX,MAA9B,CAAQW,SAAR;AAAA,MAAmBC,MAAnB,GAA8BZ,MAA9B,CAAmBY,MAAnB;AACAjB,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAI,CAACU,OAAL,EAAcP,wBAAwB,CAACM,MAAD,oBAACA,MAAM,CAAES,cAAT,CAAxB;AACjB,GAFQ,EAEN,CAACR,OAAD,CAFM,CAAT;AAIA,MAAI,CAACC,aAAL,EAAoB,OAAO,KAAC,aAAD,KAAP;AAGpB,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACK,SAAD,EAAYC,MAAZ,CAAb;AAAA,eACI,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAqB,MAAA,KAAK,EAAEX,aAAa,CAACQ,WAAD;AAAzC,MADJ,EAEI,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAuB,MAAA,KAAK,EAAED;AAA9B,MAFJ,EAGI,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,kBAAd;AAAiC,MAAA,KAAK,EAAEE;AAAxC,MAHJ;AAAA,IADJ;AAOH,CArBD;;AAuBA,eAAeR,oBAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { View } from 'react-native';\nimport LoadingScreen from '../../components/indicator/LoadingScreen';\nimport Detail from '../../components/item/Detail';\nimport { fetchInvoiceDetailsAsync } from '../../reducers/invoiceSlice';\nimport { useAppSelecter } from '../../store/configureStore';\nimport { styles } from '../../styles/styles';\nimport { dateFormatter } from '../../utils/dateFormatter';\n\nconst PaymentReceiptScreen = ({ }) => {\n\n    const { tenant } = useAppSelecter((state) => state.tenant)\n    const { invoice, paymentResult, isFetchingInvoiceDetails } = useAppSelecter((state) => state.invoice)\n\n    const { amount, dateCreated, referenceNumber } = paymentResult!\n    const { container, flex_1 } = styles\n    useEffect(() => {\n        if (!invoice) fetchInvoiceDetailsAsync(tenant?.tenantUniqueId!)\n    }, [invoice])\n\n    if (!paymentResult) return <LoadingScreen />\n\n\n    return (\n        <View style={[container, flex_1]}>\n            <Detail title='Date' value={dateFormatter(dateCreated)} />\n            <Detail title='Amount' value={amount} />\n            <Detail title='Reference Number' value={referenceNumber} />\n        </View>\n    );\n}\n\nexport default PaymentReceiptScreen;"]},"metadata":{},"sourceType":"module"}