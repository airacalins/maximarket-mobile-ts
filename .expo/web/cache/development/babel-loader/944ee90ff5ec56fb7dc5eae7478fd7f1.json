{"ast":null,"code":"import _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nimport React, { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport AppText from \"../../components/text/AppText\";\nimport { styles } from \"../../styles/styles\";\nimport { useAppSelecter } from \"../../store/configureStore\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar AnnouncementDetailsScreen = function AnnouncementDetailsScreen(_ref) {\n  var route = _ref.route;\n\n  var _useAppSelecter = useAppSelecter(function (state) {\n    return state.tenant;\n  }),\n      tenant = _useAppSelecter.tenant;\n\n  var _useAppSelecter2 = useAppSelecter(function (state) {\n    return state.announcement;\n  }),\n      announcements = _useAppSelecter2.announcements,\n      isFetchingAnnouncements = _useAppSelecter2.isFetchingAnnouncements;\n\n  var announcementId = route.params.announcementId;\n  var dispatch = useDispatch();\n  useEffect(function () {\n    if (!tenant) navigation.navigate(\"AuthNavigator\");\n  }, [tenant]);\n  useEffect(function () {}, [announcementId]);\n\n  _objectDestructuringEmpty(styles);\n\n  return _jsxs(View, {\n    children: [_jsx(AppText, {\n      children: \"Title\"\n    }), _jsx(AppText, {\n      children: \"Subject\"\n    })]\n  });\n};\n\nexport default AnnouncementDetailsScreen;","map":{"version":3,"sources":["/Users/airagalias/Documents/GitHub/maximarket-mobile-ts/src/screens/announcement/AnnouncementDetailsScreen.tsx"],"names":["React","useEffect","AppText","styles","useAppSelecter","AnnouncementDetailsScreen","route","state","tenant","announcement","announcements","isFetchingAnnouncements","announcementId","params","dispatch","useDispatch","navigation","navigate"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAOC,OAAP;AACA,SAASC,MAAT;AACA,SAASC,cAAT;;;;AAMA,IAAMC,yBAA0C,GAAG,SAA7CA,yBAA6C,OAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAC9D,wBAAmBF,cAAc,CAAC,UAACG,KAAD;AAAA,WAAWA,KAAK,CAACC,MAAjB;AAAA,GAAD,CAAjC;AAAA,MAAQA,MAAR,mBAAQA,MAAR;;AAEA,yBAAmDJ,cAAc,CAAC,UAACG,KAAD;AAAA,WAAWA,KAAK,CAACE,YAAjB;AAAA,GAAD,CAAjE;AAAA,MAAQC,aAAR,oBAAQA,aAAR;AAAA,MAAuBC,uBAAvB,oBAAuBA,uBAAvB;;AACA,MAAQC,cAAR,GAA2BN,KAAK,CAACO,MAAjC,CAAQD,cAAR;AAEA,MAAME,QAAQ,GAAGC,WAAW,EAA5B;AAGAd,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAI,CAACO,MAAL,EAAaQ,UAAU,CAACC,QAAX,CAAoB,eAApB;AAChB,GAFQ,EAEN,CAACT,MAAD,CAFM,CAAT;AAGAP,EAAAA,SAAS,CAAC,YAAM,CAAG,CAAV,EAAY,CAACW,cAAD,CAAZ,CAAT;;AAEA,4BAAYT,MAAZ;;AAEA,SACI,MAAC,IAAD;AAAA,eACI,KAAC,OAAD;AAAA;AAAA,MADJ,EAEI,KAAC,OAAD;AAAA;AAAA,MAFJ;AAAA,IADJ;AAMH,CAtBD;;AAwBA,eAAeE,yBAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { Text, View } from 'react-native';\nimport AppText from '../../components/text/AppText';\nimport { styles } from '../../styles/styles';\nimport { useAppSelecter } from '../../store/configureStore';\n\ninterface Props {\n    route: any\n}\n\nconst AnnouncementDetailsScreen: React.FC<Props> = ({ route }) => {\n    const { tenant } = useAppSelecter((state) => state.tenant)\n\n    const { announcements, isFetchingAnnouncements } = useAppSelecter((state) => state.announcement)\n    const { announcementId } = route.params;\n\n    const dispatch = useDispatch()\n\n\n    useEffect(() => {\n        if (!tenant) navigation.navigate(\"AuthNavigator\")\n    }, [tenant])\n    useEffect(() => { }, [announcementId])\n\n    const { } = styles;\n\n    return (\n        <View>\n            <AppText>Title</AppText>\n            <AppText>Subject</AppText>\n        </View>\n    );\n}\n\nexport default AnnouncementDetailsScreen;"]},"metadata":{},"sourceType":"module"}